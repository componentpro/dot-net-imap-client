<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ComponentPro.Mail</name>
    </assembly>
    <members>
        <member name="T:ComponentPro.Licensing.Mail.UltimateLicenseExceptionStatus">
            <summary>
            License check status.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="F:ComponentPro.Licensing.Mail.UltimateLicenseExceptionStatus.InvalidKey">
            <summary>
            Invalid license key.
            </summary>
        </member>
        <member name="F:ComponentPro.Licensing.Mail.UltimateLicenseExceptionStatus.InvalidDate">
            <summary>
            Expiry date is invalid.
            </summary>
        </member>
        <member name="F:ComponentPro.Licensing.Mail.UltimateLicenseExceptionStatus.LicenseExpired">
            <summary>
            License is expired.
            </summary>
        </member>
        <member name="T:ComponentPro.Licensing.Mail.UltimateLicenseException">
            <summary>Represents the License Exception.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:ComponentPro.Licensing.Mail.UltimateLicenseException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Licensing.Mail.UltimateLicenseException"></see> class with the specified error message.</summary>
            <param name="message">A <see cref="T:System.String"></see> that describes the error that occurred.</param>
        </member>
        <member name="M:ComponentPro.Licensing.Mail.UltimateLicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Licensing.Mail.UltimateLicenseException"></see> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> and <see cref="T:System.Runtime.Serialization.StreamingContext"></see> classes. </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that contains the information required to serialize the new <see cref="T:ComponentPro.Licensing.Mail.UltimateLicenseException"></see>. </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains the source and destination of the serialized stream associated with the new instance. </param>
        </member>
        <member name="M:ComponentPro.Licensing.Mail.UltimateLicenseException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Licensing.Mail.UltimateLicenseException"></see> class with the specified error message and inner exception.</summary>
            <param name="message">A <see cref="T:System.String"></see> that describes the error that occurred.</param>
            <param name="innerException">The exception that is the cause of the current exception. </param>
        </member>
        <member name="M:ComponentPro.Licensing.Mail.UltimateLicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> instance with the _data needed to serialize the <see cref="T:ComponentPro.Licensing.Mail.UltimateLicenseException"></see>.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with _data. </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that specifies the destination for this serialization.</param>
        </member>
        <member name="P:ComponentPro.Licensing.Mail.UltimateLicenseException.Status">
            <summary>Gets the error code.</summary>
            <returns>An <see cref="T:ComponentPro.Licensing.Mail.UltimateLicenseExceptionStatus"></see> value that indicates the error that occurred.</returns>
        </member>
        <member name="T:ComponentPro.Licensing.Mail.UltimateLicenseManager">
            <summary>
            ComponentPro License Manager.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:ComponentPro.Licensing.Mail.UltimateLicenseManager.SetLicenseKey(System.String)">
            <summary>
            Sets the trial license key.
            </summary>
            <param name="licenseKey">The license key string.</param>
        </member>
        <member name="P:ComponentPro.Licensing.Mail.UltimateLicenseManager.RemainingDays">
            <summary>
            Gets remaining trial days.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailClientState">
            <summary>
            Defines State of the <see cref="T:ComponentPro.Net.Mail.Imap"/>, <see cref="T:ComponentPro.Net.Mail.Pop3"/>, and <see cref="T:ComponentPro.Net.Mail.Smtp"/> objects.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientState.Disconnected">
            <summary>Client is not connected.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientState.Connecting">
            <summary>Connecting to server.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientState.Ready">
            <summary>Server is ready and awaiting commands.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientState.Sending">
            <summary>Sending command or data to the server.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientState.Reading">
            <summary>Waiting for response or receiving response or data.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientState.Disposed">
            <summary>Object is disposed and must not be used.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientState.Downloading">
            <summary>
            Receiving multiline response data. Available for <see cref="T:ComponentPro.Net.Mail.Pop3"/> object only.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientState.Pipelining">
            <summary>Pipelining. For <see cref="T:ComponentPro.Net.Mail.Smtp"/> object only.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientState.Processing">
            <summary>
            Received response is being processed. For <see cref="T:ComponentPro.Net.Mail.Smtp"/> object only.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailClientTransferState">
            <summary>
            Defines the mail client transfer state.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientTransferState.None">
            <summary>No transfer pending.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientTransferState.Downloading">
            <summary>
            Client is downloading data from server. Only for <see cref="T:ComponentPro.Net.Mail.Imap"/> and <see cref="T:ComponentPro.Net.Mail.Pop3"/>.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientTransferState.Uploading">
            <summary>
            Client is uploading data to server. Only for <see cref="T:ComponentPro.Net.Mail.Imap"/>.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientTransferState.Sending">
            <summary>
            <see cref="T:ComponentPro.Net.Mail.Smtp"/> client is sending a message. Only for <see cref="T:ComponentPro.Net.Mail.Smtp"/>.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailClientStateChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.Imap.StateChanged"/>, <see cref="E:ComponentPro.Net.Mail.Pop3.StateChanged"/>, and <see cref="E:ComponentPro.Net.Mail.Smtp.StateChanged"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.MailClientStateChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailClientStateChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:ComponentPro.Net.Mail.Imap.StateChanged"/>, <see cref="E:ComponentPro.Net.Mail.Pop3.StateChanged"/>, and <see cref="E:ComponentPro.Net.Mail.Smtp.StateChanged"/>  events.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailClientStateChangedEventArgs.OldState">
            <summary>
            Gets the old state.
            </summary>
            <value>The state that was changed.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailClientStateChangedEventArgs.State">
            <summary>
            Gets the new state.
            </summary>
            <value>The new and current state.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.Imap">
            <summary>
            Provides members for connecting to an IMAP4 server, searching, downloading, uploading e-mail messages. In addition to managing e-mail messages, it also allows you to manage IMAP mailbox easily.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Imap.DefaultPort">
            <summary>
            Default IMAP port (143).
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Imap.DefaultImplicitSslPort">
            <summary>
            Default IMAP/Implicit SSL port (993).
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:ComponentPro.Net.Mail.Imap"/>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing"><b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnAuthenticateCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.AuthenticateCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(ComponentPro.Net.Mail.ImapAuthenticationMethod,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the user to the remote IMAP server using the specified authentication method that does not require credentials. 
            Only NTLM, GSSAPI and External methods are supported.
            </summary>
            <param name="authenticationMethod">The IMAP authentication method.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(ComponentPro.Net.Mail.ImapAuthenticationMethod,System.Object)">
            <summary>
            Asynchronously authenticates the user to the remote IMAP server using the specified authentication method that does not require credentials. 
            Only NTLM, GSSAPI and External methods are supported.
            </summary>
            <param name="authenticationMethod">The IMAP authentication method.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(ComponentPro.Net.Mail.ImapAuthenticationMethod)">
            <summary>
            Asynchronously authenticates the user to the remote IMAP server using the specified authentication method that does not require credentials. 
            Only NTLM, GSSAPI and External methods are supported.
            </summary>
            <param name="authenticationMethod">The IMAP authentication method.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(System.String,ComponentPro.Net.Mail.ImapAuthenticationMethod,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the user to the IMAP server using an OAuth token.
            </summary>
            <param name="token">The authentication token.</param>
            <param name="authenticationMethod">The IMAP authentication method.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(System.String,ComponentPro.Net.Mail.ImapAuthenticationMethod,System.Object)">
            <summary>
            Asynchronously authenticates the user to the IMAP server using an OAuth token.
            </summary>
            <param name="token">The authentication token.</param>
            <param name="authenticationMethod">The IMAP authentication method.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(System.String,ComponentPro.Net.Mail.ImapAuthenticationMethod)">
            <summary>
            Asynchronously authenticates the user to the IMAP server using an OAuth token.
            </summary>
            <param name="token">The authentication token.</param>
            <param name="authenticationMethod">The IMAP authentication method.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(System.String,System.String,ComponentPro.Net.Mail.ImapAuthenticationMethod,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote IMAP server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The username.</param>
            <param name="password">Password for the given username.</param>
            <param name="authenticationMethod">The IMAP authentication method.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(System.String,System.String,ComponentPro.Net.Mail.ImapAuthenticationMethod,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote IMAP server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The username.</param>
            <param name="password">Password for the given username.</param>
            <param name="authenticationMethod">The IMAP authentication method.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(System.String,System.String,ComponentPro.Net.Mail.ImapAuthenticationMethod)">
            <summary>
            Asynchronously authenticates the specified user to the remote IMAP server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The username.</param>
            <param name="password">Password for the given username.</param>
            <param name="authenticationMethod">The IMAP authentication method.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously Authenticates the specified user to the IMAP server using GSSAPI.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Asynchronously Authenticates the specified user to the IMAP server using GSSAPI.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String)">
            <summary>
            Asynchronously Authenticates the specified user to the IMAP server using GSSAPI.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote IMAP server with the specified credentials.
            </summary>
            <param name="userName">The username.</param>
            <param name="password">Password for the given username.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote IMAP server with the specified credentials.
            </summary>
            <param name="userName">The username.</param>
            <param name="password">Password for the given username.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.AuthenticateAsync(System.String,System.String)">
            <summary>
            Asynchronously authenticates the specified user to the remote IMAP server with the specified credentials.
            </summary>
            <param name="userName">The username.</param>
            <param name="password">Password for the given username.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnConnectCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.String})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.ConnectCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to an IMAP4 server on the standard IMAP4 port (143).
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,System.Object)">
            <summary>
            Asynchronously connects to an IMAP4 server on the standard IMAP4 port (143).
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String)">
            <summary>
            Asynchronously connects to an IMAP4 server on the standard IMAP4 port (143).
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to the IMAP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. The standard IMAP4 port is 143. For TLS/SSL connections, dedicated port is 993.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,System.Int32,System.Object)">
            <summary>
            Asynchronously connects to the IMAP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. The standard IMAP4 port is 143. For TLS/SSL connections, dedicated port is 993.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,System.Int32)">
            <summary>
            Asynchronously connects to the IMAP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. The standard IMAP4 port is 143. For TLS/SSL connections, dedicated port is 993.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,System.Int32,ComponentPro.Net.SecurityMode,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronous connects to the TLS/SSL IMAP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. The standard IMAP4 port is 143. For TLS/SSL connections, dedicated port is 993.</param>
            <param name="security">The security mode.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,System.Int32,ComponentPro.Net.SecurityMode,System.Object)">
            <summary>
            Asynchronous connects to the TLS/SSL IMAP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. The standard IMAP4 port is 143. For TLS/SSL connections, dedicated port is 993.</param>
            <param name="security">The security mode.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,System.Int32,ComponentPro.Net.SecurityMode)">
            <summary>
            Asynchronous connects to the TLS/SSL IMAP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. The standard IMAP4 port is 143. For TLS/SSL connections, dedicated port is 993.</param>
            <param name="security">The security mode.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,ComponentPro.Net.SecurityMode,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to the IMAP server. Use a port corresponding to the specified security mode.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="security">The security type.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,ComponentPro.Net.SecurityMode,System.Object)">
            <summary>
            Asynchronously connects to the IMAP server. Use a port corresponding to the specified security mode.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="security">The security type.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ConnectAsync(System.String,ComponentPro.Net.SecurityMode)">
            <summary>
            Asynchronously connects to the IMAP server. Use a port corresponding to the specified security mode.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="security">The security type.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnDisconnectCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.String})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.DisconnectCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DisconnectAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously disconnects from the IMAP server and returns exit message from the server.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DisconnectAsync(System.Object)">
            <summary>
            Asynchronously disconnects from the IMAP server and returns exit message from the server.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DisconnectAsync">
            <summary>
            Asynchronously disconnects from the IMAP server and returns exit message from the server.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnUpgradeConnectionCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.UpgradeConnectionCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UpgradeConnectionAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously secures the connection with TLS/SSL using default parameters.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UpgradeConnectionAsync(System.Object)">
            <summary>
            Asynchronously secures the connection with TLS/SSL using default parameters.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UpgradeConnectionAsync">
            <summary>
            Asynchronously secures the connection with TLS/SSL using default parameters.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnReadResponseCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.ImapResponse})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.ReadResponseCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:ComponentPro.ExtendedAsyncCompletedEventArgs`1"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ReadResponseAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapResponse},System.Object)">
            <summary>
            Asynchronously returns the response of the IMAP server to the command.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ReadResponseAsync(System.Object)">
            <summary>
            Asynchronously returns the response of the IMAP server to the command.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ReadResponseAsync">
            <summary>
            Asynchronously returns the response of the IMAP server to the command.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnSendCommandCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.SendCommandCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SendCommandAsync(System.String,System.Object[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously executes a command on the IMAP server.
            </summary>
            <param name="command">The command to send to the IMAP server (eg. "CAPABILITY").</param>
            <param name="parameters">List of parameters. Allowed types are String and a byte array.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SendCommandAsync(System.String,System.Object[],System.Object)">
            <summary>
            Asynchronously executes a command on the IMAP server.
            </summary>
            <param name="command">The command to send to the IMAP server (eg. "CAPABILITY").</param>
            <param name="parameters">List of parameters. Allowed types are String and a byte array.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SendCommandAsync(System.String,System.Object[])">
            <summary>
            Asynchronously executes a command on the IMAP server.
            </summary>
            <param name="command">The command to send to the IMAP server (eg. "CAPABILITY").</param>
            <param name="parameters">List of parameters. Allowed types are String and a byte array.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnCheckForUpdatesCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.Boolean})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.CheckForUpdatesCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CheckForUpdatesAsync(System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Boolean},System.Object)">
            <summary>
            Asynchronously sends NOOP or IDLE command to the server and checks for IMAP server notifications in the specified amount of time.
            </summary>
            <param name="duration">Duration of the idle interval, in miliseconds.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CheckForUpdatesAsync(System.Int32,System.Object)">
            <summary>
            Asynchronously sends NOOP or IDLE command to the server and checks for IMAP server notifications in the specified amount of time.
            </summary>
            <param name="duration">Duration of the idle interval, in miliseconds.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CheckForUpdatesAsync(System.Int32)">
            <summary>
            Asynchronously sends NOOP or IDLE command to the server and checks for IMAP server notifications in the specified amount of time.
            </summary>
            <param name="duration">Duration of the idle interval, in miliseconds.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CheckForUpdatesAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{System.Boolean},System.Object)">
            <summary>
            Asynchronously sends NOOP or IDLE command to the server and checks for IMAP server notifications.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CheckForUpdatesAsync(System.Object)">
            <summary>
            Asynchronously sends NOOP or IDLE command to the server and checks for IMAP server notifications.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CheckForUpdatesAsync">
            <summary>
            Asynchronously sends NOOP or IDLE command to the server and checks for IMAP server notifications.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Purge(ComponentPro.Net.Mail.ImapMessageSet)">
            <summary>
            Permanently removes all the messages marked as deleted in the specified list from the currently selected mailbox.
            </summary>
            <remarks>
            To mark messages as deleted, use <see cref="O:ComponentPro.Net.Mail.Imap.DeleteMessage"/> methods.
            Messages not marked as deleted in the list are not to be deleted.
            Only supported by servers that support the UIDPLUS extension. 
            </remarks>
            <param name="messageSet">A set of unique id of messages marked as deleted to purge.</param>
            <seealso cref="M:ComponentPro.Net.Mail.Imap.Select(System.String)"/> 
            <seealso cref="M:ComponentPro.Net.Mail.Imap.Deselect(System.Boolean)"/>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Purge">
            <summary>
            Permanently removes all the messages marked as deleted from the currently selected mailbox.
            </summary>
            <remarks>
            To mark messages as deleted, use <see cref="O:ComponentPro.Net.Mail.Imap.DeleteMessage"/> methods.
            </remarks>
            <seealso cref="M:ComponentPro.Net.Mail.Imap.Select(System.String)"/> 
            <seealso cref="M:ComponentPro.Net.Mail.Imap.Deselect(System.Boolean)"/>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Flag(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Modifies the flags of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="keywords">Keywords to add, remove or set.</param>
            <remarks>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Flag(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Modifies the flags of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <remarks>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Flag(System.Int32,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Modifies the flags of a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <remarks>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Flag(System.String,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Modifies the flags of a message with the specified unique ID.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <remarks>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Flag(System.Int32,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Modifies the flags of a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="keywords">Keywords to add, remove or set.</param>
            <remarks>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Flag(System.String,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Modifies the flags of a message with the specified unique ID.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="keywords">Keywords to add, remove or set.</param>
            <remarks>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessage(ComponentPro.Net.Mail.ImapMessageSet)">
            <summary>
            Marks the specified messages in the currently selected mailbox as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="messageSet">The message set.</param>
            <remarks>
            <p>
            Call the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method to permanently remove the messages marked as deleted.
            </p>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessage(System.Int32)">
            <summary>
            Marks a message with the specified sequence number as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="messageInboxIndex">The message inbox index number.</param>
            <remarks>
            <p>
            Call the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method to permanently remove the messages marked as deleted.
            </p>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessage(System.String)">
            <summary>
            Marks a message with the specified unique ID as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="uniqueId">The message unique ID.</param>
            <remarks>
            <p>
            Call the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method to permanently remove the messages marked as deleted.
            </p>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessage(System.Int32)">
            <summary>
            Marks a message with the specified sequence number as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="messageInboxIndex">The sequence number of the message in the currently selected mailbox.</param>
            <remarks>
            <p>
            Both messages <see cref="O:ComponentPro.Net.Mail.Imap.DeleteMessage">deleted</see> by this session and other sessions are undeleted.
            </p>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessage(System.String)">
            <summary>
            Marks a message with the specified unique ID as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="uniqueId">The unique id of the message in the currently selected mailbox.</param>
            <remarks>
            <p>
            Both messages <see cref="O:ComponentPro.Net.Mail.Imap.DeleteMessage">deleted</see> by this session and other sessions are undeleted.
            </p>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessage">
            <summary>
            Marks all messages as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <remarks>
            <p>
            Both messages <see cref="O:ComponentPro.Net.Mail.Imap.DeleteMessage">deleted</see> by this session and other sessions are undeleted.
            </p>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessage(ComponentPro.Net.Mail.ImapMessageSet)">
            <summary>
            Marks messages that belong to a specified message set as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <remarks>
            <p>
            Both messages <see cref="O:ComponentPro.Net.Mail.Imap.DeleteMessage">deleted</see> by this session and other sessions are undeleted.
            </p>
            <p>
            This method represents IMAP STORE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnPurgeCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.PurgeCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.PurgeAsync(ComponentPro.Net.Mail.ImapMessageSet,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously permanently removes all the messages marked as deleted in the specified list from the currently selected mailbox.
            </summary>
            <param name="messageSet">A set of unique id of messages marked as deleted to purge.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.PurgeAsync(ComponentPro.Net.Mail.ImapMessageSet,System.Object)">
            <summary>
            Asynchronously permanently removes all the messages marked as deleted in the specified list from the currently selected mailbox.
            </summary>
            <param name="messageSet">A set of unique id of messages marked as deleted to purge.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.PurgeAsync(ComponentPro.Net.Mail.ImapMessageSet)">
            <summary>
            Asynchronously permanently removes all the messages marked as deleted in the specified list from the currently selected mailbox.
            </summary>
            <param name="messageSet">A set of unique id of messages marked as deleted to purge.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.PurgeAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously permanently removes all the messages marked as deleted from the currently selected mailbox.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.PurgeAsync(System.Object)">
            <summary>
            Asynchronously permanently removes all the messages marked as deleted from the currently selected mailbox.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.PurgeAsync">
            <summary>
            Asynchronously permanently removes all the messages marked as deleted from the currently selected mailbox.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnFlagCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.FlagCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously modifies the flags of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="keywords">Keywords to add, remove or set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],System.Object)">
            <summary>
            Asynchronously modifies the flags of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="keywords">Keywords to add, remove or set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Asynchronously modifies the flags of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="keywords">Keywords to add, remove or set.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously modifies the flags of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.Object)">
            <summary>
            Asynchronously modifies the flags of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Asynchronously modifies the flags of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(System.Int32,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously modifies the flags of a message with the specified message inbox index.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(System.Int32,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.Object)">
            <summary>
            Asynchronously modifies the flags of a message with the specified message inbox index.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(System.Int32,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Asynchronously modifies the flags of a message with the specified message inbox index.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(System.String,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously modifies the flags of a message with the specified unique ID.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(System.String,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags,System.Object)">
            <summary>
            Asynchronously modifies the flags of a message with the specified unique ID.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FlagAsync(System.String,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Asynchronously modifies the flags of a message with the specified unique ID.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="modifier">The action to take.</param>
            <param name="flags">Flags to add, remove or set.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnDeleteMessageCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.DeleteMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously marks the specified messages in the currently selected mailbox as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="messageSet">The message set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.Object)">
            <summary>
            Asynchronously marks the specified messages in the currently selected mailbox as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="messageSet">The message set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessageAsync(ComponentPro.Net.Mail.ImapMessageSet)">
            <summary>
            Asynchronously marks the specified messages in the currently selected mailbox as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="messageSet">The message set.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessageAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously marks a message with the specified unique ID as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="uniqueId">The message unique ID.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessageAsync(System.String,System.Object)">
            <summary>
            Asynchronously marks a message with the specified unique ID as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="uniqueId">The message unique ID.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessageAsync(System.String)">
            <summary>
            Asynchronously marks a message with the specified unique ID as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="uniqueId">The message unique ID.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessageAsync(System.Int32,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously marks a message with the specified message inbox index as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="messageInboxIndex">The message inbox index number.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessageAsync(System.Int32,System.Object)">
            <summary>
            Asynchronously marks a message with the specified message inbox index as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="messageInboxIndex">The message inbox index number.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteMessageAsync(System.Int32)">
            <summary>
            Asynchronously marks a message with the specified message inbox index as deleted. To permanently delete messages, use the method <see cref="O:ComponentPro.Net.Mail.Imap.Purge" />.
            </summary>
            <param name="messageInboxIndex">The message inbox index number.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnUndeleteMessageCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.UndeleteMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously marks messages that belong to a specified message set as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.Object)">
            <summary>
            Asynchronously marks messages that belong to a specified message set as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(ComponentPro.Net.Mail.ImapMessageSet)">
            <summary>
            Asynchronously marks messages that belong to a specified message set as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously marks a message with the specified unique ID as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="uniqueId">The unique id of the message in the currently selected mailbox.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(System.String,System.Object)">
            <summary>
            Asynchronously marks a message with the specified unique ID as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="uniqueId">The unique id of the message in the currently selected mailbox.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(System.String)">
            <summary>
            Asynchronously marks a message with the specified unique ID as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="uniqueId">The unique id of the message in the currently selected mailbox.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(System.Int32,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously marks a message with the specified sequence number as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="messageInboxIndex">The sequence number of the message in the currently selected mailbox.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(System.Int32,System.Object)">
            <summary>
            Asynchronously marks a message with the specified sequence number as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="messageInboxIndex">The sequence number of the message in the currently selected mailbox.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(System.Int32)">
            <summary>
            Asynchronously marks a message with the specified sequence number as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="messageInboxIndex">The sequence number of the message in the currently selected mailbox.</param>        
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronous marks all messages as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync(System.Object)">
            <summary>
            Asynchronous marks all messages as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync">
            <summary>
            Asynchronous marks all messages as not deleted. It has no effect on messages were purged using the <see cref="O:ComponentPro.Net.Mail.Imap.Purge"/> method.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessage(System.Int32,System.IO.Stream,System.Int64,System.Int32)">
            <summary>
            Downloads the message with the specified inbox index number and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <returns>The length of the message in bytes.</returns>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessage(System.String,System.IO.Stream,System.Int64,System.Int32)">
            <summary>
            Downloads the message with the specified unique ID and writes its data into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessage(System.Int32,System.IO.Stream)">
            <summary>
            Downloads the message with the specified message inbox index number and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="output">Stream that will receive the message.</param>
            <returns>The length of the message in bytes.</returns>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessage(System.String,System.IO.Stream)">
            <summary>
            Downloads the message with the specified unique ID and writes its data into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message.</param>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessage(System.Int32,System.String,System.Int64,System.Int32)">
            <summary>
            Downloads the message with the specified inbox index number and writes its data into a local file.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessage(System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Downloads the message with the specified unique ID and writes its data into a local file.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessage(System.Int32,System.String)">
            <summary>
            Downloads the message with the specified sequence number and writes its data into a local file.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessage(System.String,System.String)">
            <summary>
            Downloads the message with the specified unique ID and writes its data into a local file.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMailMessage(System.Int32)">
            <summary>
            Downloads the message with the specified sequence number
            and loads it into an instance of <see cref="T:ComponentPro.Net.Mail.MailMessage"/>.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
            <returns>A downloaded message.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMailMessage(System.String)">
            <summary>
            Downloads the message with the specified unique ID
            and loads it into an instance of <see cref="T:ComponentPro.Net.Mail.MailMessage"/>.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <returns>A downloaded message.</returns>
            <remarks>
            By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageHeaders(System.Int32,System.IO.Stream)">
            <summary>
            Downloads the headers of a message with the specified sequence number
            and writes it into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="output">Stream that will receive the message headers.</param>
            <remarks>Uses IMAP FETCH command to retrieve the headers.</remarks>
            <returns>The length of the headers in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageHeaders(System.String,System.IO.Stream)">
            <summary>
            Downloads the headers of a message with the specified unique ID
            and writes it into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message headers.</param>
            <remarks>Uses IMAP FETCH command to retrieve the headers.</remarks>
            <returns>The length of the headers in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePart(System.Int32,System.String)">
            <summary>
            Downloads the specified part of the message. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <returns>Raw data of the specified message section.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePart(System.String,System.String)">
            <summary>
            Downloads the specified part of the message. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <returns>Raw data of the specified message section.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePart(System.Int32,System.String,System.IO.Stream)">
            <summary>
            Downloads the specified part of the message into the specified stream. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="output">Stream that will receive the part data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePart(System.String,System.String,System.IO.Stream)">
            <summary>
            Downloads the specified part of the message into the specified stream. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="output">Stream that will receive the part data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.Int32,ComponentPro.Net.Mail.ImapEnvelopeParts)">
            <summary>
            Gets information about a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="parts">Specifies the scope of information to determine about the message.</param>
            <remarks>
            <para>By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.</para>
            </remarks>
            <returns>A message info.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)">
            <summary>
            Gets information about a message with the specified unique ID
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="parts">Specifies the scope of information to determine about the message.</param>
            <remarks>
            <para>By default, this method marks the message as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.</para>
            </remarks>
            <returns>A message info.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnDownloadMessageCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.Int64})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.DownloadMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.IO.Stream,System.Int64,System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified inbox index number and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.IO.Stream,System.Int64,System.Int32,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified inbox index number and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.IO.Stream,System.Int64,System.Int32)">
            <summary>
            Asynchronously downloads the message with the specified inbox index number and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.IO.Stream,System.Int64,System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID and writes its data into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.IO.Stream,System.Int64,System.Int32,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID and writes its data into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.IO.Stream,System.Int64,System.Int32)">
            <summary>
            Asynchronously downloads the message with the specified unique ID and writes its data into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.IO.Stream,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified message inbox index number and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.IO.Stream,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified message inbox index number and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.IO.Stream)">
            <summary>
            Asynchronously downloads the message with the specified message inbox index number and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="output">Stream that will receive the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.IO.Stream,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID and writes its data into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.IO.Stream,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID and writes its data into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.IO.Stream)">
            <summary>
            Asynchronously downloads the message with the specified unique ID and writes its data into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.String,System.Int64,System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified inbox index number and writes its data into a local file.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.String,System.Int64,System.Int32,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified inbox index number and writes its data into a local file.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.String,System.Int64,System.Int32)">
            <summary>
            Asynchronously downloads the message with the specified inbox index number and writes its data into a local file.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.String,System.Int64,System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID
            and writes its data into a local file.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.String,System.Int64,System.Int32,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID
            and writes its data into a local file.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Asynchronously downloads the message with the specified unique ID
            and writes its data into a local file.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="remoteOffset">The starting offset of the message data to download.</param>
            <param name="length">Number of bytes to transfer or -1 to transfer all data until an end of message is reached.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified sequence number and writes its data into a local file.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.String,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified sequence number and writes its data into a local file.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.Int32,System.String)">
            <summary>
            Asynchronously downloads the message with the specified sequence number and writes its data into a local file.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID and writes its data into a local file.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID and writes its data into a local file.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageAsync(System.String,System.String)">
            <summary>
            Asynchronously downloads the message with the specified unique ID and writes its data into a local file.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnDownloadMailMessageCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.MailMessage})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.DownloadMailMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMailMessageAsync(System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.MailMessage},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified sequence number
            and loads it into an instance of <see cref="T:ComponentPro.Net.Mail.MailMessage"/>.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMailMessageAsync(System.Int32,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified sequence number
            and loads it into an instance of <see cref="T:ComponentPro.Net.Mail.MailMessage"/>.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMailMessageAsync(System.Int32)">
            <summary>
            Asynchronously downloads the message with the specified sequence number
            and loads it into an instance of <see cref="T:ComponentPro.Net.Mail.MailMessage"/>.
            </summary>
            <param name="messageInboxIndex">Message inbox index number.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMailMessageAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.MailMessage},System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID
            and loads it into an instance of <see cref="T:ComponentPro.Net.Mail.MailMessage"/>.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMailMessageAsync(System.String,System.Object)">
            <summary>
            Asynchronously downloads the message with the specified unique ID
            and loads it into an instance of <see cref="T:ComponentPro.Net.Mail.MailMessage"/>.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMailMessageAsync(System.String)">
            <summary>
            Asynchronously downloads the message with the specified unique ID
            and loads it into an instance of <see cref="T:ComponentPro.Net.Mail.MailMessage"/>.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnDownloadMessageHeadersCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.Int64})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.DownloadMessageHeadersCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageHeadersAsync(System.Int32,System.IO.Stream,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the headers of a message with the specified sequence number
            and writes it into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="output">Stream that will receive the message headers.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageHeadersAsync(System.Int32,System.IO.Stream,System.Object)">
            <summary>
            Asynchronously downloads the headers of a message with the specified sequence number
            and writes it into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="output">Stream that will receive the message headers.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageHeadersAsync(System.Int32,System.IO.Stream)">
            <summary>
            Asynchronously downloads the headers of a message with the specified sequence number
            and writes it into a supplied stream.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="output">Stream that will receive the message headers.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageHeadersAsync(System.String,System.IO.Stream,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the headers of a message with the specified unique ID
            and writes it into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message headers.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageHeadersAsync(System.String,System.IO.Stream,System.Object)">
            <summary>
            Asynchronously downloads the headers of a message with the specified unique ID
            and writes it into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message headers.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessageHeadersAsync(System.String,System.IO.Stream)">
            <summary>
            Asynchronously downloads the headers of a message with the specified unique ID
            and writes it into a supplied stream.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="output">Stream that will receive the message headers.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnDownloadMessagePartCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.Object})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.DownloadMessagePartCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.Int32,System.String,System.IO.Stream,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Object},System.Object)">
            <summary>
            Asynchronously downloads the specified part of the message into the specified stream. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.MessageStructure"/> argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="output">Stream that will receive the part data.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.Int32,System.String,System.IO.Stream,System.Object)">
            <summary>
            Asynchronously downloads the specified part of the message into the specified stream. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.MessageStructure"/> argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="output">Stream that will receive the part data.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.Int32,System.String,System.IO.Stream)">
            <summary>
            Asynchronously downloads the specified part of the message into the specified stream. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.MessageStructure"/> argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="output">Stream that will receive the part data.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.String,System.String,System.IO.Stream,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Object},System.Object)">
            <summary>
            Asynchronously downloads the specified part of the message into the specified stream. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="output">Stream that will receive the part data.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.String,System.String,System.IO.Stream,System.Object)">
            <summary>
            Asynchronously downloads the specified part of the message into the specified stream. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="output">Stream that will receive the part data.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.String,System.String,System.IO.Stream)">
            <summary>
            Asynchronously downloads the specified part of the message into the specified stream. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="output">Stream that will receive the part data.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.Int32,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Object},System.Object)">
            <summary>
            Asynchronously downloads the specified part of the message. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.Int32,System.String,System.Object)">
            <summary>
            Asynchronously downloads the specified part of the message. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.Int32,System.String)">
            <summary>
            Asynchronously downloads the specified part of the message. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.String,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Object},System.Object)">
            <summary>
            Asynchronously downloads the specified part of the message. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronously downloads the specified part of the message. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync(System.String,System.String)">
            <summary>
            Asynchronously downloads the specified part of the message. Used to download separate attachments.
            Call <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/> with <see cref="T:ComponentPro.Net.Mail.ImapEnvelopeParts"/>.MessageStructure argument
            to download the list of sections and access it using <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/> method.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="partId">Message section (from <see cref="P:ComponentPro.Net.Mail.ImapMessagePart.Id"/>).</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnDownloadImapMessageCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.ImapMessage})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.DownloadImapMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadImapMessageAsync(System.Int32,ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapMessage},System.Object)">
            <summary>
            Asynchronously gets information about a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="parts">Specifies the scope of information to determine about the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadImapMessageAsync(System.Int32,ComponentPro.Net.Mail.ImapEnvelopeParts,System.Object)">
            <summary>
            Asynchronously gets information about a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="parts">Specifies the scope of information to determine about the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadImapMessageAsync(System.Int32,ComponentPro.Net.Mail.ImapEnvelopeParts)">
            <summary>
            Asynchronously gets information about a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">Message sequence number.</param>
            <param name="parts">Specifies the scope of information to determine about the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadImapMessageAsync(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapMessage},System.Object)">
            <summary>
            Asynchronously gets information about a message with the specified unique ID
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="parts">Specifies the scope of information to determine about the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadImapMessageAsync(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts,System.Object)">
            <summary>
            Asynchronously gets information about a message with the specified unique ID
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="parts">Specifies the scope of information to determine about the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DownloadImapMessageAsync(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)">
            <summary>
            Asynchronously gets information about a message with the specified unique ID
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="parts">Specifies the scope of information to determine about the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnCommandResponse(System.Object,ComponentPro.Net.CommandResponseEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.CommandResponse"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.CommandResponseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnListProcessing(System.Object,ComponentPro.Net.Mail.ImapListProcessingEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.ListProcessing"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.ImapListProcessingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnStateChanged(System.Object,ComponentPro.Net.Mail.MailClientStateChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.StateChanged"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.MailClientStateChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnProgress(System.Object,ComponentPro.Net.Mail.ImapProgressEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.StateChanged"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.MailClientStateChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnUpdate(System.Object,ComponentPro.Net.Mail.ImapUpdateEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.Update"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.ImapUpdateEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnCertificateReceived(System.Object,ComponentPro.Security.CertificateReceivedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.CertificateReceived"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Security.CertificateReceivedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnCertificateRequired(System.Object,ComponentPro.Security.CertificateRequiredEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.CertificateRequired"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Security.CertificateRequiredEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.Net.Mail.ImapCriterion[])">
            <summary>
            Searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="parts">Specifies which message elements or attributes to fetch.</param>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <returns>A collection of <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> objects that match the specified criteria.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.Net.Mail.ImapCriterion[])">
            <summary>
            Searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="fields">Specifies the scope of information to determine about each message.</param>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <returns>A collection of <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> objects that match the specified criteria.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapCriterion[])">
            <summary>
            Searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="parameters">Searching criteria which may consist of one or more criteria. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <returns>A collection of <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> objects that match the specified criteria.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapEnvelopeParts)">
            <summary>
            Gets the list of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="parts">Specifies the scope of information to determine about each message.</param>
            <returns>A collection of <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> objects.</returns>
            <remarks>
            <p>
            This method represents IMAP FETCH command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapMessageSet)">
            <summary>
            Gets the list of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <returns>A collection of <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> objects.</returns>
            <remarks>
            <p>
            The returned list will contain the envelope information about each message.
            </p>
            <p>
            This method represents IMAP FETCH command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts)">
            <summary>
            Gets the list of messages in the current folder.
            </summary>
            <param name="parts">Specifies the scope of information to determine about each message.</param>
            <returns>A collection of <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> objects.</returns>
            <remarks>
            <p>
            This method represents IMAP FETCH command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessages">
            <summary>
            Gets the list of messages in the current folder.
            </summary>
            <returns>A collection of <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> objects.</returns>
            <remarks>
            <p>
            The returned list will contain the envelope information about each message.
            </p>
            <p>
            This method represents IMAP FETCH command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FolderExists(System.String)">
            <summary>
            Determines whether the specified folder exists on the server.
            </summary>
            <param name="folder">The path to the folder to check.</param>
            <returns>True if the folder exists; otherwise is false.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="subscribedOnly">A boolean value indicating whether to return subscribed mailboxes only or all mailboxes.</param>
            <param name="recursive">Specifies whether to return the shole subfolder tree.</param>
            <returns>A list of sub-mailboxes.</returns>
            <remarks>
            <p>
            To subscribe and unsubscribe to a folder, you can use <see cref="M:ComponentPro.Net.Mail.Imap.Subscribe(System.String)"/> and <see cref="M:ComponentPro.Net.Mail.Imap.Unsubscribe(System.String)"/> methods.
            </p>
            <p>This method represents IMAP LIST and LSUB commands.</p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)">
            <summary>
            Gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="subscribedOnly">A boolean value indicating whether to return subscribed mailboxes only or all mailboxes.</param>
            <returns>A list of sub-mailboxes.</returns>
            <remarks>
            To subscribe and unsubscribe to a folder, you can use <see cref="M:ComponentPro.Net.Mail.Imap.Subscribe(System.String)"/> and <see cref="M:ComponentPro.Net.Mail.Imap.Unsubscribe(System.String)"/> methods.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String)">
            <summary>
            Returns the list of sub-mailboxes in the specified IMAP folder.
            </summary>
            <param name="folder">The path to folder. You can specify an empty string for listing root folder.</param>
            <returns>A list of <see cref="T:ComponentPro.Net.Mail.Folder"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFolders">
            <summary>
            Returns the list of root subfolders.
            </summary>
            <returns>A list of <see cref="T:ComponentPro.Net.Mail.Folder"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Deselect(System.Boolean)">
            <summary>
            Deselects the currently selected folder and permanently removes all messages marked as deleted 
            (by using <see cref="O:DeleteMessage"/>) from the current folder. After calling this method, <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> will be null.
            </summary>
            <param name="purgeDeleted">Indicates whether to permanently removes all messages marked as deleted.</param>
            <seealso cref="M:ComponentPro.Net.Mail.Imap.Select(System.String)"/> 
            <seealso cref="O:Purge"/>
            <remarks>
            <p>
            This method uses IMAP CLOSE command to purge the messages.
            No purging is performed if the current folder is selected as read-only.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Deselect">
            <summary>
            Deselects the currently selected folder and permanently removes all messages marked as deleted 
            (by using <see cref="O:DeleteMessage"/>) from the current folder. After calling this method, <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> will be null.
            </summary>
            <seealso cref="M:ComponentPro.Net.Mail.Imap.Select(System.String)"/> 
            <seealso cref="O:Purge"/>
            <remarks>
            <p>
            This method uses IMAP CLOSE command to purge the messages.
            No purging is performed if the current folder is selected as read-only.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Select(System.String,System.Boolean)">
            <summary>
            Selects the specified folder so that its messages can be accessed.
            </summary>
            <param name="folder">The full name of the folder to be selected.</param>
            <param name="readOnly">Specifies whether the folder is to be selected as read-only.</param>
            <remarks>
            <p>
            You should specify the full name of the folder (including all parent folders' names if the folder is subfolder of another existing folder).
            </p>
            <p>
            After calling this method, the <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> property will contain an instance of <see cref="T:ComponentPro.Net.Mail.Folder"/> representing the selected folder.
            </p>
            <p>
            Only one folder can be selected at a time for a single connection,
            and only the messages in currently selected folder can be accessed.
            Also, most <see cref="E:ComponentPro.Net.Mail.Imap.Update">notifications</see> only occur when a folder is selected.
            </p>
            <p>
            This method represents IMAP SELECT and EXAMINE commands.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Select(System.String)">
            <summary>
            Selects the specified folder so that its messages can be accessed.
            </summary>
            <param name="folder">The full name of the folder to be selected.</param>
            <remarks>
            <p>
            You should specify the full name of the folder (including all parent folders' names if the folder is subfolder of another existing folder).
            </p>
            <p>
            After calling this method, the <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> property will contain an instance of <see cref="T:ComponentPro.Net.Mail.Folder"/> representing the selected folder.
            </p>
            <p>
            Only one folder can be selected at a time for a single connection,
            and only the messages in currently selected folder can be accessed.
            Also, most <see cref="E:ComponentPro.Net.Mail.Imap.Update">notifications</see> only occur when a folder is selected.
            </p>
            <p>
            This method represents IMAP SELECT and EXAMINE commands.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CreateFolder(System.String)">
            <summary>
            Creates a new folder in the IMAP4 account.
            </summary>
            <param name="folder">The full name of the folder to be created.</param>
            <remarks>
            <p>
            This method represents IMAP CREATE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteFolder(System.String)">
            <summary>
            Deletes a folder with the specified name.
            </summary>
            <param name="folder">Folder to be deleted.</param>
            <remarks>
            <p>
            This method represents IMAP DELETE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.RenameFolder(System.String,System.String)">
            <summary>
            Renames a specified folder to a new name.
            </summary>
            <param name="folderName">Folder to be renamed.</param>
            <param name="newFolderName">New folder name.</param>
            <remarks>
            <p>
            This method represents IMAP RENAME command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Subscribe(System.String)">
            <summary>
            Subscribes to the specified folder of the IMAP4 account, adding it to a list of active folders that
            appear in the folder <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)">listings</see> with <b>subscribedOnly</b> parameter set
            to <c>true</c>.
            </summary>
            <param name="folder">The full name of the folder to be subscribed.</param>
            <remarks>
            <p>
            This method adds the specified folder to the server's set of "active" or "subscribed" folders as returned by 
            <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)"/> method when <b>subscribedOnly</b> parameter is set to <c>true</c>.
            This has absolutely NOTHING to do
            with <see cref="E:ComponentPro.Net.Mail.Imap.Update">notifications</see>.
            </p>
            <p>
            You should specify the full name of the folder (including all parent folders' names if the folder is subfolder of another existing folder).
            </p>
            </remarks>
            <p>
            This method represents IMAP SUBSCRIBE command.
            </p>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Unsubscribe(System.String)">
            <summary>
            Unsubscribes the previously subscribed folder (using the <see cref="M:ComponentPro.Net.Mail.Imap.Subscribe(System.String)"/> method) of the IMAP4 account, removing it from the list of active folders that
            appear in the folder <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)">listings</see> with <b>subscribedOnly</b> parameter set
            to <c>true</c>.
            </summary>
            <param name="folder">The full name of the folder to be unsubscribed.</param>
            <remarks>
            <p>
            This method removes the specified folder from the server's set of "active" or "subscribed" 
            folders as returned by <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)"/> method when <b>subscribedOnly</b> parameter is set to <c>true</c>.
            This has absolutely NOTHING to do with <see cref="E:ComponentPro.Net.Mail.Imap.Update">notifications</see>.
            </p>
            <p>
            You should specify the full name of the folder (including all parent folders' names if the folder is subfolder of another existing folder).
            </p>
            <p>
            This method represents IMAP UNSUBSCRIBE command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.GetFolderInfo(System.String)">
            <summary>
            Gets folder information without selecting it. Only <see cref="P:ComponentPro.Net.Mail.Folder.TotalMessages"/>, 
            <see cref="P:ComponentPro.Net.Mail.Folder.RecentMessages"/>, <see cref="P:ComponentPro.Net.Mail.Folder.NotSeenMessages"/>, 
            <see cref="P:ComponentPro.Net.Mail.Folder.UidValidity"/>, and <see cref="P:ComponentPro.Net.Mail.Folder.UidNext"/> properties 
            of the <see cref="T:ComponentPro.Net.Mail.Folder"/> class are available after calling this method.
            </summary>
            <param name="folder">The folder name to get information about.</param>
            <returns>An <see cref="T:ComponentPro.Net.Mail.Folder"/> object.</returns>
            <remarks>
            <p>
            This method represents IMAP STATUS command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SetMailboxCheckpoint">
            <summary>
            Requests a checkpoint of the currently selected mailbox.
            </summary>
            <remarks>
            <p>
            A checkpoint refers to any implementation-dependent
            housekeeping associated with the mailbox.
            </p>
            <p>
            This method represents IMAP CHECK command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnListMessagesCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.ImapMessageCollection})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.ListMessagesCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.Net.Mail.ImapCriterion[],ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapMessageCollection},System.Object)">
            <summary>
            Asynchronously searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="parts">Specifies which message elements or attributes to fetch.</param>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.Net.Mail.ImapCriterion[],System.Object)">
            <summary>
            Asynchronously searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="parts">Specifies which message elements or attributes to fetch.</param>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.Net.Mail.ImapCriterion[])">
            <summary>
            Asynchronously searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="messageSet">A message set containing ordinal message numbers or UIDs.</param>
            <param name="parts">Specifies which message elements or attributes to fetch.</param>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.Net.Mail.ImapCriterion[],ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapMessageCollection},System.Object)">
            <summary>
            Asynchronously searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="parts">Specifies which message elements or attributes to fetch.</param>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.Net.Mail.ImapCriterion[],System.Object)">
            <summary>
            Asynchronously searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="parts">Specifies which message elements or attributes to fetch.</param>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.Net.Mail.ImapCriterion[])">
            <summary>
            Asynchronously searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="parts">Specifies which message elements or attributes to fetch.</param>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapCriterion[],ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapMessageCollection},System.Object)">
            <summary>
            Asynchronously searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapCriterion[],System.Object)">
            <summary>
            Asynchronously searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapCriterion[])">
            <summary>
            Asynchronously searches the current folder for messages that match the specified searching criteria and 
            fetches message envelopes, bodies, headers, flags, attributes, and other message-related information from the server.
            </summary>
            <param name="parameters">Searching criteria which may consist of one or more parameters. When more than one <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> are specified, 
            the results is the intersection (AND) of all the messages that match.
            </param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapMessageCollection},System.Object)">
            <summary>
            Asynchronously gets the list of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="parts">Specifies the scope of information to determine about each message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapEnvelopeParts,System.Object)">
            <summary>
            Asynchronously gets the list of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="parts">Specifies the scope of information to determine about each message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapEnvelopeParts)">
            <summary>
            Asynchronously gets the list of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="parts">Specifies the scope of information to determine about each message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapMessageCollection},System.Object)">
            <summary>
            Asynchronously gets the list of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapMessageSet,System.Object)">
            <summary>
            Asynchronously gets the list of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapMessageSet)">
            <summary>
            Asynchronously gets the list of messages in the current folder that belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapEnvelopeParts,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapMessageCollection},System.Object)">
            <summary>
            Asynchronously gets the list of messages in the current folder.
            </summary>
            <param name="parts">Specifies the scope of information to determine about each message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapEnvelopeParts,System.Object)">
            <summary>
            Asynchronously gets the list of messages in the current folder.
            </summary>
            <param name="parts">Specifies the scope of information to determine about each message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.Net.Mail.ImapEnvelopeParts)">
            <summary>
            Asynchronously gets the list of messages in the current folder.
            </summary>
            <param name="parts">Specifies the scope of information to determine about each message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapMessageCollection},System.Object)">
            <summary>
            Asynchronously gets the list of messages in the current folder.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync(System.Object)">
            <summary>
            Asynchronously gets the list of messages in the current folder.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListMessagesAsync">
            <summary>
            Asynchronously gets the list of messages in the current folder.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnFolderExistsCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.Boolean})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.FolderExistsCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FolderExistsAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Boolean},System.Object)">
            <summary>
            Asynchronously determines whether the specified folder exists on the server.
            </summary>
            <param name="folder">The path to the folder to check.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FolderExistsAsync(System.String,System.Object)">
            <summary>
            Asynchronously determines whether the specified folder exists on the server.
            </summary>
            <param name="folder">The path to the folder to check.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.FolderExistsAsync(System.String)">
            <summary>
            Asynchronously determines whether the specified folder exists on the server.
            </summary>
            <param name="folder">The path to the folder to check.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnListFoldersCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.FolderCollection})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.ListFoldersCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.String,System.Boolean,System.Boolean,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.FolderCollection},System.Object)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="subscribedOnly">A boolean value indicating whether to return subscribed mailboxes only or all mailboxes.</param>
            <param name="recursive">Specifies whether to return the shole subfolder tree.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.String,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="subscribedOnly">A boolean value indicating whether to return subscribed mailboxes only or all mailboxes.</param>
            <param name="recursive">Specifies whether to return the shole subfolder tree.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.String,System.Boolean,System.Boolean)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="subscribedOnly">A boolean value indicating whether to return subscribed mailboxes only or all mailboxes.</param>
            <param name="recursive">Specifies whether to return the shole subfolder tree.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.String,System.Boolean,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.FolderCollection},System.Object)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="subscribedOnly">A boolean value indicating whether to return subscribed mailboxes only or all mailboxes.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.String,System.Boolean,System.Object)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="subscribedOnly">A boolean value indicating whether to return subscribed mailboxes only or all mailboxes.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.String,System.Boolean)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="subscribedOnly">A boolean value indicating whether to return subscribed mailboxes only or all mailboxes.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.FolderCollection},System.Object)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.String,System.Object)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.String)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the specified folder.
            </summary>
            <param name="folder">The path to folder for which a list of sub-mailboxes is returned.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.FolderCollection},System.Object)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the current folder.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync(System.Object)">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the current folder.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ListFoldersAsync">
            <summary>
            Asynchronously gets the list of sub-mailboxes in the current folder.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnCreateFolderCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.CreateFolderCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CreateFolderAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously creates a new folder in the IMAP4 account.
            </summary>
            <param name="folder">The full name of the folder to be created.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CreateFolderAsync(System.String,System.Object)">
            <summary>
            Asynchronously creates a new folder in the IMAP4 account.
            </summary>
            <param name="folder">The full name of the folder to be created.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CreateFolderAsync(System.String)">
            <summary>
            Asynchronously creates a new folder in the IMAP4 account.
            </summary>
            <param name="folder">The full name of the folder to be created.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnDeleteFolderCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.DeleteFolderCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteFolderAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes a folder with the specified name.
            </summary>
            <param name="folder">Folder to be deleted.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteFolderAsync(System.String,System.Object)">
            <summary>
            Asynchronously deletes a folder with the specified name.
            </summary>
            <param name="folder">Folder to be deleted.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeleteFolderAsync(System.String)">
            <summary>
            Asynchronously deletes a folder with the specified name.
            </summary>
            <param name="folder">Folder to be deleted.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnRenameFolderCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.RenameFolderCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.RenameFolderAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously renames a specified folder to a new name.
            </summary>
            <param name="folderName">Folder to be renamed.</param>
            <param name="newFolderName">New folder name.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.RenameFolderAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronously renames a specified folder to a new name.
            </summary>
            <param name="folderName">Folder to be renamed.</param>
            <param name="newFolderName">New folder name.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.RenameFolderAsync(System.String,System.String)">
            <summary>
            Asynchronously renames a specified folder to a new name.
            </summary>
            <param name="folderName">Folder to be renamed.</param>
            <param name="newFolderName">New folder name.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnSubscribeCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.SubscribeCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SubscribeAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously subscribes to the specified folder of the IMAP4 account, adding it to a list of active folders that
            appear in the folder <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)">listings</see> with <b>subscribedOnly</b> parameter set
            to <c>true</c>.
            </summary>
            <param name="folder">The full name of the folder to be subscribed.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SubscribeAsync(System.String,System.Object)">
            <summary>
            Asynchronously subscribes to the specified folder of the IMAP4 account, adding it to a list of active folders that
            appear in the folder <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)">listings</see> with <b>subscribedOnly</b> parameter set
            to <c>true</c>.
            </summary>
            <param name="folder">The full name of the folder to be subscribed.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SubscribeAsync(System.String)">
            <summary>
            Asynchronously subscribes to the specified folder of the IMAP4 account, adding it to a list of active folders that
            appear in the folder <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)">listings</see> with <b>subscribedOnly</b> parameter set
            to <c>true</c>.
            </summary>
            <param name="folder">The full name of the folder to be subscribed.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnUnsubscribeCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.UnsubscribeCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UnsubscribeAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously unsubscribes the previously subscribed folder (using the <see cref="M:ComponentPro.Net.Mail.Imap.Subscribe(System.String)"/> method) of the IMAP4 account, removing it from the list of active folders that
            appear in the folder <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)">listings</see> with <b>subscribedOnly</b> parameter set
            to <c>true</c>.
            </summary>
            <param name="folder">The full name of the folder to be unsubscribed.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UnsubscribeAsync(System.String,System.Object)">
            <summary>
            Asynchronously unsubscribes the previously subscribed folder (using the <see cref="M:ComponentPro.Net.Mail.Imap.Subscribe(System.String)"/> method) of the IMAP4 account, removing it from the list of active folders that
            appear in the folder <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)">listings</see> with <b>subscribedOnly</b> parameter set
            to <c>true</c>.
            </summary>
            <param name="folder">The full name of the folder to be unsubscribed.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UnsubscribeAsync(System.String)">
            <summary>
            Asynchronously unsubscribes the previously subscribed folder (using the <see cref="M:ComponentPro.Net.Mail.Imap.Subscribe(System.String)"/> method) of the IMAP4 account, removing it from the list of active folders that
            appear in the folder <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders(System.String,System.Boolean)">listings</see> with <b>subscribedOnly</b> parameter set
            to <c>true</c>.
            </summary>
            <param name="folder">The full name of the folder to be unsubscribed.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnGetFolderInfoCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.Folder})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.GetFolderInfoCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.GetFolderInfoAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.Folder},System.Object)">
            <summary>
            Asynchronously gets folder information without selecting it. Only <see cref="P:ComponentPro.Net.Mail.Folder.TotalMessages"/>, 
            <see cref="P:ComponentPro.Net.Mail.Folder.RecentMessages"/>, <see cref="P:ComponentPro.Net.Mail.Folder.NotSeenMessages"/>, 
            <see cref="P:ComponentPro.Net.Mail.Folder.UidValidity"/>, and <see cref="P:ComponentPro.Net.Mail.Folder.UidNext"/> properties 
            of the <see cref="T:ComponentPro.Net.Mail.Folder"/> class are available after calling this method.
            </summary>
            <param name="folder">The folder name to get information about.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.GetFolderInfoAsync(System.String,System.Object)">
            <summary>
            Asynchronously gets folder information without selecting it. Only <see cref="P:ComponentPro.Net.Mail.Folder.TotalMessages"/>, 
            <see cref="P:ComponentPro.Net.Mail.Folder.RecentMessages"/>, <see cref="P:ComponentPro.Net.Mail.Folder.NotSeenMessages"/>, 
            <see cref="P:ComponentPro.Net.Mail.Folder.UidValidity"/>, and <see cref="P:ComponentPro.Net.Mail.Folder.UidNext"/> properties 
            of the <see cref="T:ComponentPro.Net.Mail.Folder"/> class are available after calling this method.
            </summary>
            <param name="folder">The folder name to get information about.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.GetFolderInfoAsync(System.String)">
            <summary>
            Asynchronously gets folder information without selecting it. Only <see cref="P:ComponentPro.Net.Mail.Folder.TotalMessages"/>, 
            <see cref="P:ComponentPro.Net.Mail.Folder.RecentMessages"/>, <see cref="P:ComponentPro.Net.Mail.Folder.NotSeenMessages"/>, 
            <see cref="P:ComponentPro.Net.Mail.Folder.UidValidity"/>, and <see cref="P:ComponentPro.Net.Mail.Folder.UidNext"/> properties 
            of the <see cref="T:ComponentPro.Net.Mail.Folder"/> class are available after calling this method.
            </summary>
            <param name="folder">The folder name to get information about.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnSetMailboxCheckpointCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.SetMailboxCheckpointCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SetMailboxCheckpointAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously requests a checkpoint of the currently selected mailbox.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SetMailboxCheckpointAsync(System.Object)">
            <summary>
            Asynchronously requests a checkpoint of the currently selected mailbox.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SetMailboxCheckpointAsync">
            <summary>
            Asynchronously requests a checkpoint of the currently selected mailbox.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnSelectCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.SelectCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SelectAsync(System.String,System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously selects the specified folder so that its messages can be accessed.
            </summary>
            <param name="folder">The full name of the folder to be selected.</param>
            <param name="readOnly">Specifies whether the folder is to be selected as read-only.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SelectAsync(System.String,System.Boolean,System.Object)">
            <summary>
            Asynchronously selects the specified folder so that its messages can be accessed.
            </summary>
            <param name="folder">The full name of the folder to be selected.</param>
            <param name="readOnly">Specifies whether the folder is to be selected as read-only.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SelectAsync(System.String,System.Boolean)">
            <summary>
            Asynchronously selects the specified folder so that its messages can be accessed.
            </summary>
            <param name="folder">The full name of the folder to be selected.</param>
            <param name="readOnly">Specifies whether the folder is to be selected as read-only.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SelectAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously selects the specified folder so that its messages can be accessed.
            </summary>
            <param name="folder">The full name of the folder to be selected.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SelectAsync(System.String,System.Object)">
            <summary>
            Asynchronously selects the specified folder so that its messages can be accessed.
            </summary>
            <param name="folder">The full name of the folder to be selected.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SelectAsync(System.String)">
            <summary>
            Asynchronously selects the specified folder so that its messages can be accessed.
            </summary>
            <param name="folder">The full name of the folder to be selected.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnDeselectCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.DeselectCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeselectAsync(System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deselects the currently selected folder and optionally removes all messages marked as deleted 
            (by using <see cref="O:DeleteMessage"/>) from the current folder. After calling this method, <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> will be null.
            </summary>
            <param name="purgeDeleted">Indicates whether to permanently removes all messages marked as deleted.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeselectAsync(System.Boolean,System.Object)">
            <summary>
            Asynchronously deselects the currently selected folder and optionally removes all messages marked as deleted 
            (by using <see cref="O:DeleteMessage"/>) from the current folder. After calling this method, <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> will be null.
            </summary>
            <param name="purgeDeleted">Indicates whether to permanently removes all messages marked as deleted.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeselectAsync(System.Boolean)">
            <summary>
            Asynchronously deselects the currently selected folder and optionally removes all messages marked as deleted 
            (by using <see cref="O:DeleteMessage"/>) from the current folder. After calling this method, <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> will be null.
            </summary>
            <param name="purgeDeleted">Indicates whether to permanently removes all messages marked as deleted.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeselectAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deselects the currently selected folder and permanently removes all messages marked as deleted 
            (by using <see cref="O:DeleteMessage"/>) from the current folder. After calling this method, <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> will be null.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeselectAsync(System.Object)">
            <summary>
            Asynchronously deselects the currently selected folder and permanently removes all messages marked as deleted 
            (by using <see cref="O:DeleteMessage"/>) from the current folder. After calling this method, <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> will be null.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.DeselectAsync">
            <summary>
            Asynchronously deselects the currently selected folder and permanently removes all messages marked as deleted 
            (by using <see cref="O:DeleteMessage"/>) from the current folder. After calling this method, <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/> will be null.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Imap"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Imap"/> class with a container.
            </summary>
            <param name="container">The container object.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the container is null.</exception>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Cancel">
            <summary>
            Cancels the current operation.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Connect(System.String)">
            <summary>
            Connects to an IMAP4 server on the standard IMAP4 port (143).
            </summary>
            <param name="serverName">Remote hostname or address in dot notation.</param>
            <returns>The welcome message returned by the remote IMAP server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Connect(System.String,System.Int32)">
            <summary>
            Connects to the IMAP server.
            </summary>
            <param name="serverName">Remote hostname or address in dot notation.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. The standard IMAP4 port is 143. For TLS/SSL connections, dedicated port is 993.</param>
            <returns>The welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Connect(System.String,ComponentPro.Net.SecurityMode)">
            <summary>
            Connects to the IMAP server. Use a port corresponding to the specified security mode.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="security">Connection security.</param>
            <returns>The welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Connect(System.String,System.Int32,ComponentPro.Net.SecurityMode)">
            <summary>
            Connects to the IMAP server.
            </summary>
            <param name="serverName">Remote hostname or address in dot notation.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. The standard IMAP4 port is 143. For TLS/SSL connections, dedicated port is 993.</param>
            <param name="securityMode">The security mode.</param>
            <returns>The welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Disconnect">
            <summary>
            Disconnects from the IMAP server and returns exit message from the server.
            </summary>
            <returns>The exit message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UpgradeConnection">
            <summary>
            Secures the connection with TLS/SSL using default parameters.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Authenticate(System.String,System.String)">
            <summary>
            Authenticates the specified user to the remote IMAP server with the specified credentials.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <remarks>
            UltimateMail will try to use the most secure method supported by the server.
            The order of preference: CRAM-MD5, DIGEST-MD5, PLAIN, LOGIN, ClearText, EXTERNAL, GSSAPI, NTLM.
            The NTLM, GSSAPI and EXTERNAL methods are only attempted if no other method is available.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Authenticate(ComponentPro.Net.Mail.ImapAuthenticationMethod)">
            <summary>
            Authenticates the user to the remote IMAP server using the specified authentication method that 
            does not require credentials. Only NTLM, GSSAPI and External methods are supported.
            </summary>
            <param name="method">The authentication method.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Authenticate(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String)">
            <summary>
            Authenticates the specified user to the IMAP server using GSSAPI.
            </summary>
            <remarks>
            .NET: Kerberos and NTLM methods are supported.<br/>
            .NET CF: Only NTLM method is supported.
            </remarks>
            <param name="mechanism">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Authenticate(System.String,System.String,ComponentPro.Net.Mail.ImapAuthenticationMethod)">
            <summary>
            Authenticates the specified user to the remote IMAP server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <param name="method">The authentication method.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.Authenticate(System.String,ComponentPro.Net.Mail.ImapAuthenticationMethod)">
            <summary>
            Authenticates the user to the IMAP server using an OAuth token.
            </summary>
            <param name="token">The authentication token.</param>
            <param name="method">Authentication method (only OAuth 2.0 is supported at the moment).</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CheckForUpdates(System.Int32)">
            <summary>
            Sends NOOP or IDLE command to the server and checks for IMAP server notifications in the specified amount of time.
            </summary>
            <param name="duration">Duration of the idle interval, in miliseconds.</param>
            <returns>If any new notifications were received, it returns <c>true</c> and <see cref="E:ComponentPro.Net.Mail.Imap.Update"/> event is fired; otherwise is <c>false</c>.</returns>
            <remarks>
            <p>
            The <see cref="M:ComponentPro.Net.Mail.Imap.CheckForUpdates(System.Int32)"/> method is useful when you want to check for any possible updates including message deleted, message flags changed, etc. from the server.
            See <see cref="T:ComponentPro.Net.Mail.ImapUpdateEvent"/> for a list of supported notifications.
            </p>
            <p>
            Typically, a client application will call <see cref="M:ComponentPro.Net.Mail.Imap.CheckForUpdates(System.Int32)"/> periodically while idle.
            </p>
            <p>
            This method represents IMAP NOOP or IDLE command. IDLE is used whenever the server supports this command. 
            NOOP command is always used when the duration is less than 10 milliseconds.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CheckForUpdates">
            <summary>
            Sends NOOP or IDLE command to the server and checks for IMAP server notifications.
            </summary>
            <returns>If any new notifications were received, it returns <c>true</c> and <see cref="E:ComponentPro.Net.Mail.Imap.Update"/> event is fired; otherwise is <c>false</c>.</returns>
            <remarks>
            <p>
            The <see cref="M:ComponentPro.Net.Mail.Imap.CheckForUpdates"/> method is useful when you want to check for any possible updates including message deleted, message flags changed, etc. from the server.
            See <see cref="T:ComponentPro.Net.Mail.ImapUpdateEvent"/> for a list of supported notifications.
            </p>
            <p>
            Typically, a client application will call <see cref="O:CheckForUpdates"/> periodically while idle.
            </p>
            <p>
            This method represents IMAP NOOP command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.SendCommand(System.String,System.Object[])">
            <summary>
            Sends user-defined command to the server.
            </summary>
            <param name="command">User-defined command text (without line terminator) (eg. "CAPABILITY").</param>
            <param name="parameters">List of parameters. Allowed types are <see cref="T:System.String"/> and a byte array.</param>
            <returns>The ID (tag in IMAP4 terms) of the message, or a null reference (Nothing in Visual Basic) if server does not support it.</returns>
            <remarks>
            <p>
            After calling this method. You need to call the <see cref="M:ComponentPro.Net.Mail.Imap.ReadResponse"/> method to read the response of the server for the command you have sent.
            </p>
            <p>
            If the specified parameters are string, they are sent without conversion. Byte array parameters are sent as literals - binary blocks of data.
            Having good understanding of IMAP protocol is strongly recommended when using this method.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ReadResponse">
            <summary>
            Returns the corresponding response of the IMAP server to the command that was sent using the <see cref="M:ComponentPro.Net.Mail.Imap.SendCommand(System.String,System.Object[])"/> method.
            </summary>
            <returns>Response of the IMAP server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representing this object</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessage(ComponentPro.Net.Mail.ImapMessageSet,System.String)">
            <summary>
            Copies messages from the current folder that belong to a specified message set to the specified folder.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="destinationFolder">Name of the mailbox that will receive copies of messages.</param>
            <returns>A list of the target messages' unique IDs, or null (Nothing in Visual Basic) 
            if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            This method represents IMAP COPY command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessage(System.Int32,System.String)">
            <summary>
            Copies a message with the specified message inbox index to the specified folder.
            </summary>
            <param name="messageInboxIndex">Message inbox index.</param>
            <param name="destinationFolder">Folder that will receive copies of the message.</param>
            <returns>Unique ID of the target message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            This method represents IMAP COPY command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessage(System.String,System.String)">
            <summary>
            Copies a message with the specified unique ID to the specified folder.
            </summary>
            <param name="uniqueId">Message unique ID.</param>
            <param name="destinationFolder">Folder that will receive copies of the message.</param>
            <returns>Unique ID of the target message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            This method represents IMAP COPY command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessage(System.Int32,System.String)">
            <summary>
            Moves a message with the specified sequence number from the current mailbox to another mailbox.
            </summary>
            <param name="sequenceNumber">The message sequence number.</param>
            <param name="destinationFolder">The mailbox that messages will be moved to.</param>
            <remarks>
            This method represents IMAP COPY and IMAP STOR commands.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessage(System.String,System.String)">
            <summary>
            Moves a message with the specified message unique ID from the current mailbox to another mailbox.
            </summary>
            <param name="uniqueId">The message unique id.</param>
            <param name="destinationFolder">The mailbox that messages will be moved to.</param>
            <remarks>
            This method represents IMAP COPY and IMAP STOR commands.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessage(ComponentPro.Net.Mail.ImapMessageSet,System.String)">
            <summary>
            Moves messages (in the specified message set) from the current mailbox to the specified mailbox.
            </summary>
            <param name="messageSet">The message set.</param>
            <param name="destinationFolder">The mailbox that messages will be moved to.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="flags">The message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,System.String,System.String,System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Uploads the message to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="flags">Message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="flags">Message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            The data of the input stream be in MIME format. In order to upload an Outlook '.msg' message, load the message using the <see cref="O:ComponentPro.Net.Mail.MailMessage.Load"/> methods and 
            upload it using the <see cref="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])"/> method.
            </p>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="flags">The message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            The file content must be in MIME format. MIME files often have the '.eml' extension. 
            Outlook mail message '.msg' cannot be uploaded using this method. In order to upload an Outlook '.msg' message, load the message using the <see cref="O:ComponentPro.Net.Mail.MailMessage.Load"/> methods and 
            upload it using the <see cref="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])"/> method.
            </p>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,ComponentPro.Net.Mail.MailMessage)">
            <summary>
            Uploads the message to the specified folder.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="message">Message to upload.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension.</returns>
            <remarks>
            <p>
            This method represents IMAP APPEND command.
            </p>
            <p>
            Unique ID of the message will be returned if the server supports the <see cref="T:ComponentPro.Net.Mail.ImapFeatures"/>.UniqueIdPlus extension
            and it is enabled. See <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> and <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/>.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Uploads the message to the specified folder.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension.</returns>
            <remarks>
            <p>
            This method represents IMAP APPEND command.
            </p>
            <p>
            Unique ID of the message will be returned if the server supports the <see cref="T:ComponentPro.Net.Mail.ImapFeatures"/>.UniqueIdPlus extension
            and it is enabled. See <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> and <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/>.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,System.IO.Stream)">
            <summary>
            Uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension.</returns>
            <remarks>
            <p>
            The stream must contain data in MIME format, other formats are not supported.
            MIME files often have the '.eml' extension and are produced by Outlook Express.
            In contrast, Outlook produces '.msg' files that are not MIME files and therefore
            cannot be uploaded using this method.
            </p>
            <p>
            This method represents IMAP APPEND command.
            </p>
            <p>
            Unique ID of the message will be returned if the server supports the <see cref="T:ComponentPro.Net.Mail.ImapFeatures"/>.UniqueIdPlus extension
            and it is enabled. See <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> and <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/>.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,System.String)">
            <summary>
            Uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="path">The path to the mail message file.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension.</returns>
            <remarks>
            <p>
            The file must be in MIME format, other formats are not supported.
            MIME files often have the '.eml' extension and are produced by Outlook Express.
            In contrast, Outlook produces '.msg' files that are not MIME files and therefore
            cannot be uploaded using this method.
            </p>
            <p>
            This method represents IMAP APPEND command.
            </p>
            <p>
            Unique ID of the message will be returned if the server supports the <see cref="T:ComponentPro.Net.Mail.ImapFeatures"/>.UniqueIdPlus extension
            and it is enabled. See <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> and <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/>.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="flags">The message flags.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,System.String,System.String,System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Uploads the message to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="flags">Message flags.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="flags">Message flags.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            The data of the input stream be in MIME format. In order to upload an Outlook '.msg' message, load the message using the <see cref="O:ComponentPro.Net.Mail.MailMessage.Load"/> methods and 
            upload it using the <see cref="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])"/> method.
            </p>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="flags">The message flags.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            The file content must be in MIME format. MIME files often have the '.eml' extension. 
            Outlook mail message '.msg' cannot be uploaded using this method. In order to upload an Outlook '.msg' message, load the message using the <see cref="O:ComponentPro.Net.Mail.MailMessage.Load"/> methods and 
            upload it using the <see cref="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])"/> method.
            </p>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadRawMessage(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.Net.Mail.MailDateTime)">
            <summary>
            Uploads a mail message inside the specified data stream to the specified folder, assigns the specified date and flags to this message.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="input">The input stream. This stream must contain data in MIME format.</param>
            <param name="flags">The message flags.</param>
            <param name="internalDate">The IMAP message date/time.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            The supplied stream must represent a valid MIME format message because the <see cref="O:UploadRawMessage"/> method does not 
            parse the message like <see cref="O:UploadMessage"/> methods. MIME files often have the '.eml' extension. 
            Outlook mail message '.msg' cannot be uploaded using this method. In order to upload an Outlook '.msg' message, load the message using the <see cref="O:ComponentPro.Net.Mail.MailMessage.Load"/> methods and 
            upload it using the <see cref="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])"/> method.
            </p>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadRawMessage(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.Net.Mail.MailDateTime,System.String[])">
            <summary>
            Uploads a mail message inside the specified data stream to the specified folder, assigns the specified date and flags to this message.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="input">The input stream. This stream must contain data in MIME format.</param>
            <param name="flags">The message flags.</param>
            <param name="internalDate">The IMAP message date/time.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>Unique ID of the message, or null (Nothing in Visual Basic) if the server does not support the UIDPLUS extension (check in <see cref="P:ComponentPro.Net.Mail.Imap.SupportedFeatures"/> property) or not allowed in the <see cref="P:ComponentPro.Net.Mail.Imap.EnabledFeatures"/> property.</returns>
            <remarks>
            <p>
            The supplied stream must represent a valid MIME format message because the <see cref="O:UploadRawMessage"/> method does not 
            parse the message like <see cref="O:UploadMessage"/> methods. MIME files often have the '.eml' extension. 
            Outlook mail message '.msg' cannot be uploaded using this method. In order to upload an Outlook '.msg' message, load the message using the <see cref="O:ComponentPro.Net.Mail.MailMessage.Load"/> methods and 
            upload it using the <see cref="M:ComponentPro.Net.Mail.Imap.UploadMessage(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])"/> method.
            </p>
            <p>
            This method represents IMAP APPEND command.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnCopyMessageCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.ImapCopyMessageReference})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.CopyMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapCopyMessageReference},System.Object)">
            <summary>
            Asynchronously copies messages from the current folder that belong to a specified message set to the specified folder.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="destinationFolder">Folder that will receive copies of messages.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.String,System.Object)">
            <summary>
            Asynchronously copies messages from the current folder that belong to a specified message set to the specified folder.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="destinationFolder">Folder that will receive copies of messages.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.String)">
            <summary>
            Asynchronously copies messages from the current folder that belong to a specified message set to the specified folder.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <param name="destinationFolder">Folder that will receive copies of messages.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessageAsync(System.Int32,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapCopyMessageReference},System.Object)">
            <summary>
            Asynchronously copies a message with the specified sequence number to the specified folder.
            </summary>
            <param name="messageInboxIndex">The message inbox index number.</param>
            <param name="destinationFolder">Name of the folder that will receive copies of the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessageAsync(System.Int32,System.String,System.Object)">
            <summary>
            Asynchronously copies a message with the specified sequence number to the specified folder.
            </summary>
            <param name="messageInboxIndex">The message inbox index number.</param>
            <param name="destinationFolder">Name of the folder that will receive copies of the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessageAsync(System.Int32,System.String)">
            <summary>
            Asynchronously copies a message with the specified sequence number to the specified folder.
            </summary>
            <param name="messageInboxIndex">The message inbox index number.</param>
            <param name="destinationFolder">Name of the folder that will receive copies of the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessageAsync(System.String,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.ImapCopyMessageReference},System.Object)">
            <summary>
            Asynchronously copies a message with the specified unique ID to the specified folder.
            </summary>
            <param name="uniqueId">The message unique id.</param>
            <param name="destinationFolder">Name of the folder that will receive copies of the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessageAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronously copies a message with the specified unique ID to the specified folder.
            </summary>
            <param name="uniqueId">The message unique id.</param>
            <param name="destinationFolder">Name of the folder that will receive copies of the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.CopyMessageAsync(System.String,System.String)">
            <summary>
            Asynchronously copies a message with the specified unique ID to the specified folder.
            </summary>
            <param name="uniqueId">The message unique id.</param>
            <param name="destinationFolder">Name of the folder that will receive copies of the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnMoveMessageCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the MoveMessageCompleted event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously moves the specified messages from the currently selected mailbox to the specified mailbox.
            </summary>
            <param name="messageSet">The message set.</param>
            <param name="destinationFolder">The folder that messages will be moved to.</param>
            <param name="callback">An optional asynchronous callback to be called when the operation is complete.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns> An object that references the asynchronous operation. </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.String,System.Object)">
            <summary>
            Asynchronously moves the specified messages from the currently selected mailbox to the specified mailbox.
            </summary>
            <param name="messageSet">The message set.</param>
            <param name="destinationFolder">The folder that messages will be moved to.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>
            An object that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessageAsync(ComponentPro.Net.Mail.ImapMessageSet,System.String)">
            <summary>
            Asynchronously moves the specified messages from the currently selected mailbox to the specified mailbox.
            </summary>
            <param name="messageSet">The message set.</param>
            <param name="destinationFolder">The folder that messages will be moved to.</param>
            <returns>
            An object that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessageAsync(System.Int32,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Begins asynchronous Move operation.
            Copies a message with the specified sequence number to the specified folder.
            </summary>
            <param name="messageInboxIndex">The sequence number of the message in the currently selected mailbox.</param>
            <param name="destinationFolder">The folder that messages will be copied to.</param>
            <param name="callback">An optional asynchronous callback to be called when the operation is complete.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>
            An object that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessageAsync(System.Int32,System.String,System.Object)">
            <summary>
            Begins asynchronous Move operation.
            Copies a message with the specified sequence number to the specified folder.
            </summary>
            <param name="messageInboxIndex">The sequence number of the message in the currently selected mailbox.</param>
            <param name="destinationFolder">The folder that messages will be copied to.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>
            An object that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessageAsync(System.Int32,System.String)">
            <summary>
            Begins asynchronous Move operation.
            Copies a message with the specified sequence number to the specified folder.
            </summary>
            <param name="messageInboxIndex">The sequence number of the message in the currently selected mailbox.</param>
            <param name="destinationFolder">The folder that messages will be copied to.</param>
            <returns>
            An object that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessageAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Begins asynchronous Move operation.
            Copies a message with the specified unique ID to the specified folder.
            </summary>
            <param name="uniqueId">The unique id of the message in the currently selected mailbox.</param>
            <param name="destinationFolder">The folder that messages will be copied to.</param>
            <param name="callback">An optional asynchronous callback to be called when the operation is complete.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>
            An object that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessageAsync(System.String,System.String,System.Object)">
            <summary>
            Begins asynchronous Move operation.
            Copies a message with the specified unique ID to the specified folder.
            </summary>
            <param name="uniqueId">The unique id of the message in the currently selected mailbox.</param>
            <param name="destinationFolder">The folder that messages will be copied to.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>
            An object that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.MoveMessageAsync(System.String,System.String)">
            <summary>
            Begins asynchronous Move operation.
            Copies a message with the specified unique ID to the specified folder.
            </summary>
            <param name="uniqueId">The unique id of the message in the currently selected mailbox.</param>
            <param name="destinationFolder">The folder that messages will be copied to.</param>
            <returns>
            An object that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnUploadRawMessageCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.String})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.UploadRawMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadRawMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.Net.Mail.MailDateTime,System.String[],ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads a mail message inside the specified data stream to the specified folder, assigns the specified date and flags to this message.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="input">The input stream. This stream must contain data in MIME format.</param>
            <param name="flags">The message flags.</param>
            <param name="internalDate">The IMAP message date/time.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadRawMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.Net.Mail.MailDateTime,System.String[],System.Object)">
            <summary>
            Asynchronously uploads a mail message inside the specified data stream to the specified folder, assigns the specified date and flags to this message.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="input">The input stream. This stream must contain data in MIME format.</param>
            <param name="flags">The message flags.</param>
            <param name="internalDate">The IMAP message date/time.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadRawMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.Net.Mail.MailDateTime,System.String[])">
            <summary>
            Asynchronously uploads a mail message inside the specified data stream to the specified folder, assigns the specified date and flags to this message.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="input">The input stream. This stream must contain data in MIME format.</param>
            <param name="flags">The message flags.</param>
            <param name="internalDate">The IMAP message date/time.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadRawMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.Net.Mail.MailDateTime,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads a mail message inside the specified data stream to the specified folder, assigns the specified date and flags to this message.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="input">The input stream. This stream must contain data in MIME format.</param>
            <param name="flags">The message flags.</param>
            <param name="internalDate">The IMAP message date/time.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadRawMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.Net.Mail.MailDateTime,System.Object)">
            <summary>
            Asynchronously uploads a mail message inside the specified data stream to the specified folder, assigns the specified date and flags to this message.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="input">The input stream. This stream must contain data in MIME format.</param>
            <param name="flags">The message flags.</param>
            <param name="internalDate">The IMAP message date/time.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadRawMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.Net.Mail.MailDateTime)">
            <summary>
            Asynchronously uploads a mail message inside the specified data stream to the specified folder, assigns the specified date and flags to this message.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="input">The input stream. This stream must contain data in MIME format.</param>
            <param name="flags">The message flags.</param>
            <param name="internalDate">The IMAP message date/time.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.OnUploadMessageCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.String})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.UploadMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="flags">The message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="flags">The message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="flags">The message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="flags">The message flags.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags,System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="flags">The message flags.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="flags">The message flags.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,ComponentPro.Net.Mail.MailMessage,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message to the specified folder.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,ComponentPro.Net.Mail.MailMessage,System.Object)">
            <summary>
            Asynchronously uploads the message to the specified folder.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,ComponentPro.Net.Mail.MailMessage)">
            <summary>
            Asynchronously uploads the message to the specified folder.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="message">The mail message object.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.String,System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="flags">Message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.String,System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],System.Object)">
            <summary>
            Asynchronously uploads the message to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="flags">Message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.String,System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Asynchronously uploads the message to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="flags">Message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.String,System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="flags">Message flags.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.String,System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.Object)">
            <summary>
            Asynchronously uploads the message to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="flags">Message flags.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.String,System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Asynchronously uploads the message to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="flags">Message flags.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.String,System.String,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message to the specified folder.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Asynchronously uploads the message to the specified folder.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Asynchronously uploads the message to the specified folder.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="flags">Message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],System.Object)">
            <summary>
            Asynchronously uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="flags">Message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Asynchronously uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="flags">Message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="flags">Message flags.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags,System.Object)">
            <summary>
            Asynchronously uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="flags">Message flags.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.IO.Stream,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Asynchronously uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="flags">Message flags.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.IO.Stream,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.IO.Stream,System.Object)">
            <summary>
            Asynchronously uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.IO.Stream)">
            <summary>
            Asynchronously uploads the message read from the stream to the specified folder and sets its flags.
            </summary>
            <param name="folder">Folder that will receive the message.</param>
            <param name="input">The input stream.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="flags">The message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.String[],System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="flags">The message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.String[])">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="flags">The message flags.</param>
            <param name="keywords">Keywords to set.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="flags">The message flags.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags,System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="flags">The message flags.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Asynchronously uploads the message read from a local file and sets its flags.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="flags">The message flags.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronously uploads the message read from a local file.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Imap.UploadMessageAsync(System.String,System.String)">
            <summary>
            Asynchronously uploads the message read from a local file.
            </summary>
            <param name="folder">The full name of the folder to upload the message to.</param>
            <param name="path">The path to the mail message file.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.AuthenticateCompleted">
            <summary>
            Occurs when an <see cref="O:ComponentPro.Net.Mail.Imap.AuthenticateAsync">asynchronous authentication operation</see> completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.ConnectCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.ConnectAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.DisconnectCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.DisconnectAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.UpgradeConnectionCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.UpgradeConnectionAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.ReadResponseCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.ReadResponseAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.SendCommandCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.SendCommandAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.CheckForUpdatesCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.CheckForUpdatesAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.PurgeCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.PurgeAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.FlagCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.FlagAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.DeleteMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.DeleteMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.UndeleteMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.UndeleteMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.DownloadMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.DownloadMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.DownloadMailMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.DownloadMailMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.DownloadMessageHeadersCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.DownloadMessageHeadersAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.DownloadMessagePartCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.DownloadMessagePartAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.DownloadImapMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.DownloadImapMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.CommandResponse">
            <summary>
            Occurs when a command has been sent to or a response is received from the server.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.ListProcessing">
            <summary>
            Occurs when a response line from the IMAP server is processed.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.StateChanged">
            <summary>
            Occurs when the state of the <see cref="T:ComponentPro.Net.Mail.Imap"/> object is changed.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.Progress">
            <summary>
            Occurs when data is send or received.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.Update">
            <summary>
            Occurs when a notification message is received.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.CertificateReceived">
            <summary>
            Occurs when an IMAP server's certificate was received and verified.
            </summary>
            <seealso cref="E:ComponentPro.Net.Mail.Imap.CertificateRequired"/>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.CertificateRequired">
            <summary>
            Occurs when a client certificate is required by the IMAP server, or the one provided was not accepted.
            </summary>
            <seealso cref="E:ComponentPro.Net.Mail.Imap.CertificateReceived"/>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.ListMessagesCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.ListMessagesAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.FolderExistsCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.FolderExistsAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.ListFoldersCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.ListFoldersAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.CreateFolderCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.CreateFolderAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.DeleteFolderCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.DeleteFolderAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.RenameFolderCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.RenameFolderAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.SubscribeCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.SubscribeAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.UnsubscribeCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.UnsubscribeAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.GetFolderInfoCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.GetFolderInfoAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.SetMailboxCheckpointCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.SetMailboxCheckpointAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.SelectCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.SelectAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.DeselectCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.DeselectAsync"/> operation completes.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.UserName">
            <summary>
            Gets the authenticated user name, if available.
            </summary>
            <value>User name, or null (Nothing in VB.NET).</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.ServerName">
            <summary>
            Gets the server name, if available.
            </summary>
            <value>Server name, or null (Nothing in VB.NET).</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.ServerPort">
            <summary>
            Gets the server port, if available.
            </summary>
            <value>server port, or 0.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.WorkingFolder">
            <summary>
            Gets the currently selected <see cref="T:ComponentPro.Net.Mail.Folder"/>, or null reference (or Nothing in VB.NET) if no mailbox is selected.
            </summary>
            <value>The Currently selected mailbox.</value>
            <remarks>
            Use <see cref="M:ComponentPro.Net.Mail.Imap.Select(System.String)"/> to select a mailbox and <see cref="O:Deselect"/> to deselect it.
            </remarks>
            <seealso cref="M:ComponentPro.Net.Mail.Imap.Select(System.String)"/>
            <seealso cref="O:Deselect"/>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.Proxy">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Net.WebProxyEx">server proxy</see>, if any, used to connect to the remote IMAP server.
            </summary>
            <value>The <see cref="T:ComponentPro.Net.WebProxyEx">server proxy</see>, if any, used to connect to the remote IMAP server.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.Encoding">
            <summary>
            Gets or sets the <see cref="T:System.Text.Encoding">Encoding</see> that is used to encode commands sent to the server, and decode replies from the server.
            </summary>
            <value>An <see cref="T:System.Text.Encoding">Encoding</see> value representing the encoding format. 
            By default, <see cref="T:System.Text.Encoding">Encoding.Default</see>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.Config">
            <summary>
            Gets or sets IMAP object settings.
            </summary>
            <value>IMAP object settings.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.SupportedFeatures">
            <summary>
            Gets the bit field specifying the extensions supported by the server.
            </summary>
            <value>Extensions supported by the server.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.EnabledFeatures">
            <summary>
            Gets or sets the bit field specifying the enabled extensions.
            </summary>
            <value>Enabled extensions.</value>
            <remarks>
            Enabled extensions will be used when appropriate.
            By default, all extensions are enabled.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.SupportedAuthenticationMethods">
            <summary>
            Gets the list of supported authentication methods.
            </summary>
            <returns>The list of supported authentication methods</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.IsConnectionSecured">
            <summary>
            Gets a boolean value indicating whether the current connection (if any) is secured with TLS/SSL layer.
            </summary>
            <value><c>true</c> if the current connection is TLS/SSL; <c>false</c> if the connection is not secure.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.Timeout">
            <summary>
            Gets or sets a value, in milliseconds, indicating after what period of time an IMAP operation 
            (sending commands, waiting for responses or time between data buffer transfers) should timeout. 
            </summary>
            <remarks>
            By default, this property is set to 60000 (60 seconds). Minimal value is 1000. 
            A value of -1 or 0 indicates that the request does not timeout.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.AbortTimeout">
            <summary>
            Gets or sets a value, in milliseconds, indicating after what period of time a IMAP <see cref="M:ComponentPro.Net.Mail.Imap.Cancel">abort operation</see> should timeout. 
            </summary>
            <remarks>
            By default, this property is set to 3000 (3 seconds). Minimal value is 1000.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.State">
            <summary>
            Gets the current state of the <see cref="T:ComponentPro.Net.Mail.Imap"/> object.
            </summary>
            <value>The current state.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.LocalEndPoint">
            <summary>
            Gets the local client <see cref="T:System.Net.EndPoint"/>.
            </summary>
            <value>The <see cref="T:System.Net.EndPoint"/> that the component is using for communications.</value>
            <remarks>
            The <see cref="P:ComponentPro.Net.Mail.Imap.LocalEndPoint"/> property gets an <see cref="T:System.Net.EndPoint"/> that contains the local IP address and port number to which your Socket is bound. 
            You must cast this <see cref="T:System.Net.EndPoint"/> to an <see cref="T:System.Net.IPEndPoint"/> before retrieving any information. 
            You can then call the <see cref="P:System.Net.IPEndPoint.Address"/> method to retrieve the local <see cref="T:System.Net.IPAddress"/>, and the <see cref="P:System.Net.IPEndPoint.Port"/> method to retrieve the local port number.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.RemoteEndPoint">
            <summary>
            Gets the remote server <see cref="T:System.Net.EndPoint"/>.
            </summary>
            <value>The <see cref="T:System.Net.EndPoint"/> with which the Socket is communicating.</value>
            <remarks>
            If you are using a connection-oriented protocol, the RemoteEndPoint property gets the EndPoint that contains the remote 
            IP address and port number to which the Socket is connected. If you are using a connectionless protocol, 
            RemoteEndPoint contains the default remote IP address and port number with which the Socket will communicate. 
            You must cast this <see cref="T:System.Net.EndPoint"/> to an <see cref="T:System.Net.IPEndPoint"/> before retrieving any information. 
            You can then call the <see cref="P:System.Net.IPEndPoint.Address"/> method to retrieve the remote <see cref="T:System.Net.IPAddress"/>, and the <see cref="P:System.Net.IPEndPoint.Port"/> method to retrieve the remote port number.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.IsConnected">
            <summary>
            Gets a boolean value indicating whether the connection has been established.
            </summary>
            <value><c>true</c> if the session is connected; otherwise is <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.IsAuthenticated">
            <summary>
            Gets a boolean value indicating whether the session is authenticated. 
            This is used to check whether the session has been automatically preauthenticated prior to calling the <see cref="O:Authenticate"/> method.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.ClearTextLoginDisabled">
            <summary>
            Returns a value indicating whether the clear text login is disabled.
            </summary>
            <remarks>
            Either use one of the more secure authentication methods, or upgrade
            to TLS/SSL if you wish to perform clear text login.
            </remarks>
            <value>A value indicating whether the clear text login is disabled.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Imap.IsBusy">
            <summary>
            Gets a value indicating whether the component is performing a lengthy operation.
            </summary>
            <value>A bool value indicating whether the component is busy because it's doing some work.</value>
            <returns><c>true</c> if there is any operation in progress; <c>false</c> otherwise.</returns>
            <remarks>
            When an operation is still in progress, it's not possible to start another operation.
            </remarks>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.CopyMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.CopyMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.MoveMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.MoveMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.UploadRawMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.UploadRawMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Imap.UploadMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Imap.UploadMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapCopyMessageReference">
            <summary>
            Represents a result of the <see cref="M:ComponentPro.Net.Mail.Imap.CopyMessage(ComponentPro.Net.Mail.ImapMessageSet,System.String)">CopyMessage</see> method. It contains the source and new unique IDs and can map between them.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCopyMessageReference.GetTargetMessageSet">
            <summary>
            Gets a message set comprised of the new unique IDs.
            </summary>
            <returns>Message set.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCopyMessageReference.GetSourceMessageSet">
            <summary>
            Gets a message set comprised of the original unique IDs.
            </summary>
            <returns>Message set.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCopyMessageReference.GetSourceUniqueId(System.String)">
            <summary>
            Returns a unique ID of the source message corresponding to the specified target message unique ID.
            </summary>
            <param name="targetUniqueId">Target message unique ID.</param>
            <returns>Source message unique ID, or null if not present.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCopyMessageReference.GetTargetUniqueId(System.String)">
            <summary>
            Returns a unique ID of the target message corresponding to the specified source message unique ID.
            </summary>
            <param name="sourceUniqueId">Source message unique ID.</param>
            <returns>Target message unique ID, or null if not present.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCopyMessageReference.NewUniqueIds">
            <summary>
            Gets an array of the new unique IDs.
            </summary>
            <returns>Array of unique IDs.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCopyMessageReference.SourceUniqueIds">
            <summary>
            Gets an array of the original unique IDs.
            </summary>
            <returns>Array of unique IDs.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCopyMessageReference.CopiedMessageCount">
            <summary>
            Returns the number of copied messages.
            </summary>
            <value>The number of copied messages.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapException">
            <summary>
            The exception that is thrown when an error occurs while using Imap component.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.ImapException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.ImapException"/> class.
            </summary>
            <remarks>This constructor initializes the <see cref="P:System.Exception.Message">Message</see> property of the new instance to a message that describes the general error.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.ImapException"/> class with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapException.#ctor(System.String,ComponentPro.Net.Mail.MailClientExceptionStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.ImapException"/> class with the specified error message and status.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="status">One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.ImapException"/> class with the specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapException.#ctor(System.String,System.Exception,ComponentPro.Net.Mail.MailClientExceptionStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.ImapException"/> class with the specified error message, status,
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
            <param name="status">One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapException.#ctor(ComponentPro.Net.Mail.ImapResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.ImapException"/> class with the specified <see cref="T:ComponentPro.Net.Mail.ImapResponse"/>.
            </summary>
            <param name="response">The <see cref="T:ComponentPro.Net.Mail.ImapResponse"/>.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapException.Status">
            <summary>
            Gets the status of the response.
            </summary>
            <value>One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapException.Response">
            <summary>
            Gets the <see cref="T:ComponentPro.Net.Mail.ImapResponse"/> if the exception.
            </summary>
            <value>The <see cref="T:ComponentPro.Net.Mail.ImapResponse"/> if <see cref="P:ComponentPro.Net.Mail.ImapException.Status"/> is <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus">ProtocolError</see>; <b>null</b> reference otherwise.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.Folder">
            <summary>
            Represents a mailbox of the account on the mail server.
            </summary>
            <remarks>
            The list of mailboxes can be obtained using <see cref="O:ComponentPro.Net.Mail.Imap.ListFolders"/> method of <see cref="T:ComponentPro.Net.Mail.Imap"/> class. In any case, an account on the mail server is guaranteed to contain at least "INBOX" mailbox (case-insensitive). Also, IMAP4 accounts often contain mailboxes such as "Sent", "Drafts", etc.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.PermanentFlags">
            <summary>
            Gets message flags that can be changed permanently.
            </summary>
            <value>Message flags that can be changed permanently.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.SupportedFlags">
            <summary>
            Gets supported message flags.
            </summary>
            <value>Supported message flags.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.ReadOnly">
            <summary>
            Gets a value indicating whether the folder is read-only.
            </summary>
            <value>A value indicating whether the folder is read-only.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.HasNewMessages">
            <summary>
            Gets a value indicating whether this folder contains messages
            that have been added since the last time the folder was selected.
            </summary>
            <value>Value indicating whether this folder contains any new messages.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.Selectable">
            <summary>
            Gets a value indicating whether it is possible to select this folder.
            </summary>
            <value>A value indicating whether it is possible to select this folder.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.SublevelsAllowed">
            <summary>
            Gets a value indicating whether any subfolders can exist
            under this folder. This value is only set for <see cref="T:ComponentPro.Net.Mail.Folder">folders</see>
            returned by a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> methods.
            </summary>
            <value>Value indicating whether any child folders can exist under this folder.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.TotalMessages">
            <summary>
            Gets the number of messages in the folder.
            </summary>
            <value>Number of messages in the folder.</value>
            <remarks>
            This property is not set for <see cref="T:ComponentPro.Net.Mail.Folder">folders</see>
            returned by a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> methods
            and will contain a value of 0.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.RecentMessages">
            <summary>
            Gets the number of messages that arrived recently.
            This property is not set for <see cref="T:ComponentPro.Net.Mail.Folder">folders</see>
            returned by a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> methods
            and will contain a value of 0.
            </summary>
            <value>Number of messages that arrived recently.</value>
            <remarks>
            If multiple sessions are accessing the mailbox simultaneously,
            only one of them will be informed about each recently arrived messages.
            Also, the only reliable way to identify the recent messages is to look
            at the message flags or to do a <see cref="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapCriterion[])">search</see> for them.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.NewUnseenMessages">
            <summary>
            Gets the number of messages that have not been read.
            This property is not set for <see cref="T:ComponentPro.Net.Mail.Folder">folders</see>
            returned by a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> 
            and <see cref="M:ComponentPro.Net.Mail.Imap.GetFolderInfo(System.String)"/> methods and will contain a value of 0.
            </summary>
            <value>Sequence number of the first message that has not been read.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.NotSeenMessages">
            <summary>
            Gets the number of messages that have not been read.
            This property is not set for <see cref="T:ComponentPro.Net.Mail.Folder">folders</see>
            returned by a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> methods
            and will contain a value of 0.
            </summary>
            <value>Number of messages that have not been read.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.UidNext">
            <summary>
            Gets the unique ID to be assigned to a next message that arrives into this folder.
            This property is not set for <see cref="T:ComponentPro.Net.Mail.Folder">folders</see>
            returned by a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> methods
            and will contain a value of 0. Also, some servers don't support this,
            and null (Nothing in Visual Basic) will be returned for these as well.
            </summary>
            <value>Unique ID of the next message.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.UidValidity">
            <summary>
            Gets the validity ID of the mailbox.
            This property is not set for <see cref="T:ComponentPro.Net.Mail.Folder">folders</see>
            returned by a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> methods
            and will contain a value of 0.
            </summary>
            <value>The validity ID of the mailbox.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.Name">
            <summary>
            Gets the name of the folder.
            </summary>
            <value>Name of the folder.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.ShortName">
            <summary>
            Gets the short name of the mailbox.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.LevelsDelimiter">
            <summary>
            Gets a string that is used to delimit levels of hieararchy under
            this folder. It usually contains either '/' or '.'.
            This value is only set for <see cref="T:ComponentPro.Net.Mail.Folder">folders</see>
            returned by a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> methods.
            For <see cref="M:ComponentPro.Net.Mail.Imap.GetFolderInfo(System.String)"/> method and <see cref="P:ComponentPro.Net.Mail.Imap.WorkingFolder"/>
            property, this will throw an exception.
            </summary>
            <value>Hierarchy delimiter.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.KnownPurpose">
            <summary>
            This property is deprecated, new implementations should use the <see cref="P:ComponentPro.Net.Mail.Folder.Purpose"/> property instead.
            Returns folder purpose if known. This property only contains useful information if
            the IMAP server supports the XLIST command or extended LIST command (RFC 6154) and the folder list was returned using the <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> method.
            At the moment, this is not suppored in <see cref="O:ComponentPro.Net.Mail.Imap.ListFolders">listing mailboxes</see> with subscribed mode.
            </summary>
            <value>Folder purpose.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Folder.Purpose">
            <summary>
            Returns folder purpose if known. This property only contains useful information if
            the IMAP server supports the XLIST command or extended LIST command (RFC 6154) and the folder list was returned using the <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> method.
            At the moment, this is not suppored in subscribed mode.
            </summary>
            <value>Folder purpose.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.FolderCollection">
            <summary>
            Provides a container for a collection of <see cref="T:ComponentPro.Net.Mail.Folder"/> objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.FolderCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.FolderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.FolderCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.FolderCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.</returns>
            <remarks>
            A shallow copy of a collection copies only the elements
            of the collection, whether they are reference types or value
            types, but it does not copy the objects that the references
            refer to. The references in the new collection point to the same
            objects that the references in the original collection point to.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.FolderCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>.</returns>
            <remarks>GetEnumerator is the method that implements the foreach statement (For Each in Visual Basic). You should not need to call this method directly.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.FolderCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.FolderCollection.Add(ComponentPro.Net.Mail.Folder)">
            <summary>
            Adds the <see cref="T:ComponentPro.Net.Mail.Folder"/> to the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.Folder"/> to be added to the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.FolderCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ComponentPro.Net.Mail.Folder"/> at the specified index from the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ComponentPro.Net.Mail.Folder"/> to remove.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.FolderCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access to the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.FolderCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.
            </summary>
            <value>The number of elements contained in the <see cref="T:ComponentPro.Net.Mail.FolderCollection"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.FolderCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Net.Mail.Folder"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ComponentPro.Net.Mail.Folder"/> to get.</param>
            <value><see cref="T:ComponentPro.Net.Mail.Folder"/> of the specified index.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapMessageCollection">
            <summary>
            Provides a container for a collection of <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.</returns>
            <remarks>
            A shallow copy of a collection copies only the elements
            of the collection, whether they are reference types or value
            types, but it does not copy the objects that the references
            refer to. The references in the new collection point to the same
            objects that the references in the original collection point to.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>.</returns>
            <remarks>GetEnumerator is the method that implements the foreach statement (For Each in Visual Basic). You should not need to call this method directly.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.GetEnumerator(System.Int32,System.Int32)">
            <summary>
            Returns an enumerator for a section of the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> section that the enumerator should refer to.</param>
            <param name="count">The number of elements in the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> section that the enumerator should refer to.</param>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the specified section of the ArrayList.</returns>
            <remarks>Not supported by ComponentPro IMAP for .NET Compact Framework.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Insert(System.Int32,ComponentPro.Net.Mail.ImapMessage)">
            <summary>
            Inserts the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> at the specified position in the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <param name="index">The zero-based index at which the item is to be inserted.</param>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to be inserted to the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Add(ComponentPro.Net.Mail.ImapMessage)">
            <summary>
            Adds the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to be added to the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.System#Collections#Generic#ICollection{ComponentPro#Net#Mail#ImapMessage}#Remove(ComponentPro.Net.Mail.ImapMessage)">
            <summary>
            Removes the specified <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to remove from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.</param>
            <returns>True if removed, false if not found.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Remove(ComponentPro.Net.Mail.ImapMessage)">
            <summary>
            Removes the specified <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to remove from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Remove(System.String)">
            <summary>
            Removes <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> having specified unique id.
            </summary>
            <param name="uniqueId">Unique id of the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to remove from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Remove(System.Int32)">
            <summary>
            Removes <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> having specified sequence number.
            </summary>
            <param name="messageInboxIndex">Sequence number of the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to remove from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> at the specified index from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to remove.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Find(System.String)">
            <summary>
            Returns the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> of the specified unique id.
            </summary>
            <param name="uniqueId">The unique ID of the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to get.</param>
            <returns><see cref="T:ComponentPro.Net.Mail.ImapMessage"/> of the specified name.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Find(System.Int32)">
            <summary>
            Returns the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> of the specified id.
            </summary>
            <param name="messageInboxIndex">The ID of the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to get.</param>
            <returns><see cref="T:ComponentPro.Net.Mail.ImapMessage"/> of the specified name.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.ToUniqueIdMessageSet">
            <summary>
            Returns an <see cref="T:ComponentPro.Net.Mail.ImapMessageSet"/> that contains unique IDs of messages in this collection.
            </summary>
            <returns>IMAP message set.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.ToSequenceNumberMessageSet">
            <summary>
            Returns an <see cref="T:ComponentPro.Net.Mail.ImapMessageSet"/> that contains sequence numbers of messages in this collection.
            </summary>
            <returns>IMAP message set.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Sort">
            <summary>
            Sorts the messages in the entire <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> by sequence number ascending.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> using the specified comparer.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements, or a null reference to sort by sequence number ascending.</param>
            <remarks>This method uses <see cref="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)"/>, which uses QuickSort algorithm. See its description for more information.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in a section of <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> using the specified comparer.
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements, or a null reference to sort by sequence number ascending.</param>
            <remarks>This method uses <see cref="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)"/>, which uses QuickSort algorithm. See its description for more information.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.CopyTo(ComponentPro.Net.Mail.ImapMessage[],System.Int32)">
            <summary>
            Copies the range of elements from the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/> to a one-dimensional
            <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> array, starting at the specified index of the target array.
            </summary>
            <param name="array">One-dimensional zero-based <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> array that is the destination of the elements copied from the collection.</param>
            <param name="arrayIndex">A zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.IndexOf(ComponentPro.Net.Mail.ImapMessage)">
            <summary>
            Returns a zero-based index of the specified item within the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>, or -1 if not found.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to locate.</param>
            <returns>Zero-based index of the specified item within the collection, or -1.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageCollection.Contains(ComponentPro.Net.Mail.ImapMessage)">
            <summary>
            Determines whether the specified item is present in the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to locate.</param>
            <returns>True if present, false otherwise.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessageCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access to the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessageCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.
            </summary>
            <value>The number of elements contained in the <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessageCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> to get.</param>
            <value><see cref="T:ComponentPro.Net.Mail.ImapMessage"/> of the specified index.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessageCollection.System#Collections#Generic#ICollection{ComponentPro#Net#Mail#ImapMessage}#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value>True if read-only, false if read-write.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapMessage">
            <summary>
            Contains information about a single mail message on the IMAP server.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessage.GetRawHeaders">
            <summary>
            Returns the raw data of the message headers, if available.
            </summary>
            <value>Raw message headers; or null if not available.</value>
            <remarks>
            This field is only set if the <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.FullHeaders"/> 
            options was specified in a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts)"/> or <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/>.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessage.GetKeywords">
            <summary>
            Gets the list of keywords (custom flags) associated with the message.
            </summary>
            <returns>List of keywords.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessage.GetParts">
            <summary>
            Returns a list of message parts. This includes body views, attachments and linked resources.
            </summary>
            <returns>List of message parts.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.ValidFields">
            <summary>
            Returns a bit mask specifying which fields are valid.
            </summary>
            <value>A bit mask.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.HeadersParsingError">
            <summary>
            Gets an error that occurredduring message headers parsing.
            </summary>
            <value>An error that occurred during message headers parsing.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.BodyParsingError">
            <summary>
            Gets an error that occurred during message body parsing.
            </summary>
            <value>An error that occurred during message body parsing.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.MessageInboxIndex">
            <summary>
            Gets the message inbox index.
            </summary>
            <value>The message inbox index.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.UniqueId">
            <summary>
            Gets the message unique ID (case-sensitive string). 
            Note that it can contain a slash '/' - unsuitable to be used as a filename.
            </summary>
            <value>Unique ID.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.Flags">
            <summary>
            Gets the message flags.
            </summary>
            <value>Message flags.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.IsAnswered">
            <summary>
            Returns true if the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags"/> property contains the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags">Answered</see> flag.
            </summary>
            <value>True if answered.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.IsDeleted">
            <summary>
            Returns true if the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags"/> property contains the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags">Deleted</see> flag.
            </summary>
            <value>True if deleted.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.IsDraft">
            <summary>
            Returns true if the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags"/> property contains the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags">Draft</see> flag.
            </summary>
            <value>True if draft.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.IsFlagged">
            <summary>
            Returns true if the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags"/> property contains the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags">Flagged</see> flag.
            </summary>
            <value>True if flagged.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.IsRecent">
            <summary>
            Returns true if the <see cref="T:ComponentPro.Net.Mail.ImapMessageFlags"/> property contains the <see cref="F:ComponentPro.Net.Mail.ImapMessageFlags.Recent"/> flag.  
            This flag is set if the message has arrived during the current session and it is the first active session to see the message.
            </summary>
            <value>True if recent.</value>
            <remarks>
            Subsequent sessions won't see the flag (unless the folder was selected as read-only during the
            first session). This flag cannot be altered by the client.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.IsSeen">
            <summary>
            Returns true if the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags"/> property contains the <see cref="P:ComponentPro.Net.Mail.ImapMessage.Flags">Seen</see> flag.
            This flag is set if the message has been read.
            </summary>
            <value>True if seen (read).</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.Size">
            <summary>
            Gets the length of the message.
            </summary>
            <value>Message length.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.Date">
            <summary>
            Gets the origination date of this message.
            </summary>
            <value>The origination date.</value>
            <remarks>
            The origination date specifies the date and time at which the creator
            of the message indicated that the message was complete and ready to enter
            the mail delivery system.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.ReceivedDate">
            <summary>
            Gets the received date of this message.
            </summary>
            <value>The received date.</value>
            <remarks>
            The received date specifies the date and time at which the message
            was receied.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.From">
            <summary>
            Gets the list of authors of this message.
            </summary>
            <value>The list of authors.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.Sender">
            <summary>
            Gets the sender of this message. May be null.
            </summary>
            <value>The sender of this message.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.ReplyTo">
            <summary>
            Gets the list of addresses that should receive replies
            to this message.
            </summary>
            <value>The list of addresses that should receive replies.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.To">
            <summary>
            Gets the list of addresses of primary recipients of the message.
            </summary>
            <value>The list of primary recipients.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.CC">
            <summary>
            Gets the list of addresses of others who are to receive the message.
            </summary>
            <value>The list of other recipients.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.Bcc">
            <summary>
            Gets the list of addresses of recipients that are not to be revealed to other recipients of the message.
            </summary>
            <value>The list of recipients.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.MessageIdentifier">
            <summary>
            Gets the unique identifier of the message.
            </summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.InReplyTo">
            <summary>
            Gets the list of identifiers of messages to which the message is a reply.
            </summary>
            <value>The list of message identifiers.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.Subject">
            <summary>
            Gets the subject of the message.
            </summary>
            <value>The subject.</value>
            <remarks>
            This property contains a short string identifying the topic
            of the message.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.Headers">
            <summary>
            Gets the list of headers of this entity.
            </summary>
            <value>The list of headers.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.HasBodyHtml">
            <summary>
            Gets the value indicating whether the HTML body of the message was retrieved.
            </summary>
            <value>A value indicating whether the HTML body of the message was retrieved.</value>
            <remarks>
            This field is only set if the <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Body"/> options
            was specified in a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts)"/> or <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/>.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.HasBodyText">
            <summary>
            Gets the value indicating whether the text body of the message was retrieved.
            </summary>
            <value>A value indicating whether the text body of the message was retrieved.</value>
            <remarks>
            This field is only set if the <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Body"/> options
            was specified in a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts)"/> or <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/>.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.BodyHtml">
            <summary>
            Gets the HTML body of the message, or an empty string if no HTML body was retrieved
            </summary>
            <value>The HTML body of the message.</value>
            <remarks>
            This field is only set if the <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Body"/> options
            was specified in a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts)"/> or <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/>.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.BodyText">
            <summary>
            Gets the text body of the message, or an empty string if no text bodywas retrieved.
            </summary>
            <value>The text body of the message.</value>
            <remarks>
            This field is only set if the <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Body"/> options
            was specified in a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts)"/> or <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/>.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.HasAttachment">
            <summary>
            Returns a value indicating whether the message has an attachment (or more attachments).
            </summary>
            <value>True if message has attachment; false if no attachments.</value>
            <remarks>
            This field is only set if the <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.AttachmentInfo"/> option
            was specified in a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts)"/> or <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/>.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.HasResources">
            <summary>
            Returns a value indicating whether the message has a linked resource (or more linked resources).
            </summary>
            <value>True if message has linked resource; false if no linked resources.</value>
            <remarks>
            This field is only set if the <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.AttachmentInfo"/> option
            was specified in a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts)"/> or <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/>.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessage.IsSignedOrEncrypted">
            <summary>
            Returns a value indicating whether the message is signed or encrypted.
            </summary>
            <value>True if message is signed or encrypted; false if not signed or encrypted.</value>
            <remarks>
            This field is only set if the <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.AttachmentInfo"/> option
            was specified in a call to <see cref="M:ComponentPro.Net.Mail.Imap.ListMessages(ComponentPro.Net.Mail.ImapEnvelopeParts)"/> or <see cref="M:ComponentPro.Net.Mail.Imap.DownloadImapMessage(System.String,ComponentPro.Net.Mail.ImapEnvelopeParts)"/>.
            </remarks>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapMessagePartKind">
            <summary>
            Specifies IMAP message part kind.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessagePartKind.Text">
            <summary>
            Text view (body).
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessagePartKind.LinkedResource">
            <summary>
            Linked resource.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessagePartKind.Attachment">
            <summary>
            Attachment.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapMessagePart">
            <summary>
            Represents information about message part (body view, attachment or linked resource).
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessagePart.ContentId">
            <summary>
            Gets part's content ID, if available.
            </summary>
            <value>Content ID or null.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessagePart.FileName">
            <summary>
            Gets part's file name, if available.
            </summary>
            <value>File name or null.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessagePart.Size">
            <summary>
            Part's length.
            </summary>
            <value>Length.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessagePart.Kind">
            <summary>
            Gets a value indicating the part's kind.
            </summary>
            <value>Part kind.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessagePart.ContentType">
            <summary>
            Gets part's content type.
            </summary>
            <value>Content type.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessagePart.Id">
            <summary>
            Gets part ID. This is used by <see cref="M:ComponentPro.Net.Mail.Imap.DownloadMessagePart(System.String,System.String)"/>.
            </summary>
            <value>Part ID.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapMessageComparisonMethod">
            <summary>
            List of possible compare types for the <see cref="T:ComponentPro.Net.Mail.ImapMessageComparer"/> class.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageComparisonMethod.MessageInboxIndex">
            <summary>
            Message inbox index number.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageComparisonMethod.OriginationDate">
            <summary>
            Origination date.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageComparisonMethod.ReceivedDate">
            <summary>
            Received date.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageComparisonMethod.From">
            <summary>
            From.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageComparisonMethod.To">
            <summary>
            To.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageComparisonMethod.Subject">
            <summary>
            Subject.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapMessageComparer">
            <summary>
            Class used to compare <see cref="T:ComponentPro.Net.Mail.ImapMessage"/> objects. 
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageComparer.#ctor">
            <summary>
            Creates a new instance of ImapMessageComparer with default sorting by sequence number name and with ascending sort mode.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageComparer.#ctor(ComponentPro.Net.Mail.ImapMessageComparisonMethod)">
            <summary>
            Creates a new instance of ImapMessageComparer with specified comparer type and ascending sort mode.
            </summary>
            <param name="comparerType">Type of comparer.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageComparer.#ctor(ComponentPro.Net.Mail.ImapMessageComparisonMethod,System.Boolean)">
            <summary>
            Creates a new instance of ImapMessageComparer with specified comparer type and sort mode.
            </summary>
            <param name="comparerType">Type of comparer.</param>
            <param name="ascending">Sort order to use.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageComparer.Compare(System.Object,System.Object)">
            <summary>
            IComparer interface implementation. Compares two instances of ImapMessageInfo.
            </summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns>Value greater than zero when x is greater then y, zero when they are equal a or less than zero when x is lesser than y.</returns>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapMessageSet">
            <summary>
            Represents either a set of message unique IDs or a set of sequence numbers.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.ToString">
            <summary>
            Returns a string representation of this message set.
            </summary>
            <returns>String representation of this message set.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.Add(System.Int32)">
            <summary>
            Adds a message with the specified sequence number to the message set.
            </summary>
            <param name="messageInboxIndex">Sequence number.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.Add(System.String)">
            <summary>
            Adds a message with the specified unique ID to the message set.
            </summary>
            <param name="uniqueId">Unique ID.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.AddRange(System.Int32,System.Int32)">
            <summary>
            Adds the message in the specified sequence number range to the message set.
            </summary>
            <param name="from">Lower bound of the range.</param>
            <param name="to">Upper bound of the range (or Int32.MaxValue if all messages above 'from' are to be included).</param>
            <remarks>Bounds are also a part of the range.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.AddRange(System.String,System.String)">
            <summary>
            Adds the message in the specified unique ID range to the message set.
            </summary>
            <param name="first">Lower bound of the range.</param>
            <param name="last">Upper bound of the range.</param>
            <remarks>Bounds are also a part of the range.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.#ctor">
            <summary>
            Creates an empty message ID set.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.#ctor(System.Int32[])">
            <summary>
            Creates a new message ID set that contains all messages in the specified array.
            </summary>
            <param name="sequenceNumbers">An array of message sequence numbers.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.ParseUniqueId(System.String,System.Int64@,System.Int64@)">
            <summary>
            Converts the combined 'unique ID' value used by ComponentPro IMAP into its distinct parts. Please consult the IMAP RFC for details on unique ID and validity ID.
            </summary>
            <param name="uniqueId">Unique ID string.</param>
            <param name="validity">Folder validity ID.</param>
            <param name="id">Message unique ID.</param>
            <returns>True if parsed successfully; false if unable to parse.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.BuildUniqueId(System.Int64,System.Int64)">
            <summary>
            Converts the two distinct message ID parts into the combined 'unique ID' used by ComponentPro IMAP. Please consult the IMAP RFC for details on unique ID and validity ID.
            </summary>
            <param name="validity">Folder validity ID.</param>
            <param name="id">Message unique ID.</param>
            <returns>Combined 'unique ID' value.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapMessageSet.#ctor(System.String[])">
            <summary>
            Creates a new message ID set that contains all messages in the specified array.
            </summary>
            <param name="uniqueIds">An array of message unique IDs.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessageSet.AllMessages">
            <summary>
            Returns a message set that specifies all messages in a folder.
            </summary>
            <value>Message set that contains all messages.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessageSet.IsUniqueIdSet">
            <summary>
            Returns a value indicating whether this is a unique ID set.
            </summary>
            <value>True if this is a unique ID set; false otherwise.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapMessageSet.Count">
            <summary>
            Gets the number of items.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapFeatures">
            <summary>
            Represents the IMAP extensions.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFeatures.UniqueIdPlus">
            <summary>
            UIDPLUS extension support. If this extension is supported, <see cref="O:ComponentPro.Net.Mail.Imap.UploadMessage"/> methods
            will return unique ID of the message on the server.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFeatures.LiteralPlus">
            <summary>
            LITERAL+ extension support.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFeatures.Idle">
            <summary>
            IDLE/DONE command support.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFeatures.Xlist">
            <summary>
            XLIST command support. This is an extension created by Google for GMail's IMAP.
            It is used to retrieve information about folder purpose using the <see cref="M:ComponentPro.Net.Mail.Imap.ListFolders"/> method.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFeatures.Compression">
            <summary>
            Deflate compression (COMPRESS=DEFLATE) extension support.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFeatures.All">
            <summary>
            All extensions.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapFolderPurpose">
            <summary>
            Specifies special use flags for extended LIST command (RFC 6154) or XLIST extension.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.None">
            <summary>No special use.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.Inbox">
            <summary>The folder is an inbox.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.All">
            <summary>The folder presents all messages in the user's message store (with a possible exception of trash and junk mail). It is usually a virtual folder.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.Archive">
            <summary>The folder is used to archive messages.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.Drafts">
            <summary>Thes folder is used to hold draft messages - messages that are being composed but have not yet been sent.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.Flagged">
            <summary>The folder presents all messages marked in some way as 'important'. It is usually a virtual folder.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.Junk">
            <summary>The folder is where messages deemed to be junk (spam) mail are held.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.Sent">
            <summary>The folder is used to hold copies of messages that have been sent. Some server implementations might put messages here automatically.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.Trash">
            <summary>The folder is used to hold messages that have been deleted. Alternatively, it might be a virtual folder that presentes messages marked for deletion.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFolderPurpose.Important">
            <summary>The folder presents all messages marked by the server as 'important'. It is usually a virtual folder.</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapAuthenticationMethod">
            <summary>
            IMAP authentication methods.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.Auto">
            <summary>
            Choose automatically.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.SaslPlain">
            <summary>
            RFC 2595 TLS plaintext authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.SaslDigestMD5">
            <summary>
            RFC 2831 DIGEST-MD5 authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.SaslCramMD5">
            <summary>
            RFC 2195 CRAM-MD5 authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.SaslLogin">
            <summary>
            Login authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.ClearText">
            <summary>
            Clear text USER/PASS login.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.SaslNtlm">
            <summary>
            NTLM authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.External">
            <summary>
            External authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.SaslGssApi">
            <summary>
            GSSAPI/SSPI authentication (only Kerberos, NTLM and Negotiate (SPNEGO) are currently supported).
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapAuthenticationMethod.OAuth20">
            <summary>
            OAuth 2.0 authentication defined by https://developers.google.com/google-apps/gmail/xoauth2_protocol#imap_protocol_exchange
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapConfig">
            <summary>
            Represents the IMAP configuration.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapConfig.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapConfig.AcceptInvalidHeaders">
            <summary>
            Indicates wherher to accept invalid/unparsable headers when parsing mail message.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapConfig.AcceptInvalidMime">
            <summary>
            Indicates wherher to accept invalid/unparsable S/MIME messages signature entities when parsing mail message.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload">
            <summary>
            Gets or sets a boolean value indicating whether to use BODY.PEEK instead of BODY when downloading messages with <see cref="O:ComponentPro.Net.Mail.Imap.DownloadMailMessage"/> or <see cref="O:ComponentPro.Net.Mail.Imap.DownloadMessage"/> method. 
            </summary>
            <remarks>
            The Seen flag will not be set when downloading messages if this property is set to <c>true</c>.
            </remarks>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapMessageFlags">
            <summary>
            IMAP message flags.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageFlags.None">
            <summary>None.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageFlags.Seen">
            <summary>Message has been read.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageFlags.Answered">
            <summary>Message has been answered.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageFlags.Flagged">
            <summary>Message is flagged for special attention.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageFlags.Deleted">
            <summary>Message is marked as deleted for removal by <see cref="M:ComponentPro.Net.Mail.Imap.Purge"/>.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageFlags.Draft">
            <summary>Message is a draft - not fully composed yet.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageFlags.Recent">
            <summary>
            Message has recently arrived and this is the first and only session notified about this.
            This flag cannot be modified by the client.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapMessageFlags.Keywords">
            <summary>
            Message may have keyword (custom flags).
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapFlagModifier">
            <summary>
            Specifies possible actions of <see cref="M:ComponentPro.Net.Mail.Imap.Flag(ComponentPro.Net.Mail.ImapMessageSet,ComponentPro.Net.Mail.ImapFlagModifier,ComponentPro.Net.Mail.ImapMessageFlags)"/> method.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFlagModifier.Add">
            <summary>Adds the specified flags to the message.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFlagModifier.Remove">
            <summary>Removes the specified flags from the message.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapFlagModifier.Replace">
            <summary>Replace the message flags by the specified flags.</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapEnvelopeParts">
            <summary>
            Specifies what information to include in a <see cref="T:ComponentPro.Net.Mail.ImapMessageCollection">message list</see>.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.MessageInboxIndex">
            <summary>Sequence number. Only valid during the current session.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.UniqueId">
            <summary>Unique ID. Does not change between sessions.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Size">
            <summary>Message size in bytes.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Flags">
            <summary>Message flags.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.ReceivedDate">
            <summary>Date and time at which the message was received by the mail server.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Fast">
            <summary>Sequence number, unique ID, length, flags and received date.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Envelope">
            <summary>Envelope (date, subject, from, sender, reply-to, to, cc), sequence number, unique ID, length, flags and received date.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.FullHeaders">
            <summary>All message headers, sequence number, unique ID, length, flags and received date.</summary>
            <remarks>
            <para>
            Same as <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Fast"/>, but also downloads complete message headers of each message.
            </para>
            <para>
            This variant is the most verbose, but also the slowest, and in fact seldom needed, because nearly 
            all interesting information about the message is already returned by <see cref="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Envelope"/>. 
            </para>
            </remarks>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.Body">
            <summary>Text and HTML bodies.</summary>
            <remarks>
            Retrieving the message body marks unread messages as read. To prevent this behavior, set the <see cref="P:ComponentPro.Net.Mail.ImapConfig.DontSetSeenFlagAfterDownload"/> to <c>true</c>.
            </remarks>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.AttachmentInfo">
            <summary>Deprecated. Same as MessageStructure.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapEnvelopeParts.MessageStructure">
            <summary>Information about the message structure including attachment names. To retrieve the info, use <see cref="M:ComponentPro.Net.Mail.ImapMessage.GetParts"/>.</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapUpdateEvent">
            <summary>
            Defines notification messages that can be received from the server using the <see cref="E:ComponentPro.Net.Mail.Imap.Update"/> event.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.None">
            <summary>
            Represents the empty state.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.MessageCount">
            <summary>
            Message count was received. Represents EXISTS response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.RecentMessages">
            <summary>
            Recent message count was received Represents RECENT response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.MessageRemoved">
            <summary>
            Message was removed from the folder. Represents EXPUNGE response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.MessageInfo">
            <summary>
            Message info changed. Represents FETCH response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.Failure">
            <summary>
            Failure. Represents NO response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.ProtocolError">
            <summary>
            Protocol error occurred. Represents BAD response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.Success">
            <summary>
            Success. Represents OK response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.ClosingConnection">
            <summary>
            Connection is being closed. Represents BYE response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.Alert">
            <summary>
            Alert. Represents ALERT response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapUpdateEvent.ValidityId">
            <summary>
            Folder validity ID was received. Represents OK UIDVALIDITY response.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapProgressEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.Imap.Progress"/> event of an <see cref="T:ComponentPro.Net.Mail.Imap"/> class.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.ImapProgressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapProgressEventArgs">
            <summary>
            Provides data for the <see cref="E:ComponentPro.Net.Mail.Imap.Progress"/> event.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapProgressEventArgs.State">
            <summary>
            Gets the transfer state.
            </summary>
            <value>The transfer state.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapProgressEventArgs.BytesTransferred">
            <summary>
            Gets the total number of bytes transferred during the current transfer.
            </summary>
            <value>The number of bytes transferred.</value>
            <remarks>This value is valid only when <see cref="P:ComponentPro.Net.Mail.ImapProgressEventArgs.State"/> is not <see cref="P:ComponentPro.Net.Mail.ImapProgressEventArgs.State">None</see>.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapProgressEventArgs.BytesSinceLastEvent">
            <summary>
            Gets the number of bytes transferred during the current transfer since the last time the event was raised.
            </summary>
            <value>The number of bytes transferred since the last time the event was raised.</value>
            <remarks>This value is valid only when <see cref="P:ComponentPro.Net.Mail.ImapProgressEventArgs.State"/> is not <see cref="P:ComponentPro.Net.Mail.ImapProgressEventArgs.State">None</see>.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapProgressEventArgs.Length">
            <summary>
            Gets the total number of bytes to be transferred during the current transfer.
            </summary>
            <value>The total number of bytes to be transferred during the current transfer.</value>
            <remarks>This value is valid only when <see cref="P:ComponentPro.Net.Mail.ImapProgressEventArgs.State"/> is not <see cref="P:ComponentPro.Net.Mail.ImapProgressEventArgs.State">None</see>.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapProgressEventArgs.Percentage">
            <summary>
            Gets the current transfer progress percentage.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapResponseCode">
            <summary>
            Represents possible IMAP response codes.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapResponseCode.Unknown">
            <summary>Indicates an unknown response code.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapResponseCode.Ok">
            <summary>Indicates success.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapResponseCode.ContinuationRequest">
            <summary>Continuation request.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapResponseCode.Unsolicited">
            <summary>Unsolicited and untagged response.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapResponseCode.No">
            <summary>Indicates failure.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapResponseCode.Bad">
            <summary>Indicates a protocol error such as unrecognized command or syntax error.</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapResponseLine">
            <summary>
            Contains a single line of the IMAP response.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapResponseLine.Raw">
            <summary>
            Gets the raw unparsed data of the response line.
            </summary>
            <value>Raw unparsed line.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapResponseLine.Code">
            <summary>
            Gets the response code.
            </summary>
            <value>Response code.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapResponseLine.OptionalCode">
            <summary>
            Gets the optional response code.
            </summary>
            <value>Optional response code, or null if there isn't any.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapResponseLine.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>Parameters.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapResponseLine.Description">
            <summary>
            Gets the description.
            </summary>
            <value>Description.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapResponse">
            <summary>
            Contains the response of the IMAP server.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapResponse.GetLines">
            <summary>
            Gets all the untagged IMAP response lines that were part of this response.
            </summary>
            <returns>Untagged IMAP responses.</returns>
            <remarks>A single line represents a single response.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapResponse.Description">
            <summary>
            Gets the description of the IMAP response.
            </summary>
            <value>The description of the IMAP response.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapResponse.RawResponse">
            <summary>
            Gets the raw response from the server.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapResponse.Code">
            <summary>
            Gets the IMAP response code.
            </summary>
            <value>IMAP response code.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapSearchParameterType">
            <summary>
            Type of the <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> node.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapSearchParameterType.And">
            <summary>
            <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> node is AND inner node.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapSearchParameterType.Or">
            <summary>
            <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> node is OR inner node.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapSearchParameterType.Not">
            <summary>
            <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> node is NOT inner node.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapSearchParameterType.Leaf">
            <summary>
            <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> node is leaf node.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapCriterion">
            <summary>
            Represents a single IMAP search criterion for the <see cref="O:ComponentPro.Net.Mail.Imap.ListMessages"/> methods.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.ToString">
            <summary>
            Returns a string representing this IMAP search criterion.
            </summary>
            <returns>A string representing this IMAP search criterion.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.op_BitwiseOr(ComponentPro.Net.Mail.ImapCriterion,ComponentPro.Net.Mail.ImapCriterion)">
            <summary>
            Represents a logical OR operation on a set of <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> objects.
            </summary>
            <param name="a">The left criterion.</param>
            <param name="b">The right criterion.</param>
            <returns>An aggregate search criterion.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.op_BitwiseAnd(ComponentPro.Net.Mail.ImapCriterion,ComponentPro.Net.Mail.ImapCriterion)">
            <summary>
            Represents a logical AND operation on a set of <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> objects.
            </summary>
            <param name="a">The left criterion.</param>
            <param name="b">The right criterion.</param>
            <returns>An aggregate search criterion.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.op_Addition(ComponentPro.Net.Mail.ImapCriterion,ComponentPro.Net.Mail.ImapCriterion)">
            <summary>
            Represents a logical AND operation on a set of <see cref="T:ComponentPro.Net.Mail.ImapCriterion"/> objects.
            </summary>
            <param name="a">The left criterion.</param>
            <param name="b">The right criterion.</param>
            <returns>An aggregate search criterion.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.And(ComponentPro.Net.Mail.ImapCriterion[])">
            <summary>
            Multiple criteria combined using the AND operator - only messages that match all the criteria are matched.
            </summary>
            <param name="parameters">List of search parameters.</param>
            <returns>An aggregate search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.Or(ComponentPro.Net.Mail.ImapCriterion[])">
            <summary>
            Multiple criteria combined using the OR operator - messages that match any of the criteria are matched.
            </summary>
            <param name="parameters">List of search parameters.</param>
            <returns>An aggregate search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.Not(ComponentPro.Net.Mail.ImapCriterion)">
            <summary>
            Only match messages that don't match the specified criteria.
            </summary>
            <param name="parameter">Parameter not to match.</param>
            <returns>An aggregate search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.ArrivedOn(System.DateTime)">
            <summary>
            Messages that arrived on the specified date (disregarding time).
            </summary>
            <param name="on">Date. Time and time zone are ignored.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.ArrivedBetween(System.DateTime,System.DateTime)">
            <summary>
            Messages that arrived in the specified date interval (disregarding time).
            </summary>
            <param name="since">The lower bound of the date interval, or <see cref="F:System.DateTime.MinValue"/>. Time and time zone are ignored.</param>
            <param name="before">The upper bound of the date interval, or <see cref="F:System.DateTime.MaxValue"/>. Time and time zone are ignored.</param>
            <returns>A search parameter.</returns>
            <remarks>
            The bounds are also included in the interval.
            Time and time zone are ignored.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.SentOn(System.DateTime)">
            <summary>
            Messages that were sent on the specified date (disregarding time).
            </summary>
            <param name="on">Date. Time and time zone are ignored.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.SentBetween(System.DateTime,System.DateTime)">
            <summary>
            Messages that were sent in the specified date interval (disregarding time).
            </summary>
            <param name="since">The lower bound of the date interval, or <see cref="F:System.DateTime.MinValue"/>.</param>
            <param name="before">The upper bound of the date interval, or <see cref="F:System.DateTime.MaxValue"/>.</param>
            <returns>A search parameter.</returns>
            <remarks>
            The bounds are also included in the interval.
            Time and time zone are ignored.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.SizeBetween(System.Int64,System.Int64)">
            <summary>
            Messages with a size within the specified interval.
            </summary>
            <param name="min">The lower bound of interval, or 0. In bytes.</param>
            <param name="max">The upper bound of interval, or <see cref="F:System.Int64.MaxValue"/>. In bytes.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.SubjectHas(System.String)">
            <summary>
            Messages that contain the specified string in its subject field.
            </summary>
            <param name="queryTerm">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.BodyOrHeadersContain(System.String)">
            <summary>
            Messages that contain the specified string in its headers or body.
            </summary>
            <param name="queryTerm">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.BodyContains(System.String)">
            <summary>
            Messages that contain the specified string in its body.
            </summary>
            <param name="queryTerm">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.HeaderContains(System.String,System.String)">
            <summary>
            Messages that contain the specified string in the specified header.
            </summary>
            <param name="headerName">Header name to search, or an empty string to search all headers.</param>
            <param name="queryTerm">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.From(System.String)">
            <summary>
            Messages that contain the specified string in its From field.
            </summary>
            <param name="address">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.To(System.String)">
            <summary>
            Messages that contain the specified string in its To field.
            </summary>
            <param name="address">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.Cc(System.String)">
            <summary>
            Messages that contain the specified string in its CC field.
            </summary>
            <param name="address">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.Bcc(System.String)">
            <summary>
            Messages that contain the specified string in its Bcc field.
            </summary>
            <param name="address">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.Keyword(System.String)">
            <summary>
            Messages with the specified keyword flag set.
            </summary>
            <param name="keyword">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.NotKeyword(System.String)">
            <summary>
            Messages that do not have the specified keyword flag set.
            </summary>
            <param name="keyword">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.MessageSet(ComponentPro.Net.Mail.ImapMessageSet)">
            <summary>
            Messages which belong to a specified message set.
            </summary>
            <param name="messageSet">A set of messages.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.NotFrom(System.String)">
            <summary>
            Messages that do not contain the specified string in its From field.
            </summary>
            <param name="address">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.NotTo(System.String)">
            <summary>
            Messages that do not contain the specified string in its To field.
            </summary>
            <param name="address">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.NotCc(System.String)">
            <summary>
            Messages that do not contain the specified string in its CC field.
            </summary>
            <param name="address">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.NotBcc(System.String)">
            <summary>
            Messages that do not contain the specified string in its Bcc field.
            </summary>
            <param name="address">String to search for. Cannot be empty.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.HasFlags(ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Messages with all the specified flags set.
            </summary>
            <param name="flags">Flags that have to be set.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ImapCriterion.DontHaveFlags(ComponentPro.Net.Mail.ImapMessageFlags)">
            <summary>
            Messages with none of the specified flags set.
            </summary>
            <param name="flags">Flags that must not be set.</param>
            <returns>A search parameter.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.Type">
            <summary>
            Gets a type of the current node.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.ChildCount">
            <summary>
            Gets a count of the child nodes.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.Item(System.Int32)">
            <summary>
            Gets a child node at the specified index.
            </summary>
            <param name="index">Index of the child node.</param>
            <returns>A child node.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.Name">
            <summary>
            Gets a name (keyword of the search criteria) of the current leaf node. Calling on the inner node returns null (Nothing in VB.NET).
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.Value">
            <summary>
            Gets a value (argument of the search criteria) of the current leaf node. Calling on the inner node returns null (Nothing in VB.NET).
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.Recent">
            <summary>
            Messages that have the <see cref="F:ComponentPro.Net.Mail.ImapMessageFlags.Recent">Recent</see> flag set.
            </summary>
            <value>A search parameter.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.Deleted">
            <summary>
            Messages that have the <see cref="F:ComponentPro.Net.Mail.ImapMessageFlags.Deleted">Deleted</see> flag set.
            </summary>
            <value>A search parameter.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.New">
            <summary>
            Messages that have the <see cref="F:ComponentPro.Net.Mail.ImapMessageFlags.Recent">Recent</see> flag set
            and <see cref="F:ComponentPro.Net.Mail.ImapMessageFlags.Seen">Seen</see> flag not set.
            </summary>
            <value>A search parameter.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.NotRecent">
            <summary>
            Messages that don't have the <see cref="F:ComponentPro.Net.Mail.ImapMessageFlags.Recent">Recent</see> flag set.
            </summary>
            <value>A search parameter.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.NotSeen">
            <summary>
            Messages that don't have the <see cref="F:ComponentPro.Net.Mail.ImapMessageFlags.Seen">Seen</see> flag set. Equivalent to <see cref="P:ComponentPro.Net.Mail.ImapCriterion.Unread"/>
            </summary>
            <value>A search parameter.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.Unread">
            <summary>
            Messages that don't have the <see cref="F:ComponentPro.Net.Mail.ImapMessageFlags.Seen">Seen</see> flag set. Equivalent to <see cref="P:ComponentPro.Net.Mail.ImapCriterion.NotSeen"/>
            </summary>
            <value>A search parameter.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapCriterion.All">
            <summary>
            All messages.
            </summary>
            <value>A search parameter.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapListProcessingType">
            <summary>
            Specifies the list type.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapListProcessingType.MessageList">
            <summary>
            Processing message list.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ImapListProcessingType.FolderList">
            <summary>
            Processing IMAP folder list.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapListProcessingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.Imap.ListProcessing"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:ComponentPro.Net.Mail.ImapListProcessingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapListProcessingEventArgs">
            <summary>
            Provides data for the asynchronous method completed events.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapListProcessingEventArgs.Line">
            <summary>
            Gets the response line.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapListProcessingEventArgs.Command">
            <summary>
            Gets the IMAP command.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapListProcessingEventArgs.ListType">
            <summary>
            Gets the List Type.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapListProcessingEventArgs.ProcessedLines">
            <summary>
            Gets the number of processed lines.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapUpdateEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.Imap.Update"/> event of an <see cref="T:ComponentPro.Net.Mail.Imap"/> class.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.ImapUpdateEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.ImapUpdateEventArgs">
            <summary>
            Provides data for the <see cref="E:ComponentPro.Net.Mail.Imap.Update"/> event.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapUpdateEventArgs.Event">
            <summary>
            Gets the notification type.
            </summary>
            <value>Notification type.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapUpdateEventArgs.Response">
            <summary>
            Gets the IMAP response containing the notification.
            </summary>
            <value>IMAP response.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapUpdateEventArgs.Line">
            <summary>
            Gets the index of the line in response that contains this notification.
            </summary>
            <value>Index of the line in response that contains this notification.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapUpdateEventArgs.Solicited">
            <summary>
            Gets the value indicating whether the notification is a standard response to the requested command.
            </summary>
            <value>True if the notification was solicited, false otherwise.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ImapUpdateEventArgs.Number">
            <summary>
            Gets the contents of the response line if it 
            was composed of a single integer number. Otherwise, zero is returned.
            </summary>
            <value>The contents of the response line if there was a number.</value>
            <remarks>
            This property will be set for <see cref="F:ComponentPro.Net.Mail.ImapUpdateEvent.MessageCount"/>, 
            <see cref="F:ComponentPro.Net.Mail.ImapUpdateEvent.RecentMessages"/> and
            <see cref="F:ComponentPro.Net.Mail.ImapUpdateEvent.MessageRemoved"/> notifications.
            </remarks>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailClientExceptionStatus">
            <summary>
            Defines status codes for the <see cref="T:ComponentPro.Net.Mail.ImapException"/>, <see cref="T:ComponentPro.Net.Mail.Pop3Exception"/>, and <see cref="T:ComponentPro.Net.Mail.SmtpException"/> classes.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.ConnectionFailed">
            <summary>
            Unable to contact the service point.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.ConnectionClosed">
            <summary>
            The connection was prematurely closed.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.SocketError">
            <summary>
            The error at transport level occured.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.UnknownHost">
            <summary>
            The name resolver service could not resolve the host name.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.NotFinished">
            <summary>
            An operation is pending.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.ProtocolError">
            <summary>
            The response received from the server was complete but indicated a protocol-level error.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.UnknownProxyHost">
            <summary>
            The name resolver service could not resolve the proxy host name.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.OperationCancelled">
            <summary>
            The operation was aborted by a call to the <see cref="M:ComponentPro.Net.Mail.Imap.Cancel"/>, <see cref="M:ComponentPro.Net.Mail.Pop3.Cancel"/>, or <see cref="M:ComponentPro.Net.Mail.Smtp.Cancel"/> method.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.UnknownError">
            <summary>
            An unclassifiable error occurred. This is the default value for <see cref="P:ComponentPro.Net.Mail.ImapException.Status"/>, <see cref="P:ComponentPro.Net.Mail.Pop3Exception.Status"/>, and <see cref="P:ComponentPro.Net.Mail.SmtpException.Status"/>.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.InvalidResponse">
            <summary>
            The server response was not a valid IMAP4 response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.Timeout">
            <summary>
            No response was received during the time-out period for a request.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.LoginRequired">
            <summary>
            The operation cannot be performed before a successful login.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.OperationFailure">
            <summary>
            The requested operation could not be completed.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.ParsingError">
            <summary>
            Error while parsing the server response.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.SendFailure">
            <summary>
            A request could not be sent to the remote server.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailClientExceptionStatus.ReceiveFailure">
            <summary>
            A complete response was not received from the remote server due to an error at the transport level.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.AlternateView">
            <summary>
            Represents a single alternate form of an e-mail message body.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.AttachmentBase">
            <summary>
            The base class thet represents an e-mail attachment.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.GetContentStream(System.Boolean)">
            <summary>
            Returns the stream representing a content of this attachment.
            </summary>
            <param name="writable">Specifies whether to return a writable or read-only stream.</param>
            <returns>The stream representing a content of this attachment.</returns>
            <remarks>
            <p>
            To set the content of this entity, it is recommended to use one of <see cref="M:ComponentPro.Net.Mail.AttachmentBase.SetContent(System.String)"/>
            or SetContentFromFile methods.
            </p>
            <p>
            Please note that it is not currently possible to get a writable content stream of an embedded message.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.GetContentStream">
            <summary>
            Returns the read-only stream representing a content of this attachment.
            </summary>
            <returns>The read-only stream representing a content of this attachment.</returns>
            <remarks>
            To set the content of this attachment, use one of <see cref="M:ComponentPro.Net.Mail.AttachmentBase.SetContent(System.String)"/>
            or SetContentFromFile methods.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.GetContentLength">
            <summary>
            Gets the length of the attachment.
            </summary>
            <returns>The length of the attachment.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.SetContent(System.String)">
            <summary>
            Sets the content of this attachment to the specified text.
            </summary>
            <param name="text">Content to set.</param>
            <remarks>
            Media type is set to 'text/plain'.
            Character set and transfer encoding are determined automatically.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.SetContent(System.String,System.String)">
            <summary>
            Sets the content of this attachment to the specified text and media type.
            </summary>
            <param name="text">Content to set.</param>
            <param name="mediaType">Media type.</param>
            <remarks>
            Character set and transfer encoding are determined automatically.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.SetContent(System.String,System.String,System.Text.Encoding)">
            <summary>
            Sets the content of this attachment to the specified text, media type and character set.
            </summary>
            <param name="text">Content to set.</param>
            <param name="mediaType">Media type.</param>
            <param name="charset">Character set to use for encoding the text.</param>
            <remarks>
            Transfer encoding is determined automatically.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.SetContent(System.String,System.String,System.Text.Encoding,ComponentPro.Net.Mail.TransferEncoding)">
            <summary>
            Sets the content of this attachment to the specified text, media type and character set.
            </summary>
            <param name="text">Content to set.</param>
            <param name="mediaType">Media type.</param>
            <param name="charset">Character set to use for encoding the text.</param>
            <param name="transferEncoding">Transfer encoding.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.Save(System.String)">
            <summary>
            Writes the content of the attachment or view into a supplied file.
            </summary>
            <param name="fileName">Path to the file to write the content to.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.Save(System.IO.Stream)">
            <summary>
            Writes the content of the attachment into the supplied stream.
            </summary>
            <param name="output">Stream to write the content to.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentBase.#ctor">
            <summary>
            Initializes an instance of <see cref="T:ComponentPro.Net.Mail.AttachmentBase"/> class.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentBase.TransferEncoding">
            <summary>
            Gets or sets the <see cref="P:ComponentPro.Net.Mail.AttachmentBase.TransferEncoding"/> of the content of this attachment.
            </summary>
            <value>
            <see cref="P:ComponentPro.Net.Mail.AttachmentBase.TransferEncoding"/> of the content.
            </value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentBase.ContentType">
            <summary>
            Gets the content type of this attachment.
            </summary>
            <value>Content type.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentBase.MediaType">
            <summary>
            Gets the media type of this attachment.
            </summary>
            <value>Media type.</value>
            <remarks>This is equivalent to calling <see cref="P:ComponentPro.Net.Mail.AttachmentBase.ContentType"/>.MediaType.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentBase.ContentDisposition">
            <summary>
            Gets the content disposition of this attachment.
            </summary>
            <value>Content disposition.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentBase.ContentDescription">
            <summary>
            Gets or sets the content description of this attachment.
            </summary>
            <value>Content description .</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentBase.ContentIdentifier">
            <summary>
            Gets or sets the content ID of this attachment.
            </summary>
            <value>Content ID.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentBase.ContentLocation">
            <summary>
            Gets or sets the absolute or relative URI of this message part.
            </summary>
            <value>URI.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentBase.ContentString">
            <summary>
            Gets the content string of this attachment.
            </summary>
            <value>The content string of this attachment; or null if the content cannot be represented as string.</value>
            <remarks>
            <p>
            To set the content of this attachment, use one of <see cref="M:ComponentPro.Net.Mail.AttachmentBase.SetContent(System.String)"/>
            or SetContentFromFile methods.
            </p>
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentBase.Charset">
            <summary>
            Gets the charset (<see cref="T:System.Text.Encoding"/>) of the content of this attachment.
            </summary>
            <value>
            The charset of the content; or null if it has no charset or unknown charset.
            </value>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateView.SetContentFromFile(System.String,System.String)">
            <summary>
            Sets the content of this view to data read from the specified file and sets media type.
            </summary>
            <param name="fileName">Path to the file to read data from.</param>
            <param name="mediaType">Media type.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateView.SetContentFromFile(System.String)">
            <summary>
            Sets the content of this view to data read from the specified file.
            </summary>
            <param name="fileName">Path to the file to read data from.</param>
            <remarks>Media type is set to 'text/plain'.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateView.SetContent(System.IO.Stream,System.String)">
            <summary>
            Sets the content of this view to data read from the specified stream and sets media type.
            </summary>
            <param name="contentStream">Stream from which the data will be read.</param>
            <param name="mediaType">Media type.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateView.SetContent(System.IO.Stream)">
            <summary>
            Sets the content of this view to data read from the specified stream.
            </summary>
            <param name="contentStream">Stream from which the data will be read.</param>
            <remarks>Media type is set to 'text/plain'.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateView.#ctor">
            <summary>
            Initializes a new empty instance of a <see cref="T:ComponentPro.Net.Mail.AlternateView"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateView.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.AlternateView"/>
            with the content of the specified file and with media type.
            </summary>
            <param name="fileName">Path to the file to provide data for the view.</param>
            <param name="mediaType">A MIME media type of the file.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateView.#ctor(System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.AlternateView"/>
            with the content of the specified file.
            </summary>
            <param name="fileName">Path to the file to provide data for the view.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateView.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.AlternateView"/>
            with the content of the supplied stream and with a media type.
            </summary>
            <param name="contentStream">Stream from which the data will be read.</param>
            <param name="mediaType">A MIME media type of the file.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateView.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.AlternateView"/>
            with the content of the supplied stream.
            </summary>
            <param name="contentStream">Stream from which the data will be read.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.AlternateViewCollection">
            <summary>
            Represents the collection of alternate mail message views.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateViewCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.AlternateViewCollection"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateViewCollection.Insert(System.Int32,ComponentPro.Net.Mail.AlternateView)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">A zero-based index at which an item should be inserted.</param>
            <param name="value">An alternate view to be inserted.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateViewCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index from the list.
            </summary>
            <param name="index">A zero-based index of an item to remove.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateViewCollection.Add(ComponentPro.Net.Mail.AlternateView)">
            <summary>
            Adds an item to the end of the list.
            </summary>
            <param name="value">An alternate view to be added.</param>
            <returns>Index of the newly added item.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateViewCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds a range of items contained in the specified collection.
            </summary>
            <param name="collection">Collection of alternate views to be added.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateViewCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateViewCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.AlternateViewCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.AlternateViewCollection.CopyTo(ComponentPro.Net.Mail.AlternateView[],System.Int32)">
            <summary>
            Copies the range of elements from the <see cref="T:ComponentPro.Net.Mail.AlternateViewCollection"/> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
            <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/>.</param>
            <param name="index">A zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.AlternateViewCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>The number of items is the collection.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AlternateViewCollection.Item(System.Int32)">
            <summary>
            Gets or sets the list item at the specified index.
            </summary>
            <param name="index">The zero-based index of the list item to get or set.</param>
            <value>An alternate view to get or set.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AlternateViewCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to <see cref="T:ComponentPro.Net.Mail.AlternateViewCollection"/> is synchronized (thread-safe).
            </summary>
            <value>A value indicating whether access to <see cref="T:ComponentPro.Net.Mail.AlternateViewCollection"/> is synchronized.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AlternateViewCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.AlternateViewCollection"/> object.
            </summary>
            <value>an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.AlternateViewCollection"/> object.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.Attachment">
            <summary>
            Represents an e-mail attachment.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.SetContentFromFile(System.String,System.String,System.String)">
            <summary>
            Sets the content of this attachment to data read from the specified file and sets media type and file name.
            </summary>
            <param name="fileName">Path to the file to read data from.</param>
            <param name="mediaType">Media type.</param>
            <param name="name">File name to assign to the content.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.SetContentFromFile(System.String,System.String)">
            <summary>
            Sets the content of this attachment to data read from the specified file and sets file name.
            </summary>
            <param name="fileName">Path to the file to read data from.</param>
            <param name="name">File name to assign to the content.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.SetContentFromFile(System.String)">
            <summary>
            Sets the content of this attachment to data read from the specified file.
            </summary>
            <param name="fileName">Path to the file to read data from.</param>
            <remarks>
            File name is determined from the path.
            Media type is set to 'application/octet-stream'.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.SetContent(System.IO.Stream,System.String,System.String)">
            <summary>
            Sets the content of this attachment to data read from the specified stream and sets media type and file name.
            </summary>
            <param name="source">Source stream to read data from.</param>
            <param name="name">File name to assign to the content.</param>
            <param name="mediaType">Media type.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.SetContent(System.IO.Stream,System.String)">
            <summary>
            Sets the content of this attachment to data read from the specified stream and sets file name.
            </summary>
            <param name="source">Source stream to read data from.</param>
            <param name="name">File name to assign to the content.</param>
            <remarks>Media type is set to 'application/octet-stream'.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.#ctor">
            <summary>
            Initializes a new empty instance of a <see cref="T:ComponentPro.Net.Mail.Attachment"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.#ctor(ComponentPro.Net.Mail.MailMessage)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.Attachment"/>
            that represents an attached e-mail message.
            </summary>
            <param name="message">E-mail message to be used as an attachment.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.#ctor(System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.Attachment"/>
            with the content of the specified file.
            </summary>
            <param name="fileName">Path to the file to provide data for the attachment.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.Attachment"/>
            with the content of the specified file and with a suggested name.
            </summary>
            <param name="fileName">Path to the file to provide data for the attachment.</param>
            <param name="name">A suggested name of the attachment.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.Attachment"/>
            with the content of the specified file and with a media type and suggested name.
            </summary>
            <param name="fileName">Path to the file to provide data for the attachment.</param>
            <param name="name">A suggested name of the attachment.</param>
            <param name="mediaType">A MIME media type of the file.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.Attachment"/>
            with the content of the supplied stream and with suggested name.
            </summary>
            <param name="contentStream">Stream from which the data will be read.</param>
            <param name="name">A suggested name of the attachment.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.Attachment"/>
            with the content of the supplied stream and with a media type and suggested name.
            </summary>
            <param name="contentStream">Stream from which the data will be read.</param>
            <param name="name">A suggested name of the attachment.</param>
            <param name="mediaType">A MIME media type of the file.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.Attachment"/>
            with the content of the supplied byte array and with suggested name.
            </summary>
            <param name="content">Byte array from which the data will be read.</param>
            <param name="name">A suggested name of the attachment.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Attachment.#ctor(System.Byte[],System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.Attachment"/>
            with the content of the supplied byte array and with a media type and suggested name.
            </summary>
            <param name="content">Byte array from which the data will be read.</param>
            <param name="name">A suggested name of the attachment.</param>
            <param name="mediaType">A MIME media type of the file.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.Attachment.Name">
            <summary>
            Gets the friendly name of the attachment. 
            </summary>
            <value>A string containing the "friendly name" (or "display name") of the attachment, or an empty string if the friendly name is not available.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Attachment.FileName">
            <summary>
            Gets the suggested file name of this attachment.
            </summary>
            <value>A suggested file name.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Attachment.ContentMessage">
            <summary>
            Gets the inner message of this attachment if it is an attached message of "message/rfc822" content type.
            </summary>
            <value>The inner message of this attachment; or null if not available.</value>
            <remarks>
            <p>
            To set the content of this attachment, use one of <see cref="M:ComponentPro.Net.Mail.Attachment.SetContent(System.IO.Stream,System.String)"/>
            or <see cref="M:ComponentPro.Net.Mail.Attachment.SetContentFromFile(System.String)"/> methods.
            </p>
            </remarks>
        </member>
        <member name="T:ComponentPro.Net.Mail.AttachmentCollection">
            <summary>
            Represents the collection of mail message attachments.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index from the list.
            </summary>
            <param name="index">A zero-based index of an item to remove.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentCollection.Add(ComponentPro.Net.Mail.Attachment)">
            <summary>
            Adds an item to the end of the list.
            </summary>
            <param name="value">Item to be added.</param>
            <returns>Index of the newly added item.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentCollection.Add(System.String)">
            <summary>
            Adds an attachment file to the list.
            </summary>
            <param name="fileName">file to be added.</param>
            <returns>Index of the newly added item.</returns>
            <exception cref="T:System.ArgumentNullException">fileName is null.</exception>
            <exception cref="T:ComponentPro.Net.Mail.MailException">Mail message is read-only.</exception>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds a range of items contained in the specified collection.
            </summary>
            <param name="collection">Collection of items to be added.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.AttachmentCollection.CopyTo(ComponentPro.Net.Mail.Attachment[],System.Int32)">
            <summary>
            Copies the range of elements from the <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
            <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/>.</param>
            <param name="index">A zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>The number of items is the collection.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentCollection.Item(System.Int32)">
            <summary>
            Gets or sets the list item at the specified index.
            </summary>
            <param name="index">The zero-based index of the list item to get or set.</param>
            <value>An item.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/> is synchronized (thread-safe).
            </summary>
            <value>A value indicating whether access to <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/> is synchronized.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.AttachmentCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/> object.
            </summary>
            <value>an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/> object.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.LinkedResource">
            <summary>
            Represents an embedded resource such as an image or a CSS file referenced from the message views.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResource.SetContentFromFile(System.String,System.String)">
            <summary>
            Sets the content of this resource to data read from the specified file and sets media type.
            </summary>
            <param name="fileName">Path to the file to read data from.</param>
            <param name="mediaType">Media type.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResource.SetContent(System.IO.Stream,System.String)">
            <summary>
            Sets the content of this resource to data read from the specified stream and sets media type.
            </summary>
            <param name="contentStream">Stream from which the data will be read.</param>
            <param name="mediaType">Media type.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResource.#ctor">
            <summary>
            Initializes a new empty instance of a <see cref="T:ComponentPro.Net.Mail.LinkedResource"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResource.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.LinkedResource"/>
            with the content of the specified file and with media type.
            </summary>
            <param name="fileName">Path to the file to provide data for the resource.</param>
            <param name="mediaType">A MIME media type of the file.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResource.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.LinkedResource"/>
            with the content of the supplied stream and with a media type.
            </summary>
            <param name="contentStream">Stream from which the data will be read.</param>
            <param name="mediaType">A MIME media type of the file.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResource.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:ComponentPro.Net.Mail.LinkedResource"/>
            with the content of the supplied stream and with a media type and suggested name.
            </summary>
            <param name="contentStream">Stream from which the data will be read.</param>
            <param name="name">A suggested name of the resource.</param>
            <param name="mediaType">A MIME media type of the file.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.LinkedResource.FileName">
            <summary>
            Gets the suggested file name of this attachment.
            </summary>
            <value>A suggested file name.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.LinkedResourceCollection">
            <summary>
            Represents the collection of embedded resources referred by a <see cref="T:ComponentPro.Net.Mail.AlternateView"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResourceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.LinkedResourceCollection"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResourceCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index from the list.
            </summary>
            <param name="index">A zero-based index of an item to remove.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResourceCollection.Add(ComponentPro.Net.Mail.LinkedResource)">
            <summary>
            Adds an item to the end of the list.
            </summary>
            <param name="value">Item to be added.</param>
            <returns>Index of the newly added item.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResourceCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds a range of items contained in the specified collection.
            </summary>
            <param name="collection">Collection of items to be added.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResourceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResourceCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.LinkedResourceCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.LinkedResourceCollection.CopyTo(ComponentPro.Net.Mail.LinkedResource[],System.Int32)">
            <summary>
            Copies the range of elements from the <see cref="T:ComponentPro.Net.Mail.LinkedResourceCollection"/> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
            <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:ComponentPro.Net.Mail.AttachmentCollection"/>.</param>
            <param name="index">A zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.LinkedResourceCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>The number of items is the collection.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.LinkedResourceCollection.Item(System.Int32)">
            <summary>
            Gets or sets the list item at the specified index.
            </summary>
            <param name="index">The zero-based index of the list item to get or set.</param>
            <value>An item.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.LinkedResourceCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to <see cref="T:ComponentPro.Net.Mail.LinkedResourceCollection"/> is synchronized (thread-safe).
            </summary>
            <value>A value indicating whether access to <see cref="T:ComponentPro.Net.Mail.LinkedResourceCollection"/> is synchronized.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.LinkedResourceCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.LinkedResourceCollection"/> object.
            </summary>
            <value>an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.LinkedResourceCollection"/> object.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailException">
            <summary>
            The exception that is thrown when an e-mail related error occurs.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailException.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MailException"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailException.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MailException"/> with the specified message.
            </summary>
            <param name="message">Message that describes the error.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MailException"/> with the specified message and inner exception.
            </summary>
            <param name="message">Message that describes the error.</param>
            <param name="inner">The exception that was the cause of this exception.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.MailException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailMessage">
            <summary>
            Represents an e-mail message that can be saved, loaded, processed or sent.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.MailMessage"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Clone">
            <summary>
            Creates a copy of this message.
            </summary>
            <returns>A new message.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.CreateReply(ComponentPro.Net.Mail.MailAddress,ComponentPro.Net.Mail.ReplyBodyTransformation)">
            <summary>
            Creates a new message that is a reply to the current message.
            </summary>
            <param name="sender">The sender of the reply.</param>
            <param name="transformation">Transformation mode for the original message body.</param>
            <returns>A new message.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.CreateReply(ComponentPro.Net.Mail.MailAddress,ComponentPro.Net.Mail.ReplyBodyTransformation,System.Boolean)">
            <summary>
            Creates a new message that is a reply to the current message.
            </summary>
            <param name="sender">The sender of the reply.</param>
            <param name="transformation">Transformation mode for the original message body.</param>
            <param name="replyToAll">True if the reply is to be sent to all e-mail addresses
            that were in the original 'From', 'Reply-To', 'To' and 'CC' fields.</param>
            <returns>A new message.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.#ctor">
            <summary>
            Initializes an instance of an empty e-mail message.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.MailMessage"/> from the specified mail message file.
            </summary>
            <param name="fileName">The mail message file path. It can either be in EML or Outlook format.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.MailMessage"/> from the specified mail message stream.
            </summary>
            <param name="stream">The mail message stream. The content of the stream can either be in EML or Outlook format.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Load(System.IO.Stream)">
            <summary>
            Loads a mail message from the supplied stream.
            </summary>
            <param name="input">Stream to load the message from.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Load(System.String)">
            <summary>
            Loads a mail message from the supplied file.
            </summary>
            <param name="fileName">Path to the file to load the message from.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Load(System.Byte[])">
            <summary>
            Loads a mail message from its byte array representation.
            </summary>
            <param name="data">Byte array representation of the mail message.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Save(System.IO.Stream)">
            <summary>
            Saves the mail message to the supplied stream in MIME format.
            </summary>
            <param name="output">Stream to save the message to.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Save(System.String)">
            <summary>
            Saves the mail message to the supplied file in MIME format.
            </summary>
            <param name="fileName">Path to the file to save the message to.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Save(System.IO.Stream,ComponentPro.Net.Mail.MailFormat)">
            <summary>
            Saves the mail message to the supplied stream.
            </summary>
            <param name="output">Stream to save the message to.</param>
            <param name="format">Format of the saved message.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Save(System.String,ComponentPro.Net.Mail.MailFormat)">
            <summary>
            Saves the mail message to the supplied file.
            </summary>
            <param name="fileName">Path to the file to save the message to.</param>
            <param name="format">Format of the saved message.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.ToByteArray">
            <summary>
            Returns a byte array representation of the mail message.
            This is the same as the content of a file saved using the <see cref="M:ComponentPro.Net.Mail.MailMessage.Save(System.String)"/> message.
            </summary>
            <returns>Byte array representation of the mail message.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Decrypt">
            <summary>
            Decrypts an encrypted message, making the content accessible.
            </summary>
            <remarks>
            <p>
            For a successful decryption, a recipient's private key must be available -
            see the <see cref="P:ComponentPro.Net.Mail.MailMessage.Decryptable"/> property.
            </p>
            <p>
            Unless the message is signed as well, this will make it possible to modify
            the resulting message.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.RemoveSignature">
            <summary>
            Removes a signature from a signed message.
            </summary>
            <remarks>
            Unless the message is encrypted as well, this will make it possible to modify
            the resulting message.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Encrypt(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Encrypts a message.
            </summary>
            <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
            <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Encrypt(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Encrypts a message.
            </summary>
            <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
            <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Encrypt(ComponentPro.Net.Mail.MessageEncryptionAlgorithm,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Encrypts a message.
            </summary>
            <param name="encryptionAlgorithm">An encryption algorithm to use.</param>
            <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
            <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Encrypt(ComponentPro.Net.Mail.MessageEncryptionAlgorithm,System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Encrypts a message.
            </summary>
            <param name="encryptionAlgorithm">An encryption algorithm to use.</param>
            <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
            <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Sign(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Signs a message.
            </summary>
            <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Signs a message.
            </summary>
            <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Sign(ComponentPro.Security.Certificates.HashAlgorithmType,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Signs a message.
            </summary>
            <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
            <param name="algorithm">Message digest algorithm.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Sign(ComponentPro.Security.Certificates.HashAlgorithmType,System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Signs a message.
            </summary>
            <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
            <param name="algorithm">Message digest algorithm.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Sign(ComponentPro.Security.Certificates.HashAlgorithmType,ComponentPro.Net.Mail.MailSignatureStyle,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Signs a message.
            </summary>
            <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
            <param name="style">Signature style.</param>
            <param name="algorithm">Message digest algorithm.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.Sign(ComponentPro.Security.Certificates.HashAlgorithmType,ComponentPro.Net.Mail.MailSignatureStyle,System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Signs a message.
            </summary>
            <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
            <param name="style">Signature style.</param>
            <param name="algorithm">Message digest algorithm.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailMessage.ValidateSignature">
            <summary>
            Validates all digital signatures on a signed message
            and validates all the signers' certificates.
            </summary>
            <returns>Validation result.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Silent">
            <summary>
            Gets or sets a value indicating whether Cryptographic Service Provider (CSP) operations
            are permitted to display any user interface.
            </summary>
            <value>A value indicating whether CSP can display UI.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.ReadOnly">
            <summary>
            Gets a value indicating whether the message is read-only.
            </summary>
            <value>A value indicating whether the message is read-only.</value>
            <remarks>
            Any message that is either signed or encrypted is read-only.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.IsSigned">
            <summary>
            Gets a value indicating whether the message is signed.
            </summary>
            <value>A value indicating whether the message is signed.</value>
            <remarks>
            <p>
            Signers of a signed message are accessible through <see cref="P:ComponentPro.Net.Mail.MailMessage.Signers"/> collection.
            The signature can be validated using <see cref="M:ComponentPro.Net.Mail.MailMessage.ValidateSignature"/> method or removed
            using <see cref="M:ComponentPro.Net.Mail.MailMessage.RemoveSignature"/> method. It is created using <see cref="M:ComponentPro.Net.Mail.MailMessage.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2[])"/> method.
            </p>
            <p>
            Please note that messages that are encrypted might also be signed, but because the signature
            itself is also encrypted as well, this fact will not be known until the message is decrypted.
            </p>
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.IsEncrypted">
            <summary>
            Gets a value indicating whether the message is encrypted.
            </summary>
            <value>A value indicating whether the message is encrypted.</value>
            <remarks>
            <p>
            Recipients of an encrypted message are accessible through <see cref="P:ComponentPro.Net.Mail.MailMessage.Recipients"/> collection.
            The message can be decrypted using <see cref="M:ComponentPro.Net.Mail.MailMessage.Decrypt"/> method. To encrypt a message,
            use <see cref="M:ComponentPro.Net.Mail.MailMessage.Encrypt(System.Security.Cryptography.X509Certificates.X509Certificate2[])"/> method.
            </p>
            <p>
            Until an encrypted message is decrypted, its content is inaccessible.
            </p>
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Decryptable">
            <summary>
            Gets a value indicating whether the message can be decrypted.
            </summary>
            <value>A value indicating whether the message can be decrypted.</value>
            <remarks>
            An encrypted message can only be decrypted if the corresponding private key are available.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.EncryptionAlgorithm">
            <summary>
            Gets an encryption algorithm used to encrypt an encrypted message.
            </summary>
            <value>An encryption algorithm.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Recipients">
            <summary>
            Gets the collection of recipients of an encrypted message.
            </summary>
            <value>A collection of recipients.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Signers">
            <summary>
            Gets the collection of signers of a signed message.
            </summary>
            <value>A collection of signers.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Date">
            <summary>
            Gets or sets the origination date of this message.
            If origination date is not available, return the date specified by the first 'Received' header.
            </summary>
            <value>The origination date.</value>
            <remarks>
            The origination date specifies the date and time at which the creator
            of the message indicated that the message was complete and ready to enter
            the mail delivery system.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.ReceivedDate">
            <summary>
            Gets the received date of this message.
            </summary>
            <value>The received date.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.From">
            <summary>
            Gets or sets the list of authors of this message.
            </summary>
            <value>The list of authors.</value>
            <remarks>
            <p>
            This property specifies the the list of authors
            of the message.
            </p>
            <p>
            If this field contains multiple authors, the '<see cref="P:ComponentPro.Net.Mail.MailMessage.Sender"/>'
            field must be set to specify the agent responsible for the transmission
            of the message
            </p>
            <p>
            If this field contains a single author that is also the sender
            of the message, the '<see cref="P:ComponentPro.Net.Mail.MailMessage.Sender"/>' field should not be set.
            </p>
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Sender">
            <summary>
            Gets or sets the sender of this message.
            </summary>
            <value>The sender of this message.</value>
            <remarks>
            <p>
            This property specifies the agent responsible for the transmission
            of the message. Use <see cref="P:ComponentPro.Net.Mail.MailMessage.From"/> to specify the list of authors
            of the message.
            </p>
            <p>
            This field must be set if the '<see cref="P:ComponentPro.Net.Mail.MailMessage.From"/>' field contains multiple
            authors.
            </p>
            <p>
            This field should not be set if the '<see cref="P:ComponentPro.Net.Mail.MailMessage.From"/> field contains
            a single author that is also the sender of the message.
            </p>
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.ReplyTo">
            <summary>
            Gets or sets the list of addresses that should receive replies
            to this message.
            </summary>
            <value>The list of addresses that should receive replies.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.To">
            <summary>
            Gets or sets the list of addresses of primary recipients of the message.
            </summary>
            <value>The list of primary recipients.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Cc">
            <summary>
            Gets the list of addresses of others who are to receive the message.
            </summary>
            <value>The list of other recipients.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Bcc">
            <summary>
            Gets or sets the list of addresses of recipients that are not to be revealed to other recipients of the message.
            </summary>
            <value>The list of recipients.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.MessageIdentifier">
            <summary>
            Gets or sets the unique identifier of the message.
            </summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.InReplyTo">
            <summary>
            Gets or sets the list of identifiers of messages to which the message is a reply.
            </summary>
            <value>The list of message identifiers.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Subject">
            <summary>
            Gets or sets the subject of the message.
            </summary>
            <value>The subject.</value>
            <remarks>
            This property contains a short string identifying the topic
            of the message.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Headers">
            <summary>
            Gets the list of headers of this entity.
            </summary>
            <value>The list of headers.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Attachments">
            <summary>
            Gets the collection of attachments of this message.
            </summary>
            <value>A collection of attachments of this message.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.AlternateViews">
            <summary>
            Gets the collection of alternate forms of the message body.
            </summary>
            <value>A collection of alternate forms of the message body.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.LinkedResources">
            <summary>
            Gets the collection of embedded resources referred by message views.
            </summary>
            <value>A collection of embedded resources.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.EnvelopeId">
            <summary>
            Gets or sets the envelope identifier to be transmitted along with the message
            and included in any DSNs issued.
            </summary>
            <value>The envelope identifier.</value>
            <remarks>
            <p>
            The purpose of the envelope identifier is to allow the sender of a message
            to identify the transaction for which the DSN was issued.
            </p>
            <p>
            Please note that the envelope ID is not a part of a mail message and is not saved with it.
            Its purpose is to be used while sending the message.
            </p>
            <p>
            Envelope ID must be an ASCII string up to 100 characters in length.
            Characters &lt; 33 and character '+', '=' and character 127 are represented as three characters.
            </p>
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Priority">
            <summary>
            Gets or sets the priority of the message.
            </summary>
            <value>Message priority.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.HasBodyHtml">
            <summary>
            Gets the value indicating whether the message has a HTML body.
            </summary>
            <value>A value indicating whether the message has a HTML body.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.HasBodyText">
            <summary>
            Gets the value indicating whether the message has a text body.
            </summary>
            <value>A value indicating whether the message has a text body.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.BodyHtml">
            <summary>
            Gets the HTML body of the message, or an empty string if it has no HTML body.
            </summary>
            <value>The HTML body of the message.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.BodyText">
            <summary>
            Gets the text body of the message, or an empty string if it has no text body.
            </summary>
            <value>The text body of the message.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.DefaultCharset">
            <summary>
            Gets or sets the default charset for MIME body and headers.
            </summary>
            <value>Default charset.</value>
            <remarks>
            Only set this if you want to specify your own charset instead of letting the build-in automatic charset detector do its work.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailMessage.Config">
            <summary>
            Gets or sets the mail message options.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.MailMessage.UnparsableHeader">
            <summary>
            Occurs when an unparsable header is encountered while parsing a MIME message.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MessageEncryptionAlgorithm">
            <summary>
            Defines the encryption algorithm used to encrypt mail.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MessageEncryptionAlgorithm.None">
            <summary>
            No encryption algorithm.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MessageEncryptionAlgorithm.Unsupported">
            <summary>
            Unsupported encryption algorithm.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MessageEncryptionAlgorithm.TripleDES">
            <summary>
            3DES.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MessageEncryptionAlgorithm.DES">
            <summary>
            DES.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MessageEncryptionAlgorithm.RC2">
            <summary>
            RC2.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MessageEncryptionAlgorithm.GOST_28147_89">
            <summary>
            GOST 28147-89. Experimental support.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MessageEncryptionAlgorithm.AES128">
            <summary>
            AES (128bit).
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MessageEncryptionAlgorithm.AES192">
            <summary>
            AES (128bit).
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MessageEncryptionAlgorithm.AES256">
            <summary>
            AES (128bit).
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ReplyBodyTransformation">
            <summary>
            Defines how to process the original message body when creating a reply.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ReplyBodyTransformation.None">
            <summary>
            Use a blank body in the new message.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ReplyBodyTransformation.KeepOriginal">
            <summary>
            Copy the original body into the new message.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.ReplyBodyTransformation.Attachment">
            <summary>
            Add the original body as an attachment into the new message.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailSignatureStyle">
            <summary>
            Specifies the style of signed content.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailSignatureStyle.None">
            <summary>No signed content.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailSignatureStyle.Detached">
            <summary>
            Detached signature - the mail message will be readable even by clients
            that don't support S/MIME.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailSignatureStyle.Enveloped">
            <summary>
            Enveloped signature - the mail message will only be readable by clients
            that support S/MIME.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailFormat">
            <summary>
            Specifies mail message file format.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailFormat.Mime">
            <summary>
            Represents a MIME (*.eml) mail message.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailFormat.OutlookMsg">
            <summary>
            Represents an Outlook (*.msg) mail message.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailPriority">
            <summary>
            Mail message priority.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailPriority.Low">
            <summary>
            Low priority.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailPriority.Normal">
            <summary>
            Normal priority.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailPriority.High">
            <summary>
            High priority.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailSignatureStatus">
            <summary>
            Mail signature status.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailSignatureStatus.CertificateNotValid">
            <summary>The certificate is not valid.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailSignatureStatus.CertificateNotAvailable">
            <summary>Certificate is not available.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailSignatureStatus.SignatureNotValid">
            <summary>The signature is not valid./// </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailSignatureStatus.MissingSender">
            <summary>There was not sender in the message.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailSignatureStatus.SenderSignatureMissing">
            <summary>A signature for a sender is missing.</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailSignatureValidationResult">
            <summary>
            Represents the result of message signature validation.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailSignatureValidationResult.Status">
            <summary>
            Gets the validity status mask.
            </summary>
            <value>Vvalidity status mask.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailSignatureValidationResult.SignatureValidationStatus">
            <summary>
            Gets the signature validity status mask.
            </summary>
            <value>Signature validity status mask.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailSignatureValidationResult.CertificateValidationStatus">
            <summary>
            Gets the certificate validation status mask.
            </summary>
            <value>Certificate validation status mask.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailSignatureValidationResult.Valid">
            <summary>
            Gets the certificate chain validity status.
            </summary>
            <value>True if valid, false if not valid.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailSignatureValidationResult.MissingSignatureEmails">
            <summary>
            Returns a list of e-mail addresses whose signatures are missing.
            </summary>
            <value>A list of e-mail addresses whose signatures are missing.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.MediaTypeNames">
            <summary>
            Specifies the media type information for an e-mail message attachment.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MediaTypeNames.Application">
            <summary>
            Specifies the kind of application data in an e-mail message attachment. This contains string representations of the common subtypes of 'application' type.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Application.Octet">
            <summary>Specifies that the Application data is not interpreted.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Application.Zip">
            <summary>Specifies that the Application data is compressed.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Application.Pdf">
            <summary>Specifies that the Application data is in Portable Document Format (PDF).</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Application.Rtf">
            <summary>Specifies that the Application data is in Rich Text Format (RTF).</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Application.Soap">
            <summary>Specifies that the Application data is a SOAP document.</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MediaTypeNames.Image">
            <summary>
            Specifies the type of image data in an e-mail message attachment. This contains string representations of the common subtypes of 'image' type.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Image.Png">
            <summary>Specifies that the Image data is in Portable Network Graphics (PNG).</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Image.Jpeg">
            <summary>Specifies that the Image data is in Joint Photographic Experts Group (JPEG) format.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Image.Gif">
            <summary>Specifies that the Image data is in Graphics Interchange Format (GIF).</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Image.Tiff">
            <summary>Specifies that the Image data is in Tagged Image File Format (TIFF).</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MediaTypeNames.Text">
            <summary>
            Specifies the type of text data in an e-mail message attachment. This contains string representations of the common subtypes of 'text' type.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Text.Plain">
            <summary>Specifies that the Text data is in plain text format.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Text.Html">
            <summary>Specifies that the Text data is in HTML format.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Text.Xml">
            <summary>Specifies that the Text data is in XML format.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Text.Rtf">
            <summary>Specifies that the Text data is in Rich Text Format (RTF).</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Text.Enriched">
            <summary>"text/enriched"</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Text.RichText">
            <summary>"text/richtext"</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MediaTypeNames.Multipart">
            <summary>
            Contains string representations of the common subtypes of 'multipart' type.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Multipart.Mixed">
            <summary>"multipart/mixed"</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Multipart.Alternative">
            <summary>"multipart/alternative"</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Multipart.Digest">
            <summary>"multipart/digest"</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Multipart.Related">
            <summary>"multipart/related"</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Multipart.Parallel">
            <summary>"multipart/parallel"</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Multipart.Report">
            <summary>"multipart/report"</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Multipart.Signed">
            <summary>"multipart/signed"</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MediaTypeNames.Message">
            <summary>
            Contains string representations of the common subtypes of 'message' type.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Message.Rfc822">
            <summary>"message/rfc822"</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MediaTypeNames.Message.Partial">
            <summary>"message/partial"</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.ContentDisposition">
            <summary>
            Represents the content disposition of a MIME entity.
            </summary>
            <remarks>
            Represents the <c>Content-Disposition</c> MIME header defined by RFC 2183.
            </remarks>
        </member>
        <member name="T:ComponentPro.Net.Mail.IHeader">
            <summary>
            Common interface of all message header values.
            </summary>
            <remarks>
            Provides a method to write an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.IHeader.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.IHeader.Clone">
            <summary>
            Creates a copy of the header.
            </summary>
            <returns>A copy of the header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentDisposition.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.ContentDisposition"/> header value
            with the specified disposition type.
            </summary>
            <param name="dispositionType">A dispositin type.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentDisposition.Clone">
            <summary>
            Creates a copy of the header.
            </summary>
            <returns>A copy of the header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentDisposition.ToString">
            <summary>
            Converts the value of this header to its <see cref="T:System.String"/> representation.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the value of this header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentDisposition.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentDisposition.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:ComponentPro.Net.Mail.ContentDisposition"/>.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentDisposition.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:ComponentPro.Net.Mail.ContentDisposition"/> is equal to the current <see cref="T:ComponentPro.Net.Mail.ContentDisposition"/>.
            </summary>
            <param name="obj">The <see cref="T:ComponentPro.Net.Mail.ContentDisposition"/> to compare with the current <see cref="T:ComponentPro.Net.Mail.ContentDisposition"/>.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:ComponentPro.Net.Mail.ContentDisposition"/> is equal to the
            current <see cref="T:ComponentPro.Net.Mail.ContentDisposition"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ContentDisposition.Disposition">
            <summary>
            Gets the disposition.
            </summary>
            <value>A disposition.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ContentDisposition.Inline">
            <summary>
            Determines whether the content disposition is inline.
            </summary>
            <value>True if inline; false if attachment.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ContentDisposition.Parameters">
            <summary>
            Gets the list of parameters of this content disposition.
            </summary>
            <value>The list of parameters.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ContentDisposition.FileName">
            <summary>
            Return the file name of the attachment. Returns null if no filename is set.
            </summary>
            <value>A file name.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.ContentType">
            <summary>
            Represents the content type of a MIME entity.
            </summary>
            <remarks>
            Represents the <c>Content-Type</c> MIME header defined by RFC 2045.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentType.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.ContentType"/> header value
            with the specified media type.
            </summary>
            <param name="mediaType">Value of the unstructured header.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentType.Clone">
            <summary>
            Creates a copy of the header.
            </summary>
            <returns>A copy of the header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentType.ToString">
            <summary>
            Converts the value of this header to its <see cref="T:System.String"/> representation.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the value of this header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentType.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentType.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:ComponentPro.Net.Mail.ContentType"/>.
            </returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.ContentType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:ComponentPro.Net.Mail.ContentType"/> is equal to the current <see cref="T:ComponentPro.Net.Mail.ContentType"/>.
            </summary>
            <param name="obj">The <see cref="T:ComponentPro.Net.Mail.ContentType"/> to compare with the current <see cref="T:ComponentPro.Net.Mail.ContentType"/>.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:ComponentPro.Net.Mail.ContentType"/> is equal to the
            current <see cref="T:ComponentPro.Net.Mail.ContentType"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.ContentType.MediaType">
            <summary>
            Gets the internet media type in the format of 'type/subtype'.
            </summary>
            <value>
            An internet media type.
            </value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ContentType.Parameters">
            <summary>
            Gets the list of parameters of this content type.
            </summary>
            <value>The list of parameters.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ContentType.Boundary">
            <summary>
            Gets or sets the 'boundary' parameter of this content type.
            </summary>
            <value>The 'boundary' parameter.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ContentType.CharSet">
            <summary>
            Gets or sets the 'charset' parameter of this content type.
            </summary>
            <value>The 'charset' parameter.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.ContentType.Encoding">
            <summary>
            Gets the 'charset' of this content type to <see cref="P:ComponentPro.Net.Mail.ContentType.Encoding"/>.
            </summary>
            <returns>The encoding, or null if no charset or unknown charset is set.</returns>
        </member>
        <member name="T:ComponentPro.Net.Mail.HeaderValueCollection">
            <summary>
            Represents the collection of header values.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.HeaderValueCollection"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderValueCollection.Clear">
            <summary>
            Removes all items from the list.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderValueCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index from the list.
            </summary>
            <param name="index">A zero-based index of an item to remove.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderValueCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds a range of items contained in the specified collection.
            </summary>
            <param name="collection">Collection of items to be added.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderValueCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderValueCollection.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the range of elements from the <see cref="T:ComponentPro.Net.Mail.HeaderValueCollection"/> to a compatible one-dimensional
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:ComponentPro.Net.Mail.HeaderValueCollection"/>.</param>
            <param name="index">A zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderValueCollection.Clone">
            <summary>
            Creates a copy of the header.
            </summary>
            <returns>A copy of the header.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderValueCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>The number of items is the collection.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderValueCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to <see cref="T:ComponentPro.Net.Mail.HeaderValueCollection"/> is synchronized (thread-safe).
            </summary>
            <value>A value indicating whether access to <see cref="T:ComponentPro.Net.Mail.HeaderValueCollection"/> is synchronized.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderValueCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.HeaderValueCollection"/> object.
            </summary>
            <value>an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.HeaderValueCollection"/> object.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailAddress">
            <summary>
            Represents a mailbox that consists of address and a display name.
            </summary>
            <remarks>
            Represents the <c>mailbox</c> structured header defined by RFC 2822.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MailAddress"/> header value
            with the specified mail address.
            </summary>
            <param name="address">Mail address and (optionally) display name. Typically 'name.surname@company.net' or 'Name Surname &lt;name.surname@company.net&gt;' or '"Name Surname" &lt;name.surname@company.net&gt;'.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddress.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MailAddress"/> header value
            with the specified mail address and display name.
            </summary>
            <param name="address">Mail address.</param>
            <param name="displayName">Display name.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddress.op_Implicit(System.String)~ComponentPro.Net.Mail.MailAddress">
            <summary>
            Converts a <see cref="T:System.String"/> to a <see cref="T:ComponentPro.Net.Mail.MailAddress"/>.
            </summary>
            <param name="address">A single address and possibly a display name.</param>
            <returns>A <see cref="T:ComponentPro.Net.Mail.MailAddress"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddress.Clone">
            <summary>
            Creates a copy of the header.
            </summary>
            <returns>A copy of the header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddress.ToString">
            <summary>
            Converts the value of this header to its <see cref="T:System.String"/> representation.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the value of this header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddress.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailAddress.DisplayName">
            <summary>
            Gets the display name of this mailbox.
            </summary>
            <value>
            A display name.
            </value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailAddress.Address">
            <summary>
            Gets the mail address of this mailbox.
            </summary>
            <value>The mail address.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailAddress.User">
            <summary>
            Gets the local part of this mailbox.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailAddress.Host">
            <summary>
            Gets the domain of this mailbox.
            </summary>
            <value>The hostname.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailAddressCollection">
            <summary>
            Represents the collection of <see cref="T:ComponentPro.Net.Mail.MailAddress"/> objects.
            </summary>
            <remarks>
            Represents the <c>mailbox-list</c> structured header defined by RFC 2822.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MailAddressCollection"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MailAddressCollection"/> filled with the specified list of mailboxes.
            </summary>
            <param name="addresses">List of addresses to parse.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.op_Implicit(ComponentPro.Net.Mail.MailAddress)~ComponentPro.Net.Mail.MailAddressCollection">
            <summary>
            Converts a <see cref="T:ComponentPro.Net.Mail.MailAddress"/> to a <see cref="T:ComponentPro.Net.Mail.MailAddressCollection"/>.
            </summary>
            <param name="mailbox">A single <see cref="T:ComponentPro.Net.Mail.MailAddress"/>.</param>
            <returns>A <see cref="T:ComponentPro.Net.Mail.MailAddressCollection"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.op_Implicit(System.String)~ComponentPro.Net.Mail.MailAddressCollection">
            <summary>
            Converts a <see cref="T:System.String"/> to a <see cref="T:ComponentPro.Net.Mail.MailAddressCollection"/>.
            </summary>
            <param name="addresses">A list of mailboxes.</param>
            <returns>A <see cref="T:ComponentPro.Net.Mail.MailAddressCollection"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.Add(System.String)">
            <summary>
            Adds an address to the end of the list.
            </summary>
            <param name="address">An address to be added.</param>
            <returns>The index at which the address has been added.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.Add(ComponentPro.Net.Mail.MailAddress)">
            <summary>
            Adds a <see cref="T:ComponentPro.Net.Mail.MailAddress"/> to the end of the list.
            </summary>
            <param name="address">A <see cref="T:ComponentPro.Net.Mail.MailAddress"/> to be added.</param>
            <returns>The index at which the address has been added.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.ToString">
            <summary>
            Converts the value of this header to its <see cref="T:System.String"/> representation.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the value of this header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.CopyTo(ComponentPro.Net.Mail.MailAddress[],System.Int32)">
            <summary>
            Copies the range of elements from the <see cref="T:ComponentPro.Net.Mail.MailAddressCollection"/> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
            <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:ComponentPro.Net.Mail.MailAddressCollection"/>.</param>
            <param name="index">A zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailAddressCollection.System#Collections#Generic#IEnumerable{ComponentPro#Net#Mail#MailAddress}#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.MailAddressCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailAddressCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Net.Mail.MailAddress"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ComponentPro.Net.Mail.MailAddress"/> to get or set.</param>
            <value>A mailbox.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailDateTime">
            <summary>
            Represents the date/time and the time zone.
            </summary>
            <remarks>
            Represents the <c>date-time</c> structured header defined by RFC 2822.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MailDateTime"/> header value
            with the specified local <see cref="T:System.DateTime"/>.
            </summary>
            <param name="localTime">A local time.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.op_Implicit(System.DateTime)~ComponentPro.Net.Mail.MailDateTime">
            <summary>
            Converts a <see cref="T:System.DateTime"/> to a <see cref="T:ComponentPro.Net.Mail.MailDateTime"/>.
            </summary>
            <param name="localTime">A date and time.</param>
            <returns>A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MailDateTime"/> header value
            with the specified universal <see cref="T:System.DateTime"/> and a <see cref="P:ComponentPro.Net.Mail.MailDateTime.TimeZone"/>.
            </summary>
            <param name="universalTime">A universal (UTC) time.</param>
            <param name="timeZone">A time zone.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.Clone">
            <summary>
            Creates a copy of the header.
            </summary>
            <returns>A copy of the header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.ToString">
            <summary>
            Converts the value of this header to its <see cref="T:System.String"/> representation.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the value of this header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.CompareTo(ComponentPro.Net.Mail.MailDateTime)">
            <summary>
            Compares the value of this instance to a specified object that contains a
            specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/> value, and returns an integer that indicates whether
            this instance is earlier than, the same as, or later than the specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/>
            value.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.op_Inequality(ComponentPro.Net.Mail.MailDateTime,ComponentPro.Net.Mail.MailDateTime)">
            <summary>
            Determines whether two specified instances of <see cref="T:ComponentPro.Net.Mail.MailDateTime"/> are not equal.
            </summary>
            <param name="d1">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <param name="d2">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <returns>true if d1 and d2 do not represent the same date and time; otherwise, false.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.op_LessThan(ComponentPro.Net.Mail.MailDateTime,ComponentPro.Net.Mail.MailDateTime)">
            <summary>
            Determines whether one specified System.DateTime is less than another specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/>.
            </summary>
            <param name="d1">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <param name="d2">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <returns>true if t1 is less than t2; otherwise, false.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.op_LessThanOrEqual(ComponentPro.Net.Mail.MailDateTime,ComponentPro.Net.Mail.MailDateTime)">
            <summary>
            Determines whether one specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/> is less than another specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/>.
            </summary>
            <param name="d1">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <param name="d2">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <returns>true if t1 is less than or equal to t2; otherwise, false.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.op_Equality(ComponentPro.Net.Mail.MailDateTime,ComponentPro.Net.Mail.MailDateTime)">
            <summary>
            Determines whether one specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/> is less than another specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/>.
            </summary>
            <param name="d1">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <param name="d2">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <returns>true if d1 and d2 represent the same date and time; otherwise, false.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.op_GreaterThan(ComponentPro.Net.Mail.MailDateTime,ComponentPro.Net.Mail.MailDateTime)">
            <summary>
            Determines whether one specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/> is greater than another specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/>.
            </summary>
            <param name="d1">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <param name="d2">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <returns>true if t1 is greater than t2; otherwise, false.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MailDateTime.op_GreaterThanOrEqual(ComponentPro.Net.Mail.MailDateTime,ComponentPro.Net.Mail.MailDateTime)">
            <summary>
            Determines whether one specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/> is greater than or equal to another specified <see cref="T:ComponentPro.Net.Mail.MailDateTime"/>.
            </summary>
            <param name="d1">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <param name="d2">A <see cref="T:ComponentPro.Net.Mail.MailDateTime"/></param>
            <returns>true if t1 is greater than or equal to t2; otherwise, false.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailDateTime.LocalTime">
            <summary>
            Gets the local date/time.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/>.
            </value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailDateTime.UniversalTime">
            <summary>
            Gets the universal date/time.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/>.
            </value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailDateTime.OriginalTime">
            <summary>
            Gets the original date/time (local to <see cref="P:ComponentPro.Net.Mail.MailDateTime.TimeZone"/>).
            </summary>
            <value>
            A <see cref="T:System.DateTime"/>.
            </value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailDateTime.TimeZone">
            <summary>
            Gets the time zone.
            </summary>
            <value>A <see cref="T:System.TimeSpan"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailDateTime.Parsed">
            <summary>
            Gets the boolean value indicating whether the mail date time has been parsed correctly.
            </summary>
            <remarks>If the return value is false, the <see cref="P:ComponentPro.Net.Mail.MailDateTime.DateTimeString"/> is used to represent the mail date time.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MailDateTime.DateTimeString">
            <summary>
            Gets the date time in string.
            </summary>
            <value>The date time in string if the <see cref="P:ComponentPro.Net.Mail.MailDateTime.Parsed"/> property is false; otherwise is a null reference.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.MessageIdentifier">
            <summary>
            Represents the message identifier.
            </summary>
            <remarks>
            Represents the <c>msg-id</c> structured header defined by RFC 2822.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifier.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/> header value
            with the specified message identifier.
            </summary>
            <param name="messageId">Message identifier.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifier.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/> header value
            and generates a new message identifier.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifier.op_Implicit(System.String)~ComponentPro.Net.Mail.MessageIdentifier">
            <summary>
            Converts a <see cref="T:System.String"/> to a <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/>.
            </summary>
            <param name="messageId">A single message ID.</param>
            <returns>A <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifier.Clone">
            <summary>
            Creates a copy of the header.
            </summary>
            <returns>A copy of the header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifier.ToString">
            <summary>
            Converts the value of this header to its <see cref="T:System.String"/> representation.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the value of this header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifier.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.MessageIdentifier.Id">
            <summary>
            Gets the message identifier.
            </summary>
            <value>Message identifier.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.MessageIdentifierCollection">
            <summary>
            Represents the collection of <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/> objects.
            </summary>
            <remarks>
            Represents the list of <c>msg-id</c>s defined by RFC 2822.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifierCollection.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MessageIdentifierCollection"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifierCollection.op_Implicit(ComponentPro.Net.Mail.MessageIdentifier)~ComponentPro.Net.Mail.MessageIdentifierCollection">
            <summary>
            Converts a <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/> to a <see cref="T:ComponentPro.Net.Mail.MessageIdentifierCollection"/>.
            </summary>
            <param name="messageId">A single <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/>.</param>
            <returns>A <see cref="T:ComponentPro.Net.Mail.MessageIdentifierCollection"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifierCollection.op_Implicit(System.String)~ComponentPro.Net.Mail.MessageIdentifierCollection">
            <summary>
            Converts a <see cref="T:System.String"/> to a <see cref="T:ComponentPro.Net.Mail.MessageIdentifierCollection"/>.
            </summary>
            <param name="messageIDs">A list of message IDs.</param>
            <returns>A <see cref="T:ComponentPro.Net.Mail.MessageIdentifierCollection"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifierCollection.Add(ComponentPro.Net.Mail.MessageIdentifier)">
            <summary>
            Adds a <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/> to the end of the list.
            </summary>
            <param name="messageId">A <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/> to be added.</param>
            <returns>The index at which the message identificator has been added.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifierCollection.ToString">
            <summary>
            Converts the value of this header to its <see cref="T:System.String"/> representation.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the value of this header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifierCollection.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifierCollection.CopyTo(ComponentPro.Net.Mail.MessageIdentifier[],System.Int32)">
            <summary>
            Copies the range of elements from the <see cref="T:ComponentPro.Net.Mail.MessageIdentifierCollection"/> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
            <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:ComponentPro.Net.Mail.MessageIdentifierCollection"/>.</param>
            <param name="index">A zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MessageIdentifierCollection.System#Collections#Generic#IEnumerable{ComponentPro#Net#Mail#MessageIdentifier}#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.MessageIdentifierCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.MessageIdentifierCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ComponentPro.Net.Mail.MessageIdentifier"/> to get or set.</param>
            <value>A message identifier.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.HeaderParameters">
            <summary>
            Represents the collection of MIME header parameters.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderParameters.Add(System.String,System.String)">
            <summary>
            Adds a new parameter to the collection.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="value">The value of the parameter.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderParameters.Remove(System.String)">
            <summary>
            Removes the parameter of the specified name from the collection.
            </summary>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderParameters.ToString">
            <summary>
            Converts the value of this header to its <see cref="T:System.String"/> representation.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the value of this header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderParameters.Encode(System.IO.TextWriter)">
            <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderParameters.Count">
            <summary>
            Gets the number of parameters in the collection.
            </summary>
            <value>The number of parameters is the collection.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderParameters.Item(System.String)">
            <summary>
            Gets or sets the value of parameter at the specified index.
            </summary>
            <param name="name">The name of parameter whose value to get or set.</param>
            <value>An parameter value.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderParameters.Names">
            <summary>
            Gets a collection containing the names of all parameters.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MimeUnparsableHeaderEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.MailMessage.UnparsableHeader">UnparsableHeader</see> event of a <see cref="T:ComponentPro.Net.Mail.MailMessage"/> class.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.MimeUnparsableHeaderSeverity">
            <summary>
            Specifies the header error severity.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MimeUnparsableHeaderSeverity.Warning">
            <summary>A less serious problem that does not cause an exception to be thrown by default.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MimeUnparsableHeaderSeverity.Error">
            <summary>A serious problem that causes an exception to be thrown by default.</summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MimeUnparsableHeaderStatus">
            <summary>
            Specifies the problem encountered by the header parser.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MimeUnparsableHeaderStatus.UnableToParse">
            <summary>
            Unable to parse the header.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MimeUnparsableHeaderStatus.UnknownCharset">
            <summary>
            Unknown charset in Content-type header.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs">
            <summary>
            Provides data for the <see cref="E:ComponentPro.Net.Mail.MailMessage.UnparsableHeader"/> event.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs.SetHeaderValue(ComponentPro.Net.Mail.IHeader)">
            <summary>
            Sets the header value to the specified object. Use this to override the default parser and provide your own value.
            </summary>
            <param name="value">Header value.</param>
            <remarks>This method also sets the <see cref="P:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs.Ignore"/> property to true.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs.Name">
            <summary>
            Gets the header name.
            </summary>
            <value>The header name.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs.Raw">
            <summary>
            Gets the raw text representation of this header.
            </summary>
            <value>Raw header text.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs.Error">
            <summary>
            Gets the header parser error for this header.
            </summary>
            <value>Header parser error.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs.Ignore">
            <summary>
            Gets or sets the value indicating whether to ignore this error.
            </summary>
            <value>A value indicating whether to ignore this error.</value>
            <remarks>
            A default value is determined by the <see cref="F:ComponentPro.Net.Mail.MailMessageConfig.IgnoreUnparsableHeaders"/> flag of <see cref="P:ComponentPro.Net.Mail.MailMessage.Config"/> property.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs.Severity">
            <summary>
            Gets the severity of the header parser problem.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.MimeUnparsableHeaderEventArgs.Status">
            <summary>
            Gets the status of the header parser problem.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MimeExceptionStatus">
            <summary>
            Defines status codes for the <see cref="T:ComponentPro.Net.Mail.MimeException"/> class.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MimeExceptionStatus.UnspecifiedError">
            <summary>
            An unclassifiable error occurred. This is the default value for <see cref="P:ComponentPro.Net.Mail.MimeException.Status"/>.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MimeExceptionStatus.MessageParserError">
            <summary>
            An error occurred inside the message parser.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MimeExceptionStatus.HeaderParserError">
            <summary>
            An error occurred inside the message header parser.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MimeExceptionStatus.OperationError">
            <summary>
            Unable to complete the requested operation.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.MimeException">
            <summary>
            The exception that is thrown when a MIME-related error occurs.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.MimeException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MimeException.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MimeException"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.MimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MimeException"/> with the specified message.
            </summary>
            <param name="message">Message that describes the error.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.MimeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.MimeException"/> with the specified message and inner exception.
            </summary>
            <param name="message">Message that describes the error.</param>
            <param name="inner">The exception that was the cause of this exception.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.MimeException.Status">
            <summary>
            Gets the status of the response.
            </summary>
            <value>One of the <see cref="T:ComponentPro.Net.Mail.MimeExceptionStatus"/> values.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.MimeException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value>A message that describes the current exception.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.Header">
            <summary>
            A single MIME header.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Header.ToString">
            <summary>
            Returns a string representation of this header.
            </summary>
            <returns>A string representation of the header.</returns>
            <remarks>The format of the result is "{name}: {value}".</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Header.#ctor(System.String,ComponentPro.Net.Mail.IHeader)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.Header"/> class.
            </summary>
            <param name="name">Header name.</param>
            <param name="value">Header value.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Header.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.Header"/> class.
            </summary>
            <param name="name">Header name.</param>
            <param name="value">Header value.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Header.Clone">
            <summary>
            Creates a copy of the header.
            </summary>
            <returns>A copy of the header.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Header.Encode(System.IO.TextWriter)">
            <summary>
            Write the encoded value of the header into a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"/> to receive the encoded value.</param>
            <remarks>Encoded value include the name, the value and trailing end-of-line sequence (CRLF).</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Header.DecodeMimeHeader(System.String)">
            <summary>
            Decodes a raw MIME-encoded header value using 'B' or 'Q' encoding.
            </summary>
            <param name="value">Raw header value.</param>
            <returns>Decoded header value.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.Header.Name">
            <summary>
            Gets the name of this header,
            </summary>
            <value>Header name.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Header.Value">
            <summary>
            Gets the value of this header,
            </summary>
            <value>Header value.</value>
            <remarks>This might be any of various classes
            that implement the <see cref="T:ComponentPro.Net.Mail.IHeader"/> interface.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Header.Unparsable">
            <summary>
            Gets a value indicating whether the header was unparsable.
            </summary>
            <value>True if unparsable; false if parsable.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Header.Raw">
            <summary>
            Gets the raw text representation of this header.
            </summary>
            <value>Raw header text.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.HeaderCollection">
            <summary>
            Represents the collection of <see cref="T:ComponentPro.Net.Mail.Header"/> objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.System#Collections#Generic#IEnumerable{ComponentPro#Net#Mail#Header}#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.GetEnumerator(System.Int32,System.Int32)">
            <summary>
            Gets an enumerator for a section of the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/> collection
            </summary>
            <param name="index">The zero-based starting index of the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/> section that the enumerator should refer to.</param>
            <param name="count">The number of elements in the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/> section that the enumerator should refer to.</param>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the specified section of the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/>.</returns>
            <remarks>Not supported by ComponentPro Mail for .NET Compact Framework.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.Insert(System.Int32,ComponentPro.Net.Mail.Header)">
            <summary>
            Inserts a <see cref="T:ComponentPro.Net.Mail.Header"/> into the list at the specified index.
            </summary>
            <param name="index">A zero-based index at which the header should be inserted.</param>
            <param name="header">A header to insert.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
            Inserts a headerinto the list at the specified index.
            </summary>
            <param name="index">A zero-based index at which the header should be inserted.</param>
            <param name="headerName">Name of header to insert.</param>
            <param name="headerValue">Value of header to insert.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.Add(ComponentPro.Net.Mail.Header)">
            <summary>
            Adds a <see cref="T:ComponentPro.Net.Mail.Header"/> to the end of the list.
            </summary>
            <param name="header">A header to be added.</param>
            <returns>The index at which the value has been added.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.Add(System.String,System.String)">
            <summary>
            Adds a new header to the end of the list.
            </summary>
            <param name="headerName">Name of header to be added.</param>
            <param name="headerValue">Value of header to be added.</param>
            <returns>The index at which the value has been added.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.Remove(System.String)">
            <summary>
            Removes all <see cref="T:ComponentPro.Net.Mail.Header"/>s of the specified name from the list.
            </summary>
            <param name="name">Name of headers to remove.</param>
            <returns>The number headers removed.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ComponentPro.Net.Mail.Header"/> at the specified index from the list.
            </summary>
            <param name="index">A zero-based index of header to remove.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.Clear">
            <summary>
            Removes all headers from the list.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.Remove(ComponentPro.Net.Mail.Header)">
            <summary>
            Removes the first occurance of specified <see cref="T:ComponentPro.Net.Mail.Header"/> from the list.
            </summary>
            <param name="header">Header to remove.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.GetRaw(System.String)">
            <summary>
            Gets the raw text representation of the specified header if available.
            </summary>
            <param name="headerName">The name of the header to get.</param>
            <value>Raw header text, or null if not available.</value>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.GetAllHeaders(System.String)">
            <summary>
            Gets all <see cref="T:ComponentPro.Net.Mail.Header"/> of the specified name.
            </summary>
            <param name="headerName">The name of the headers to get.</param>
            <value>Array of <see cref="T:ComponentPro.Net.Mail.Header"/> of the specified name.</value>
        </member>
        <member name="M:ComponentPro.Net.Mail.HeaderCollection.GetAllHeaderValuesRaw(System.String)">
            <summary>
            Gets raw text representations of all headers of the specified name.
            </summary>
            <param name="headerName">The name of the headers to get.</param>
            <value>Array of raw text representations of all headers of the specified name.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/> collection.
            </summary>
            <value>An object that can be used to synchronize access to the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/> collection.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderCollection.Count">
            <summary>
            Gets the number of headers contained in the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/>.
            </summary>
            <value>The number of headers contained in the <see cref="T:ComponentPro.Net.Mail.HeaderCollection"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Net.Mail.Header"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ComponentPro.Net.Mail.Header"/> to get.</param>
            <value><see cref="T:ComponentPro.Net.Mail.Header"/> of the specified index.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.HeaderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:ComponentPro.Net.Mail.Header"/> of the specified name.
            </summary>
            <param name="headerName">The name of the header to get.</param>
            <value><see cref="T:ComponentPro.Net.Mail.Header"/> of the specified name.</value>
            <remarks>
            <p>
            If no header of the specified name is found, the return value is null.
            </p>
            <p>
            If more than one headers are found, only the first is returned.
            </p>
            <p>
            When assinging value, the first header of specified name is changed
            and remaining headers of the same name are removed.
            </p>
            </remarks>
        </member>
        <member name="T:ComponentPro.Net.Mail.MailMessageConfig">
            <summary>
            Defnies options for mail message.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailMessageConfig.IgnoreUnparsableHeaders">
            <summary>
            Ignore unparsable headers when parsing mail message.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.MailMessageConfig.IgnoreUnparsableSignatures">
            <summary>
            Ignore unparsable S/MIME signature entities when parsing mail message.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.TransferEncoding">
            <summary>
            Type of transfer encoding of the content.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.TransferEncoding.Unknown">
            <summary>
            Unknown content encoding.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.TransferEncoding.QuotedPrintable">
            <summary>
            Quoted-Printable encoding.
            </summary>
            <remarks>
            The Quoted-Printable encoding is intended to represent data that
            largely consists of octets that correspond to printable characters
            in the US-ASCII character set.
            </remarks>
        </member>
        <member name="F:ComponentPro.Net.Mail.TransferEncoding.Base64">
            <summary>
            Base64 encoding.
            </summary>
            <remarks>
            The Base64 encoding is designed to represent arbitrary
            sequences of octets in a form that is not humanly readable.
            </remarks>
        </member>
        <member name="F:ComponentPro.Net.Mail.TransferEncoding.SevenBit">
            <summary>
            No encoding, content data is 7bit.
            </summary>
            <remarks>
            <p>
            7bit data refers to data that is all represented as relatively
            short lines with 998 octets or less between CRLF line separation
            sequences. No octets with decimal values greater than 127 are allowed
            and neither are NULs (octets with decimal value 0).
            CR (decimal value 13) and LF (decimal value 10) octets only occur
            as part of CRLF line separation sequences.
            </p>
            </remarks>
        </member>
        <member name="F:ComponentPro.Net.Mail.TransferEncoding.EightBit">
            <summary>
            No encoding, content data is 8bit.
            </summary>
            <remarks>
            8bit data refers to data that is all represented as relatively
            short lines with 998 octets or less between CRLF line separation
            sequences. Octets with decimal values greater than 127 may be used.
            CR (decimal value 13) and LF (decimal value 10) octets only occur
            as part of CRLF line separation sequences.
            </remarks>
        </member>
        <member name="F:ComponentPro.Net.Mail.TransferEncoding.Binary">
            <summary>
            No encoding, content data is binary.
            </summary>
            <remarks>
            Binary data refers to data where any sequence of octets is allowed.
            </remarks>
        </member>
        <member name="T:ComponentPro.Net.Mail.SubjectInfo">
            <summary>
            Represents a message signer or an encrypted message recipient.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SubjectInfo.Identifier">
            <summary>
            Gets the identifier of the signer or recipient
            </summary>
            <value>Identifier of the signer or recipient.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SubjectInfo.Certificate">
            <summary>
            Gets the certificate associated with the signer or recipient, or null if not available.
            </summary>
            <remarks>The signer's/recipient's certificate, or null.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.SubjectInfo.CertificateChain">
            <summary>
            Gets the certificate chain associated with the signer or recipient, or null if not available.
            </summary>
            <remarks>The signer's/recipient's certificate chain, or null.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.SubjectInfo.DigestAlgorithm">
            <summary>
            Gets the digest algorithm used to produce a signature. Only set for signers, not for recipients.
            </summary>
            <value>Digest algorithm.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.SubjectInfoCollection">
            <summary>
            Represents the collection of alternate mail message views.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.SubjectInfoCollection.#ctor(c_TH)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SubjectInfoCollection"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.SubjectInfoCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.SubjectInfoCollection.System#Collections#Generic#IEnumerable{ComponentPro#Net#Mail#SubjectInfo}#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.SubjectInfoCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.SubjectInfoCollection.CopyTo(ComponentPro.Net.Mail.SubjectInfo[],System.Int32)">
            <summary>
            Copies the range of elements from the <see cref="T:ComponentPro.Net.Mail.SubjectInfoCollection"/> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
            <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:ComponentPro.Net.Mail.SubjectInfoCollection"/>.</param>
            <param name="index">A zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.SubjectInfoCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>The number of items is the collection.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SubjectInfoCollection.Item(System.Int32)">
            <summary>
            Gets the list item at the specified index.
            </summary>
            <param name="index">The zero-based index of the list item to get or set.</param>
            <value>An item.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SubjectInfoCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to <see cref="T:ComponentPro.Net.Mail.SubjectInfoCollection"/> is synchronized (thread-safe).
            </summary>
            <value>A value indicating whether access to <see cref="T:ComponentPro.Net.Mail.SubjectInfoCollection"/> is synchronized.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SubjectInfoCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.SubjectInfoCollection"/> object.
            </summary>
            <value>an object that can be used to synchronize access to <see cref="T:ComponentPro.Net.Mail.SubjectInfoCollection"/> object.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3AuthenticationMethod">
            <summary>
            Defines POP3 authentication methods to be used for logging in the user account on the server.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3AuthenticationMethod.Auto">
            <summary>
            Lets UltimateMail automatically select the best supported authentication method.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3AuthenticationMethod.SaslPlain">
            <summary>
            SASL PLAIN authentication (RFC 2831 DIGEST-MD5). Passwords are transmitted as Base64 strings. Not secure but widely supported.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3AuthenticationMethod.SaslDigestMD5">
            <summary>
            Secure SASL DIGEST-MD5 authentication (RFC 2831 DIGEST-MD5). Might not be supported by particular server implementations.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3AuthenticationMethod.SaslCramMD5">
            <summary>
            Secure SASL CRAM-MD5 authentication (RFC 2195 CRAM-MD5). Might not be supported by particular server implementations.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3AuthenticationMethod.SaslLogin">
            <summary>
            SASL LOGIN authentication. Passwords are transmitted as Base64 strings. Not secure but widely supported.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3AuthenticationMethod.ClearText">
            <summary>
            Clear text USER/PASS login.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3AuthenticationMethod.APop">
            <summary>
            Secure APOP authentication. Supported by many POP3 servers.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3AuthenticationMethod.SaslNtlm">
            <summary>
            Secure SASL NTLM authentication (also known as Secure Password Authentication - SPA). 
            In Windows domain environment such as Active Directory, can also be used to authenticate the current Windows user 
            (in this case, the developer should pass a null reference (Nothing in Visual Basic) as accountName and password values). 
            Might not be supported by particular server implementations. See remarks section for futher details regarding Integrated Windows Authentication. 
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3AuthenticationMethod.SaslGssApi">
            <summary>
            Secure SASL GSSAPI authentication (through Kerberos, NTLM, or Negotiate). 
            Like SaslNtlm, supports Integrated Windows Authentication mode. 
            The internal implementation (Kerberos or NTLM) is selected upon whether mechanism of <see cref="M:ComponentPro.Net.Mail.Pop3.Authenticate(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String)"/> method is 'ntlm', 'kerberos', or 'negotiate'. 
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3EnvelopeParts">
            <summary>
            Defines the message elements available for <see cref="O:ComponentPro.Net.Mail.Pop3.DownloadPop3Message">Download</see> and <see cref="O:ComponentPro.Net.Mail.Pop3.ListMessages">Listing</see>.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3EnvelopeParts.MessageInboxIndex">
            <summary>
            Returned <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> object will contain message inbox index number.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3EnvelopeParts.UniqueId">
            <summary>
            Returned <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> object will contain unique id.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3EnvelopeParts.Size">
            <summary>
            Returned <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> object will contain message size.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3EnvelopeParts.SimpleParts">
            <summary>Returned <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> object will contain Sequence number, unique ID and size.</summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3EnvelopeParts.FullHeaders">
            <summary>
            Returned <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> object will contain full headers, sequence number, unique ID and length. Might take a VERY long time!
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3Features">
            <summary>
            Defines the POP3 extensions.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3Features.APop">
            <summary>
            APOP, an enhanced authorization method.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3Features.All">
            <summary>
            All extensions.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3">
            <summary>
            Provides methods for communication with POP3 servers.
            </summary>
            <remarks>All members of this class are thread-safe.</remarks>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3.DefaultPort">
            <summary>
            Default POP3 port - 110.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3.DefaultImplicitSslPort">
            <summary>
            Default POP3 Implicit SSL port - 995.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:ComponentPro.Net.Mail.Pop3"/>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing"><b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnAuthenticateCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.AuthenticateCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(ComponentPro.Net.Mail.Pop3AuthenticationMethod,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the user to the remote POP3 server using the specified authentication method that does not require credentials. 
            Only NTLM and External methods are supported.
            </summary>
            <param name="authenticationMethod">The POP3 authentication method.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(ComponentPro.Net.Mail.Pop3AuthenticationMethod,System.Object)">
            <summary>
            Asynchronously authenticates the user to the remote POP3 server using the specified authentication method that does not require credentials. 
            Only NTLM and External methods are supported.
            </summary>
            <param name="authenticationMethod">The POP3 authentication method.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(ComponentPro.Net.Mail.Pop3AuthenticationMethod)">
            <summary>
            Asynchronously authenticates the user to the remote POP3 server using the specified authentication method that does not require credentials. 
            Only NTLM and External methods are supported.
            </summary>
            <param name="authenticationMethod">The POP3 authentication method.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(System.String,System.String,ComponentPro.Net.Mail.Pop3AuthenticationMethod,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote POP3 server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <param name="authenticationMethod">The authentication method.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(System.String,System.String,ComponentPro.Net.Mail.Pop3AuthenticationMethod,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote POP3 server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <param name="authenticationMethod">The authentication method.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(System.String,System.String,ComponentPro.Net.Mail.Pop3AuthenticationMethod)">
            <summary>
            Asynchronously authenticates the specified user to the remote POP3 server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <param name="authenticationMethod">The authentication method.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the user to the POP3 server using the specified GSSAPI parameters.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Asynchronously authenticates the user to the POP3 server using the specified GSSAPI parameters.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String)">
            <summary>
            Asynchronously authenticates the user to the POP3 server using the specified GSSAPI parameters.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote POP3 server with the specified credentials using the <see cref="T:ComponentPro.Net.Mail.Pop3AuthenticationMethod">Auto</see> mode.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote POP3 server with the specified credentials using the <see cref="T:ComponentPro.Net.Mail.Pop3AuthenticationMethod">Auto</see> mode.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.AuthenticateAsync(System.String,System.String)">
            <summary>
            Asynchronously authenticates the specified user to the remote POP3 server with the specified credentials using the <see cref="T:ComponentPro.Net.Mail.Pop3AuthenticationMethod">Auto</see> mode.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnConnectCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.String})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.ConnectCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to a POP3 server on the standard POP3 port (110).
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,System.Object)">
            <summary>
            Asynchronously connects to a POP3 server on the standard POP3 port (110).
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String)">
            <summary>
            Asynchronously connects to a POP3 server on the standard POP3 port (110).
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to a POP3 server.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. (eg. 110).</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,System.Int32,System.Object)">
            <summary>
            Asynchronously connects to a POP3 server.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. (eg. 110).</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,System.Int32)">
            <summary>
            Asynchronously connects to a POP3 server.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. (eg. 110).</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,System.Int32,ComponentPro.Net.SecurityMode,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to the POP3 server with the specified security.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="serverPort">The port on which to communicate with the server. The standard POP3 port is 110. For TLS/SSL connections, dedicated port is 995.</param>
            <param name="security">The security mode.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,System.Int32,ComponentPro.Net.SecurityMode,System.Object)">
            <summary>
            Asynchronously connects to the POP3 server with the specified security.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="serverPort">The port on which to communicate with the server. The standard POP3 port is 110. For TLS/SSL connections, dedicated port is 995.</param>
            <param name="security">The security mode.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,System.Int32,ComponentPro.Net.SecurityMode)">
            <summary>
            Asynchronously connects to the POP3 server with the specified security.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="serverPort">The port on which to communicate with the server. The standard POP3 port is 110. For TLS/SSL connections, dedicated port is 995.</param>
            <param name="security">The security mode.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,ComponentPro.Net.SecurityMode,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to the POP3 server with the specified security. The component will use a port corresponding to the specified security mode.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="security">Connection security.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,ComponentPro.Net.SecurityMode,System.Object)">
            <summary>
            Asynchronously connects to the POP3 server with the specified security. The component will use a port corresponding to the specified security mode.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="security">Connection security.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ConnectAsync(System.String,ComponentPro.Net.SecurityMode)">
            <summary>
            Asynchronously connects to the POP3 server with the specified security. The component will use a port corresponding to the specified security mode.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="security">Connection security.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnDisconnectCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.String})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.DisconnectCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DisconnectAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously disconnects from the POP3 server and releases any used resources. All messages marked as deleted will be permanently removed.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DisconnectAsync(System.Object)">
            <summary>
            Asynchronously disconnects from the POP3 server and releases any used resources. All messages marked as deleted will be permanently removed.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DisconnectAsync">
            <summary>
            Asynchronously disconnects from the POP3 server and releases any used resources. All messages marked as deleted will be permanently removed.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DisconnectAsync(System.Boolean,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously deletes any messages marked as deleted and terminate the connection.
            </summary>
            <param name="rollbackChanges"><c>true</c> if messages marked as deleted should be left on the server.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DisconnectAsync(System.Boolean,System.Object)">
            <summary>
            Asynchronously deletes any messages marked as deleted and terminate the connection.
            </summary>
            <param name="rollbackChanges"><c>true</c> if messages marked as deleted should be left on the server.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DisconnectAsync(System.Boolean)">
            <summary>
            Asynchronously deletes any messages marked as deleted and terminate the connection.
            </summary>
            <param name="rollbackChanges"><c>true</c> if messages marked as deleted should be left on the server.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnReadResponseCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.String})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.ReadResponseCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:ComponentPro.ExtendedAsyncCompletedEventArgs`1"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ReadResponseAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously returns the corresponding response of the POP3 server to the command that was sent using the <see cref="M:ComponentPro.Net.Mail.Pop3.SendCommand(System.String,System.Boolean)"/> or <See cref="O:SendCommandAsync"></See>method.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ReadResponseAsync(System.Object)">
            <summary>
            Asynchronously returns the corresponding response of the POP3 server to the command that was sent using the <see cref="M:ComponentPro.Net.Mail.Pop3.SendCommand(System.String,System.Boolean)"/> or <See cref="O:SendCommandAsync"></See>method.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ReadResponseAsync">
            <summary>
            Asynchronously returns the corresponding response of the POP3 server to the command that was sent using the <see cref="M:ComponentPro.Net.Mail.Pop3.SendCommand(System.String,System.Boolean)"/> or <See cref="O:SendCommandAsync"></See>method.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>        
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnSendCommandCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.SendCommandCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.SendCommandAsync(System.String,System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sends a custom command to the server.
            </summary>
            <param name="command">User-defined command text.</param>
            <param name="multiline">Indicates whether the response for the command is multiline or single line.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.SendCommandAsync(System.String,System.Boolean,System.Object)">
            <summary>
            Asynchronously sends a custom command to the server.
            </summary>
            <param name="command">User-defined command text.</param>
            <param name="multiline">Indicates whether the response for the command is multiline or single line.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.SendCommandAsync(System.String,System.Boolean)">
            <summary>
            Asynchronously sends a custom command to the server.
            </summary>
            <param name="command">User-defined command text.</param>
            <param name="multiline">Indicates whether the response for the command is multiline or single line.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnGetMailboxStatCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.Pop3MailboxStat})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.GetMailboxStatCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.GetMailboxStatAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.Pop3MailboxStat},System.Object)">
            <summary>
            Asynchronously sends a STAT command to a POP3 server and parse the response.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.GetMailboxStatAsync(System.Object)">
            <summary>
            Asynchronously sends a STAT command to a POP3 server and parse the response.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.GetMailboxStatAsync">
            <summary>
            Asynchronously sends a STAT command to a POP3 server and parse the response.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnUpgradeConnectionCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.UpgradeConnectionCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.UpgradeConnectionAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously secures the connection with TLS/SSL using default parameters.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.UpgradeConnectionAsync(System.Object)">
            <summary>
            Asynchronously secures the connection with TLS/SSL using default parameters.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.UpgradeConnectionAsync">
            <summary>
            Asynchronously secures the connection with TLS/SSL using default parameters.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnUndeleteCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.UndeleteCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.UndeleteAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously undelete messages - unmarks any messages that have been marked as deleted.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.UndeleteAsync(System.Object)">
            <summary>
            Asynchronously undelete messages - unmarks any messages that have been marked as deleted.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.UndeleteAsync">
            <summary>
            Asynchronously undelete messages - unmarks any messages that have been marked as deleted.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnDeleteCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.DeleteCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DeleteAsync(System.Int32,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously flags the specified message for deletion from the server.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DeleteAsync(System.Int32,System.Object)">
            <summary>
            Asynchronously flags the specified message for deletion from the server.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DeleteAsync(System.Int32)">
            <summary>
            Asynchronously flags the specified message for deletion from the server.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnListMessagesCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.Pop3MessageCollection})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.ListMessagesCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ListMessagesAsync(ComponentPro.Net.Mail.Pop3EnvelopeParts,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.Pop3MessageCollection},System.Object)">
            <summary>
            Asynchronously retrieves a list of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> in the currently selected mailbox. Each message in the list contains the specified envelope parts.
            </summary>
            <param name="parts">The message elements to retrieve.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ListMessagesAsync(ComponentPro.Net.Mail.Pop3EnvelopeParts,System.Object)">
            <summary>
            Asynchronously retrieves a list of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> in the currently selected mailbox. Each message in the list contains the specified envelope parts.
            </summary>
            <param name="parts">The message elements to retrieve.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ListMessagesAsync(ComponentPro.Net.Mail.Pop3EnvelopeParts)">
            <summary>
            Asynchronously retrieves a list of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> in the currently selected mailbox. Each message in the list contains the specified envelope parts.
            </summary>
            <param name="parts">The message elements to retrieve.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ListMessagesAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.Pop3MessageCollection},System.Object)">
            <summary>
            Asynchronously retrieves a list of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> containing unique ID and length of each message in the mailbox.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ListMessagesAsync(System.Object)">
            <summary>
            Asynchronously retrieves a list of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> containing unique ID and length of each message in the mailbox.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ListMessagesAsync">
            <summary>
            Asynchronously retrieves a list of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> containing unique ID and length of each message in the mailbox.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnDownloadMessageHeadersCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.Int64})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.DownloadMessageHeadersCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageHeadersAsync(System.Int32,System.IO.Stream,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the headers of a message with the specified inbox index from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageHeadersAsync(System.Int32,System.IO.Stream,System.Object)">
            <summary>
            Asynchronously downloads the headers of a message with the specified inbox index from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageHeadersAsync(System.Int32,System.IO.Stream)">
            <summary>
            Asynchronously downloads the headers of a message with the specified inbox index from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="output">Stream that will receive the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnDownloadPop3MessageCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.Pop3Message})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.DownloadPop3MessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadPop3MessageAsync(System.Int32,ComponentPro.Net.Mail.Pop3EnvelopeParts,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.Pop3Message},System.Object)">
            <summary>
            Asynchronously retrieves information about a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="parts">The message elements to retrieve.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadPop3MessageAsync(System.Int32,ComponentPro.Net.Mail.Pop3EnvelopeParts,System.Object)">
            <summary>
            Asynchronously retrieves information about a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="parts">The message elements to retrieve.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadPop3MessageAsync(System.Int32,ComponentPro.Net.Mail.Pop3EnvelopeParts)">
            <summary>
            Asynchronously retrieves information about a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="parts">The message elements to retrieve.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnDownloadMessageCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.Int64})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.DownloadMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageAsync(System.Int32,System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the specified message from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageAsync(System.Int32,System.String,System.Object)">
            <summary>
            Asynchronously downloads the specified message from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageAsync(System.Int32,System.String)">
            <summary>
            Asynchronously downloads the specified message from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageAsync(System.Int32,System.IO.Stream,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Int64},System.Object)">
            <summary>
            Asynchronously downloads the specified message from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageAsync(System.Int32,System.IO.Stream,System.Object)">
            <summary>
            Asynchronously downloads the specified message from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="output">Stream that will receive the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageAsync(System.Int32,System.IO.Stream)">
            <summary>
            Asynchronously downloads the specified message from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="output">Stream that will receive the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnDownloadMailMessageCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.MailMessage})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.DownloadMailMessageCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMailMessageAsync(System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.MailMessage},System.Object)">
            <summary>
            Asynchronously completely downloads the specified message from the server and loads it into an instance of the <see cref="T:ComponentPro.Net.Mail.MailMessage"/> class.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMailMessageAsync(System.Int32,System.Object)">
            <summary>
            Asynchronously completely downloads the specified message from the server and loads it into an instance of the <see cref="T:ComponentPro.Net.Mail.MailMessage"/> class.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMailMessageAsync(System.Int32)">
            <summary>
            Asynchronously completely downloads the specified message from the server and loads it into an instance of the <see cref="T:ComponentPro.Net.Mail.MailMessage"/> class.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnGetMessageInboxIndexCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.Nullable{System.Int32}})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.GetMessageInboxIndexCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.GetMessageInboxIndexAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.Nullable{System.Int32}},System.Object)">
            <summary>
            Asynchronously tries to retrieve the inbox index of the specified message by unique ID.
            </summary>
            <param name="uniqueId">Unique ID of the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.GetMessageInboxIndexAsync(System.String,System.Object)">
            <summary>
            Asynchronously tries to retrieve the inbox index of the specified message by unique ID.
            </summary>
            <param name="uniqueId">Unique ID of the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.GetMessageInboxIndexAsync(System.String)">
            <summary>
            Asynchronously tries to retrieve the inbox index of the specified message by unique ID.
            </summary>
            <param name="uniqueId">Unique ID of the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnCommandResponse(System.Object,ComponentPro.Net.CommandResponseEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.CommandResponse"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.CommandResponseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnStateChanged(System.Object,ComponentPro.Net.Mail.MailClientStateChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.StateChanged"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.MailClientStateChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnProgress(System.Object,ComponentPro.Net.Mail.Pop3ProgressEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.Progress"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.Pop3ProgressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnMessageListProgress(System.Object,ComponentPro.Net.Mail.Pop3MessageListProgressEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.MessageListProgress"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.Pop3MessageListProgressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnCertificateReceived(System.Object,ComponentPro.Security.CertificateReceivedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.CertificateReceived"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Security.CertificateReceivedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.OnCertificateRequired(System.Object,ComponentPro.Security.CertificateRequiredEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Pop3.CertificateRequired"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Security.CertificateRequiredEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Pop3"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Pop3"/> class with a container.
            </summary>
            <param name="container">The container object.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the container is null.</exception>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Cancel">
            <summary>
            Cancels the current operation.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Connect(System.String)">
            <summary>
            Connects to a POP3 server on the standard POP3 port (110).
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <returns>The welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Connect(System.String,System.Int32)">
            <summary>
            Connects to a POP3 server.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. (eg. 110).</param>
            <returns>The welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Connect(System.String,ComponentPro.Net.SecurityMode)">
            <summary>
            Connects to the POP3 server with the specified security. The component will use a port corresponding to the specified security mode.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="security">Connection security.</param>
            <returns>The welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Connect(System.String,System.Int32,ComponentPro.Net.SecurityMode)">
            <summary>
            Connects to the POP3 server with the specified security.
            </summary>
            <param name="serverName">The name or IP address of the POP3 server.</param>
            <param name="serverPort">The port on which to communicate with the server. The standard POP3 port is 110. For TLS/SSL connections, dedicated port is 995.</param>
            <param name="security">The security mode.</param>
            <returns>The welcome message returned by the remote POP3 server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Disconnect">
            <summary>
            Disconnects from the POP3 server and releases any used resources. All messages marked as deleted will be permanently removed.
            </summary>
            <returns>The exit message returned by the server.</returns>
            <remarks>
            On successful completion of this method, all the messages marked as deleted during the POP3 session are physically deleted by the server. If this method fails, the connection is still closed and all network resources are freed, but it's undefined whether the messages marked for deletion were really deleted or not.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Disconnect(System.Boolean)">
            <summary>
            Deletes any messages marked as deleted and terminate the connection.
            </summary>
            <param name="rollbackChanges"><c>true</c> if messages marked as deleted should be left on the server.</param>
            <returns>The exit message returned by the server.</returns>
            <remarks>Represents POP3 QUIT command, with optional preceeding RSET.</remarks>	
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Authenticate(ComponentPro.Net.Mail.Pop3AuthenticationMethod)">
            <summary>
            Authenticates the user to the remote POP3 server using the specified authentication method that does not require credentials. Only NTLM and External methods are supported.
            </summary>
            <param name="method">The authentication method. Only NTLM or External.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Authenticate(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String)">
            <summary>
            Authenticates the user to the POP3 server using the specified GSSAPI parameters.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Authenticate(System.String,System.String,ComponentPro.Net.Mail.Pop3AuthenticationMethod)">
            <summary>
            Authenticates the specified user to the remote POP3 server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <param name="method">The authentication method.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Authenticate(System.String,System.String)">
            <summary>
            Authenticates the specified user to the remote POP3 server with the specified credentials using the <see cref="T:ComponentPro.Net.Mail.Pop3AuthenticationMethod">Auto</see> mode.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
            <remarks>
            UltimateMail will try to use the most secure method supported by the server but will downgrade to less secure methods (to the simplest "LOGIN account password" authentication in the worst case) if better methods are not available.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Undelete">
            <summary>
            Undelete messages - unmarks any messages that have been marked as deleted.
            </summary>
            <remarks>Represents POP3 RSET command.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.Delete(System.Int32)">
            <summary>
            Flags the specified message for deletion from the server.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <remarks>
            <p>
            Messages flagged for deletion are actually removed from the server on <see cref="O:ComponentPro.Net.Mail.Pop3.Disconnect"/> method call. Until this moment, you can remove the deletion status for all messages flagged as deleted by calling <see cref="M:ComponentPro.Net.Mail.Pop3.Undelete"/>  method.
            </p>
            <p>Represents POP3 DELE command.</p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.UpgradeConnection">
            <summary>
            Secures the connection with TLS/SSL using default parameters.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ListMessages(ComponentPro.Net.Mail.Pop3EnvelopeParts)">
            <summary>
            Retrieves a list of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> in the currently selected mailbox. Each message in the list contains the specified envelope parts.
            </summary>
            <param name="parts">The message elements to retrieve.</param>
            <returns>The list of messages.</returns>
            <remarks>Uses either POP3 LIST command, UIDL command, or a combination of both.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ListMessages">
            <summary>
            Retrieves a list of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> containing unique ID and length of each message in the mailbox.
            </summary>
            <returns>A collection of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/>.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessageHeaders(System.Int32,System.IO.Stream)">
            <summary>
            Downloads the headers of a message with the specified inbox index from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="output">Stream that will receive the message.</param>
            <returns>On success, the length of the message in bytes is returned.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadPop3Message(System.Int32,ComponentPro.Net.Mail.Pop3EnvelopeParts)">
            <summary>
            Retrieves information about a message with the specified sequence number.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="parts">The message elements to retrieve.</param>
            <returns>A <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> object.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessage(System.Int32,System.IO.Stream)">
            <summary>
            Downloads the specified message from the server and writes its data into a supplied stream.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="output">Stream that will receive the message.</param>
            <returns>On success, the length of the message in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMessage(System.Int32,System.String)">
            <summary>
            Downloads the specified message from the server and writes its data into a local file.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <param name="fileName">The path of the local file. This cannot be a directory.</param>
            <returns>On success, the length of the message in bytes.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.DownloadMailMessage(System.Int32)">
            <summary>
            Completely downloads the specified message from the server and loads it into an instance of the <see cref="T:ComponentPro.Net.Mail.MailMessage"/> class.
            </summary>
            <param name="messageInboxIndex">The ordinal position of the message in the inbox. It must be in the range from 1 to <see cref="P:ComponentPro.Net.Mail.Pop3.MessageCount"/>.</param>
            <returns>A <see cref="T:ComponentPro.Net.Mail.MailMessage"/> containing message information.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.GetMessageInboxIndex(System.String)">
            <summary>
            Tries to retrieve the inbox index of the specified message by unique ID.
            </summary>
            <param name="uniqueId">Unique ID of the message.</param>
            <returns>On success, the message inbox index; otherwise a null reference (Nothing in VB.NET) if not found.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.SendCommand(System.String,System.Boolean)">
            <summary>
            Sends a custom command to the server.
            </summary>
            <param name="command">User-defined command text.</param>
            <param name="multiline">Indicates whether the response for the command is multiline or single line.</param>
            <remarks>To read the server's response, use <see cref="M:ComponentPro.Net.Mail.Pop3.ReadResponse"/> method.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ReadResponse">
            <summary>
            Returns the corresponding response of the POP3 server to the command that was sent using the <see cref="M:ComponentPro.Net.Mail.Pop3.SendCommand(System.String,System.Boolean)"/> method.
            </summary>
            <returns>Response of the POP3 server.</returns>
            <remarks>
            <see cref="M:ComponentPro.Net.Mail.Pop3.ReadResponse"/> should be called once if the response is a single line; otherwise it must be called multiple times.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representing this object</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3.GetMailboxStat">
            <summary>
            Sends a STAT command to a POP3 server and parse the response.
            </summary>
            <returns>The <see cref="T:ComponentPro.Net.Mail.Pop3MailboxStat">mailbox information object</see>.</returns>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.AuthenticateCompleted">
            <summary>
            Occurs when an <see cref="O:ComponentPro.Net.Mail.Pop3.AuthenticateAsync">asynchronous authentication operation</see> completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.ConnectCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.ConnectAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.DisconnectCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.DisconnectAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.ReadResponseCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.ReadResponseAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.SendCommandCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.SendCommandAsync"/> operation completes.
            </summary>        
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.GetMailboxStatCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.GetMailboxStatAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.UpgradeConnectionCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.UpgradeConnectionAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.UndeleteCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.UndeleteAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.DeleteCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.DeleteAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.ListMessagesCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.ListMessagesAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.DownloadMessageHeadersCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.DownloadMessageHeadersAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.DownloadPop3MessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.DownloadPop3MessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.DownloadMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.DownloadMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.DownloadMailMessageCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.DownloadMailMessageAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.GetMessageInboxIndexCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Pop3.GetMessageInboxIndexAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.CommandResponse">
            <summary>
            Occurs when a command has been sent to or a response is received from the server.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.StateChanged">
            <summary>
            Occurs when the state of the <see cref="T:ComponentPro.Net.Mail.Pop3"/> object is changed.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.Progress">
            <summary>
            Occurs when data is send or received.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.MessageListProgress">
            <summary>
            Occurs when message list is downloading.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.CertificateReceived">
            <summary>
            Occurs when a POP3 server's certificate was received and verified.
            </summary>
            <seealso cref="E:ComponentPro.Net.Mail.Pop3.CertificateRequired"/>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.CertificateRequired">
            <summary>
            Occurs when a client certificate is required by the POP3 server, or the one provided was not accepted.
            </summary>
            <seealso cref="E:ComponentPro.Net.Mail.Pop3.CertificateReceived"/>
        </member>
        <member name="E:ComponentPro.Net.Mail.Pop3.TlsDebug">
            <summary>
            Occurs when a TLS/SSL event is processed.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.UserName">
            <summary>
            Gets the user of the connected session, or null if not connected.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.ServerName">
            <summary>
            Gets the host name of the connected session, or null if not connected.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.ServerPort">
            <summary>
            Gets the SFTP port of the connected session, or 0 if not connected.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.Proxy">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Net.WebProxyEx">server proxy</see>, if any, used to connect to the remote server.
            </summary>
            <value>The <see cref="T:ComponentPro.Net.WebProxyEx">server proxy</see>, if any, used to connect to the remote server.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.Encoding">
            <summary>
            Gets or sets the <see cref="T:System.Text.Encoding">Encoding</see> that is used to encode commands sent to the server, and decode replies from the server.
            </summary>
            <value>An <see cref="T:System.Text.Encoding">Encoding</see> value representing the encoding format. 
            By default, <see cref="T:System.Text.Encoding">Encoding.Default</see>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.Config">
            <summary>
            Gets or sets POP3 object settings.
            </summary>
            <value>POP3 object settings.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.SupportedFeatures">
            <summary>
            Gets the bit field specifying the list of the server capabilities.
            </summary>
            <value>Extensions supported by the server.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.SupportedAuthenticationMethods">
            <summary>
            Gets the list of supported authentication methods.
            </summary>
            <returns>The list of supported authentication methods.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.IsConnectionSecured">
            <summary>
            Gets a boolean value indicating whether the current connection (if any) is secured with TLS/SSL layer.
            </summary>
            <value><c>true</c> if the current connection is TLS/SSL; <c>false</c> if the connection is not secure.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.Timeout">
            <summary>
            Gets or sets a value, in milliseconds, indicating after what period of time an operation (sending commands, waiting for responses or time between data buffer transfers) should timeout. 
            </summary>
            <remarks>
            By default, this property is set to 60000 (60 seconds). Minimal value is 1000. A value of -1 or 0 indicates that the request does not timeout.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.AbortTimeout">
            <summary>
            Gets or sets a value, in milliseconds, indicating after what period of time a POP3 <see cref="M:ComponentPro.Net.Mail.Pop3.Cancel">abort operation</see> should timeout. 
            </summary>
            <remarks>
            By default, this property is set to 3000 (3 seconds). Minimal value is 1000.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.State">
            <summary>
            Gets the current state of the <see cref="T:ComponentPro.Net.Mail.Pop3"/> object.
            </summary>
            <value>The current state.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.LocalEndPoint">
            <summary>
            Gets the local client <see cref="T:System.Net.EndPoint"/>.
            </summary>
            <value>The <see cref="T:System.Net.EndPoint"/> that the component is using for communications.</value>
            <remarks>
            The <see cref="P:ComponentPro.Net.Mail.Pop3.LocalEndPoint"/> property gets an <see cref="T:System.Net.EndPoint"/> that contains the local IP address and port number to which your Socket is bound. 
            You must cast this <see cref="T:System.Net.EndPoint"/> to an <see cref="T:System.Net.IPEndPoint"/> before retrieving any information. 
            You can then call the <see cref="P:System.Net.IPEndPoint.Address"/> method to retrieve the local <see cref="T:System.Net.IPAddress"/>, and the <see cref="P:System.Net.IPEndPoint.Port"/> method to retrieve the local port number.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.RemoteEndPoint">
            <summary>
            Gets the remote server <see cref="T:System.Net.EndPoint"/>.
            </summary>
            <value>The <see cref="T:System.Net.EndPoint"/> with which the Socket is communicating.</value>
            <remarks>
            If you are using a connection-oriented protocol, the <see cref="P:ComponentPro.Net.Mail.Pop3.RemoteEndPoint"/> property gets the <see cref="T:System.Net.EndPoint"/> that contains the remote 
            IP address and port number to which the Socket is connected. If you are using a connectionless protocol, 
            <see cref="P:ComponentPro.Net.Mail.Pop3.RemoteEndPoint"/> contains the default remote IP address and port number with which the Socket will communicate. 
            You must cast this <see cref="T:System.Net.EndPoint"/> to an <see cref="T:System.Net.IPEndPoint"/> before retrieving any information. 
            You can then call the <see cref="P:System.Net.IPEndPoint.Address"/> method to retrieve the remote <see cref="T:System.Net.IPAddress"/>, and the <see cref="P:System.Net.IPEndPoint.Port"/> method to retrieve the remote port number.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.IsConnected">
            <summary>
            Gets a boolean value indicating whether the connection has been established.
            </summary>
            <value><c>true</c> if the session is connected; otherwise is <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.IsAuthenticated">
            <summary>
            Gets a boolean value indicating whether the session is authenticated. 
            This is used to check whether the session has been automatically preauthenticated prior to calling the <see cref="O:Authenticate"/> method.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.IsBusy">
            <summary>
            Gets a value indicating whether the component is performing a lengthy operation.
            </summary>
            <value>A bool value indicating whether the component is busy because it's doing some work.</value>
            <returns><c>true</c> if there is any operation in progress; <c>false</c> otherwise.</returns>
            <remarks>
            When an operation is still in progress, it's not possible to start another operation.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.MailboxSize">
            <summary>
            Gets the size of the mailbox in bytes (the sum of lengths of all messages).
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3.MessageCount">
            <summary>
            Gets the number of messages in the mailbox.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3ProgressEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.Pop3.Progress"/> event of a <see cref="T:ComponentPro.Net.Mail.Pop3"/> class.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.Pop3ProgressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3ProgressEventArgs">
            <summary>
            Provides data for the <see cref="E:ComponentPro.Net.Mail.Pop3.Progress"/> event.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3ProgressEventArgs.CalculatePercentage(System.Int64)">
            <summary>
            Calculates progression percentage of the data transfer.
            </summary>
            <param name="messageSize">The message size.</param>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3ProgressEventArgs.State">
            <summary>
            Gets the transfer state.
            </summary>
            <value>The transfer state.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3ProgressEventArgs.BytesTransferred">
            <summary>
            Gets the total number of bytes transferred during the current transfer.
            </summary>
            <value>The number of bytes transferred.</value>
            <remarks>This value is valid only when <see cref="P:ComponentPro.Net.Mail.Pop3ProgressEventArgs.State"/> is not <see cref="P:ComponentPro.Net.Mail.Pop3ProgressEventArgs.State">None</see>.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3ProgressEventArgs.BytesSinceLastEvent">
            <summary>
            Gets the number of bytes transferred during the current transfer since the last time the event was raised.
            </summary>
            <value>The number of bytes transferred since the last time the event was raised.</value>
            <remarks>This value is valid only when <see cref="P:ComponentPro.Net.Mail.Pop3ProgressEventArgs.State"/> is not <see cref="P:ComponentPro.Net.Mail.Pop3ProgressEventArgs.State">None</see>.</remarks>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3Exception">
            <summary>
            The exception that is thrown when an error occurs while using the <see cref="T:ComponentPro.Net.Mail.Pop3"/> component.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Pop3Exception"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3Exception.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Pop3Exception"/> class.
            </summary>
            <remarks>This constructor initializes the <see cref="P:System.Exception.Message">Message</see> property of the new instance to a message that describes the general error.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3Exception.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Pop3Exception"/> class with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3Exception.#ctor(System.String,ComponentPro.Net.Mail.MailClientExceptionStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Pop3Exception"/> class with the specified error message and status.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="status">One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3Exception.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Pop3Exception"/> class with the specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3Exception.#ctor(System.String,System.Exception,ComponentPro.Net.Mail.MailClientExceptionStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Pop3Exception"/> class with the specified error message, status,
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
            <param name="status">One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Exception.Status">
            <summary>
            Gets the status of the response.
            </summary>
            <value>One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3MailboxStat">
            <summary>
            Represents a POP3 mailbox. This class is used for the <see cref="M:ComponentPro.Net.Mail.Pop3.GetMailboxStat"/> method.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3MailboxStat.Size">
            <summary>
            Gets the size of the mailbox in bytes (the sum of lengths of all messages).
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3MailboxStat.MessageCount">
            <summary>
            Gets the number of messages in the mailbox.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3MessageCollection">
            <summary>
            Provides a container for a collection of <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.</returns>
            <remarks>
            A shallow copy of a collection copies only the elements
            of the collection, whether they are reference types or value
            types, but it does not copy the objects that the references
            refer to. The references in the new collection point to the same
            objects that the references in the original collection point to.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>.</returns>
            <remarks>GetEnumerator is the method that implements the foreach statement (For Each in Visual Basic). You should not need to call this method directly.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.GetEnumerator(System.Int32,System.Int32)">
            <summary>
            Returns an enumerator for a section of the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> section that the enumerator should refer to.</param>
            <param name="count">The number of elements in the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> section that the enumerator should refer to.</param>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the specified section of the ArrayList.</returns>
            <remarks>Not supported by ComponentPro POP3 for .NET Compact Framework.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the collection.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Insert(System.Int32,ComponentPro.Net.Mail.Pop3Message)">
            <summary>
            Inserts the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> at the specified position in the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.
            </summary>
            <param name="index">The zero-based index at which the item is to be inserted.</param>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to be inserted to the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Add(ComponentPro.Net.Mail.Pop3Message)">
            <summary>
            Adds the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to be added to the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Remove(ComponentPro.Net.Mail.Pop3Message)">
            <summary>
            Removes the specified <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> from the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to remove from the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Remove(System.String)">
            <summary>
            Removes <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> from the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> having specified unique id.
            </summary>
            <param name="uniqueId">Unique id of the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to remove from the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Remove(System.Int32)">
            <summary>
            Removes <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> from the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> having specified sequence number.
            </summary>
            <param name="messageInboxIndex">Sequence number of the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to remove from the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> at the specified index from the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to remove.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Find(System.String)">
            <summary>
            Returns the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> of the specified unique id.
            </summary>
            <param name="uniqueId">The unique ID of the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to get.</param>
            <returns><see cref="T:ComponentPro.Net.Mail.Pop3Message"/> of the specified name.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Find(System.Int32)">
            <summary>
            Returns the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> of the specified id.
            </summary>
            <param name="messageInboxIndex">The ID of the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to get.</param>
            <returns><see cref="T:ComponentPro.Net.Mail.Pop3Message"/> of the specified name.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Sort">
            <summary>
            Sorts the messages in the entire <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> by sequence number ascending.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> using the specified comparer.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements, or a null reference to sort by sequence number ascending.</param>
            <remarks>This method uses <see cref="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)"/>, which uses QuickSort algorithm. See its description for more information.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in a section of <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> using the specified comparer.
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements, or a null reference to sort by sequence number ascending.</param>
            <remarks>This method uses <see cref="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)"/>, which uses QuickSort algorithm. See its description for more information.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.CopyTo(ComponentPro.Net.Mail.Pop3Message[],System.Int32)">
            <summary>
            Copies the range of elements from the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/> to a one-dimensional
            <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> array, starting at the specified index of the target array.
            </summary>
            <param name="array">One-dimensional zero-based <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> array that is the destination of the elements copied from the collection.</param>
            <param name="arrayIndex">A zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.IndexOf(ComponentPro.Net.Mail.Pop3Message)">
            <summary>
            Returns a zero-based index of the specified item within the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>, or -1 if not found.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to locate.</param>
            <returns>Zero-based index of the specified item within the collection, or -1.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageCollection.Contains(ComponentPro.Net.Mail.Pop3Message)">
            <summary>
            Determines whether the specified item is present in the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to locate.</param>
            <returns>True if present, false otherwise.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3MessageCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access to the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3MessageCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.
            </summary>
            <value>The number of elements contained in the <see cref="T:ComponentPro.Net.Mail.Pop3MessageCollection"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3MessageCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> to get.</param>
            <value><see cref="T:ComponentPro.Net.Mail.Pop3Message"/> of the specified index.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3MessageCollection.System#Collections#Generic#ICollection{ComponentPro#Net#Mail#Pop3Message}#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value>True if read-only, false if read-write.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3Message">
            <summary>
            Contains information about a single mail message on the POP3 server.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.MessageInboxIndex">
            <summary>
            The ordinal position of the message in the inbox. It is greater than zero. 
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.Size">
            <summary>
            Gets the size of the message.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.UniqueId">
            <summary>
            Gets the unique ID of the message.
            </summary>
            <value>Unique ID.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.HeadersParsed">
            <summary>
            Gets the value indicating whether the message headers were parsed.
            </summary>
            <value>True if parsed; false if not.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.HeadersParsingError">
            <summary>
            Gets an error that occurred during message headers parsing.
            </summary>
            <value>An error that occurred during message headers parsing.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.Date">
            <summary>
            Gets the origination date of this message.
            </summary>
            <value>The origination date.</value>
            <remarks>
            The origination date specifies the date and time at which the creator
            of the message indicated that the message was complete and ready to enter
            the mail delivery system.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.From">
            <summary>
            Gets the list of authors of this message.
            </summary>
            <value>The list of authors.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.Sender">
            <summary>
            Gets the sender of this message. May be null.
            </summary>
            <value>The sender of this message.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.ReplyTo">
            <summary>
            Gets the list of addresses that should receive replies
            to this message.
            </summary>
            <value>The list of addresses that should receive replies.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.To">
            <summary>
            Gets the list of addresses of primary recipients of the message.
            </summary>
            <value>The list of primary recipients.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.Bcc">
            <summary>
            Gets the BCC (Blind Carbon Copy) list. It contains recipients that are not to be revealed to other recipients of the message.
            </summary>
            <value>The list of <see cref="T:ComponentPro.Net.Mail.MailAddress"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.CC">
            <summary>
            Gets the list of addresses of others who are to receive the message.
            </summary>
            <value>The list of other recipients.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.MessageIdentifier">
            <summary>
            Gets the unique identifier of the message.
            </summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.InReplyTo">
            <summary>
            Gets the list of identifiers of messages to which the message is a reply.
            </summary>
            <value>The list of message identifiers.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.Subject">
            <summary>
            Gets the subject of the message.
            </summary>
            <value>The subject.</value>
            <remarks>
            This property contains a short string identifying the topic
            of the message.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Message.Headers">
            <summary>
            Gets the list of headers of this entity.
            </summary>
            <value>The list of headers.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3MessageComparisonMethod">
            <summary>
            List of possible compare types for the Pop3MessageComparer class.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3MessageComparisonMethod.MessageInboxIndex">
            <summary>
            Message inbox index.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3MessageComparisonMethod.OriginationDate">
            <summary>
            Origination date.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3MessageComparisonMethod.From">
            <summary>
            From.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3MessageComparisonMethod.To">
            <summary>
            To.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Pop3MessageComparisonMethod.Subject">
            <summary>
            Subject.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3MessageComparer">
            <summary>
            Class used to compare <see cref="T:ComponentPro.Net.Mail.Pop3Message"/> objects. 
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageComparer.#ctor">
            <summary>
            Creates a new instance of Pop3MessageInfoComparer with default sorting by sequence number name and with ascending sort mode.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageComparer.#ctor(ComponentPro.Net.Mail.Pop3MessageComparisonMethod)">
            <summary>
            Creates a new instance of Pop3MessageInfoComparer with specified comparer type and ascending sort mode.
            </summary>
            <param name="comparerType">Type of comparer.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageComparer.#ctor(ComponentPro.Net.Mail.Pop3MessageComparisonMethod,System.Boolean)">
            <summary>
            Creates a new instance of Pop3MessageInfoComparer with specified comparer type and sort mode.
            </summary>
            <param name="comparerType">Type of comparer.</param>
            <param name="ascending">Sort order to use.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3MessageComparer.Compare(System.Object,System.Object)">
            <summary>
            IComparer interface implementation. Compares two instances of Pop3MessageInfo.
            </summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns>Value greater than zero when x is greater then y, zero when they are equal a or less than zero when x is lesser than y.</returns>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3Config">
            <summary>
            Specifies various POP3 settings.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Pop3Config.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Config.AcceptInvalidHeaders">
            <summary>
            Indicates wherher to accept invalid/unparsable headers when parsing mail message.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Config.AcceptInvalidMime">
            <summary>
            Indicates wherher to accept invalid/unparsable S/MIME messages signature entities when parsing mail message.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Config.DontAllowDuplicateUniqueIds">
            <summary>
            Indicates whether to not allow duplicate unique ID and throw an exception while getting message list by the <see cref="O:ComponentPro.Net.Mail.Pop3.ListMessages"/> method.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3Config.AcceptInvalidEndings">
            <summary>
            Indicates whether to accept invalid endings before the actual end of message data.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3MessageListProgressEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.Pop3.MessageListProgress"/> event of a <see cref="T:ComponentPro.Net.Mail.Pop3"/> class.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.Pop3MessageListProgressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.Pop3MessageListProgressEventArgs">
            <summary>
            Provides data for the <see cref="E:ComponentPro.Net.Mail.Pop3.MessageListProgress"/> event.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3MessageListProgressEventArgs.Total">
            <summary>
            Gets the total messages will be downloaded.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3MessageListProgressEventArgs.Downloaded">
            <summary>
            Gets the number of downloaded messages.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Pop3MessageListProgressEventArgs.Percentage">
            <summary>
            Gets the current transfer progress percentage.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.Smtp">
            <summary>
            Contains essential members for communication with standard and secure SMTP servers.
            </summary>
            <remarks>All members of this class are thread-safe.</remarks>
        </member>
        <member name="F:ComponentPro.Net.Mail.Smtp.DefaultPort">
            <summary>
            Default SMTP port (25).
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Smtp.DefaultImplicitSslPort">
            <summary>
            Default SMTP/Implicit SSL port (465).
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.Smtp.AlternativeExplicitSslPort">
            <summary>
            Alternative SMTP/Explicit SSL port (587).
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnCommandResponse(System.Object,ComponentPro.Net.CommandResponseEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Imap.CommandResponse"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.CommandResponseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnStateChanged(System.Object,ComponentPro.Net.Mail.MailClientStateChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.StateChanged"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.MailClientStateChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnProgress(System.Object,ComponentPro.Net.Mail.SmtpProgressEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.StateChanged"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.SmtpProgressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnRejectedRecipient(System.Object,ComponentPro.Net.Mail.SmtpRejectedRecipientEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.RejectedRecipient"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.SmtpRejectedRecipientEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnSendingMessage(System.Object,ComponentPro.Net.Mail.SmtpSendingMessageEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.SendingMessage"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Net.Mail.SmtpSendingMessageEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnCertificateReceived(System.Object,ComponentPro.Security.CertificateReceivedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.CertificateReceived"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Security.CertificateReceivedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnCertificateRequired(System.Object,ComponentPro.Security.CertificateRequiredEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.CertificateRequired"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">A <see cref="T:ComponentPro.Security.CertificateRequiredEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.#ctor">
            <summary>
            Initializes a new instance of the Smtp class.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.Smtp"/> class with a container.
            </summary>
            <param name="container">The container object.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the container is null.</exception>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:ComponentPro.Net.Mail.Smtp"/>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing"><b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Cancel">
            <summary>
            Cancels the current operation.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Connect(System.String)">
            <summary>
            Connects to the SMTP server.
            </summary>
            <param name="serverName">Remote hostname or address in dot notation.</param>
            <returns>Welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Connect(System.String,System.Int32)">
            <summary>
            Connects to the SMTP server.
            </summary>
            <param name="serverName">Remote hostname or address in dot notation.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. (eg. 25).</param>
            <returns>The welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Connect(System.String,ComponentPro.Net.SecurityMode)">
            <summary>
            Connects to the SMTP server with the specified security. Uses port 25 for no SSL, 587 for explicit SSL and 465 for implicit SSL.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string IP address.</param>
            <param name="security">Connection security.</param>
            <returns>The welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Connect(System.String,System.Int32,ComponentPro.Net.SecurityMode)">
            <summary>
            Connects to the SMTP server with the specified security.
            </summary>
            <param name="serverName">Remote hostname or address in dot notation.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. (eg. 25).</param>
            <param name="security">Connection security.</param>
            <returns>The welcome message returned by the server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Disconnect">
            <summary>
            Disconnects from the SMTP server and returns exit message from the server.
            </summary>
            <returns>The exit message returned by the server.</returns>
            <remarks>Represents SMTP QUIT command.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Authenticate(ComponentPro.Net.Mail.SmtpAuthenticationMethod)">
            <summary>
            Authenticates the user to the SMTP server using the specified authentication method that does not require credentials (NTLM or GSSAPI).
            </summary>
            <param name="method">Authentication method.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Authenticate(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String)">
            <summary>
            Authenticates the user to the SMTP server using the specified GSSAPI provider.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Authenticate(System.String,System.String,ComponentPro.Net.Mail.SmtpAuthenticationMethod)">
            <summary>
            Authenticates the specified user to the remote SMTP server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The name of the user to be authenticated.</param>
            <param name="password">The password of the user to be authenticated.</param>
            <param name="method">Authentication method.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Authenticate(System.String,ComponentPro.Net.Mail.SmtpAuthenticationMethod)">
            <summary>
            Authenticates the user to the SMTP server using an OAuth token.
            </summary>
            <param name="token">Authentication token.</param>
            <param name="method">Authentication method (only OAuth 2.0 is supported at the moment).</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Authenticate(System.String,System.String)">
            <summary>
            Authenticates the specified user to the remote SMTP server with the specified credentials.
            </summary>
            <param name="userName">The name of the user to be authenticated.</param>
            <param name="password">The password of the user to be authenticated.</param>
            <remarks>
            UltimateMail will try to use the most secure method supported by the server but will downgrade to less secure methods (to the simplest "LOGIN account password" authentication in the worst case) if better methods are not available.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.UpgradeConnection">
            <summary>
            Secures the connection with TLS/SSL using default parameters.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(ComponentPro.Net.Mail.MailMessage,System.String,System.String)">
            <summary>
            Sends the mail message to the specified recipients.
            </summary>
            <param name="mail">The message to send.</param>
            <param name="sender">Message sender address.</param>
            <param name="recipients">The list of recipients.</param>
            <remarks> 
            <p>
            This method blocks while the e-mail is transmitted. You can specify a time-out value using the <see cref="P:ComponentPro.Net.Mail.Smtp.Timeout"/> property to ensure that the method returns after a specified amount of time elapses.
            </p>
            <p>
            Before calling this method, the <see cref="O:Connect"/> method must be called. You cannot call this method if there is a message being sent asynchronously. 
            If the SMTP host requires credentials, <see cref="O:Authenticate"/> must be called prior to calling this method.
            </p>
            <p>
            If you receive an <see cref="T:ComponentPro.Net.Mail.SmtpException"/> exception, check the <see cref="P:ComponentPro.Net.Mail.SmtpException.Status"/> property to find the reason the operation failed. 
            The <see cref="T:ComponentPro.Net.Mail.SmtpException"/> can also contain an inner exception that indicates the reason the operation failed.
            </p>
            <p>
            The sender address is taken from the "Sender" header field or from the first address in the "From" field if the "Sender" is missing.
            The list of recipients comes from "To", "Cc" and "Bcc" header fields. The "Bcc" field is removed from message headers before sending.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(ComponentPro.Net.Mail.MailMessage)">
            <summary>
            Sends the mail message to the recipients specified in the message.
            </summary>
            <param name="mail">The message to send.</param>
            <remarks> 
            <p>
            This method blocks while the e-mail is transmitted. You can specify a time-out value using the <see cref="P:ComponentPro.Net.Mail.Smtp.Timeout"/> property 
            to ensure that the method returns after a specified amount of time elapses.
            </p>
            <p>
            Before calling this method, the <see cref="O:Connect"/> method must be called. You cannot call this method if there is a message being sent asynchronously. 
            If the SMTP host requires credentials, <see cref="O:Authenticate"/> must be called prior to calling this method.
            </p>
            <p>
            If you receive an SmtpException exception, check the <see cref="P:ComponentPro.Net.Mail.SmtpException.Status"/> property to find the reason the operation failed. 
            The <see cref="T:ComponentPro.Net.Mail.SmtpException"/> can also contain an inner exception that indicates the reason the operation failed.
            </p>
            <p>
            The sender address is taken from the "Sender" header field or from the first address in the "From" field if the "Sender" is missing.
            The list of recipients comes from "To", "Cc" and "Bcc" header fields. The "Bcc" field is removed from message headers before sending.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(System.String,System.String,System.String,System.String)">
            <summary>
            Sends a mail message constructed from the specified parameters to the specified recipients e-mail addresses "<paramref name="to"/>". 
            </summary>
            <param name="from">The e-mail address of the sender.</param>
            <param name="to">The comma-separted list of the recipients e-mail addresses.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(System.IO.Stream)">
            <summary>
            Reads and sends a mail message from the specified stream in MIME format.
            </summary>
            <param name="input">The input stream in MIME format. The stream must contain data in MIME format, other formats are not supported.</param>
            <remarks>
            <p>
            This method blocks while the e-mail is transmitted. 
            You can specify a time-out value using the <see cref="P:ComponentPro.Net.Mail.Smtp.Timeout"/> property to ensure that the method returns after a specified amount of time elapses.
            </p>
            <p>
            Before calling this method, the <see cref="O:Connect"/> method must be called. You cannot call this method if there is a message being sent asynchronously. 
            If the SMTP host requires credentials, <see cref="O:Authenticate"/> must be called prior to calling this method.
            </p>
            <p>
            If you receive an <see cref="T:ComponentPro.Net.Mail.SmtpException"/> exception, check the <see cref="P:ComponentPro.Net.Mail.SmtpException.Status"/> property to find the reason the operation failed. 
            The <see cref="T:ComponentPro.Net.Mail.SmtpException"/> can also contain an inner exception that indicates the reason the operation failed.
            </p>
            <p>
            The sender address is taken from the "Sender" header field or from the first address in the "From" field if the "Sender" is missing.
            The list of recipients comes from "To", "Cc" and "Bcc" header fields. The "Bcc" field is removed from message headers before sending.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(System.String)">
            <summary>
            Reads and sends a mail message from the specified local file in MIME format.
            </summary>
            <param name="fileName">The path to the mail message file. The file must be in MIME format, other formats are not supported.</param>
            <remarks>
            <p>
            This method blocks while the e-mail is transmitted. You can specify a time-out value using the 
            <see cref="P:ComponentPro.Net.Mail.Smtp.Timeout"/> property to ensure that the method returns after a specified amount of time elapses.
            </p>
            <p>
            Before calling this method, the <see cref="O:Connect"/> method must be called. You cannot call this method if there is a message being sent asynchronously. 
            If the SMTP host requires credentials, <see cref="O:Authenticate"/> must be called prior to calling this method.
            </p>
            <p>
            If you receive an SmtpException exception, check the <see cref="P:ComponentPro.Net.Mail.SmtpException.Status"/> property to find the reason the operation failed. 
            The <see cref="T:ComponentPro.Net.Mail.SmtpException"/> can also contain an inner exception that indicates the reason the operation failed.
            </p>
            <p>
            The sender address is taken from the "Sender" header field or from the first address in the "From" field if the "Sender" is missing.
            The list of recipients comes from "To", "Cc" and "Bcc" header fields. The "Bcc" field is removed from message headers before sending.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Verify(System.String)">
            <summary>
            Verifies if given email address is accepted by the server without actual submitting of the message data.
            </summary>
            <param name="toEmailAddress">The email address of the recipient.</param>
            <returns>An <see cref="T:ComponentPro.Net.Mail.SmtpResponse"/> object containing the verification result. On success, the resulting <see cref="T:ComponentPro.Net.Mail.SmtpResponse"/>
            will have a <see cref="P:ComponentPro.Net.Mail.SmtpResponse.Group"/> of 2.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendCommand(System.String)">
            <summary>
            Sends user-defined command to the server.
            </summary>
            <param name="command">User-defined command text (without line terminator).</param>
            <remarks>
            After calling this method. You need to call the <see cref="M:ComponentPro.Net.Mail.Smtp.ReadResponse"/> method to read the response of the server for the command you have sent.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ReadResponse">
            <summary>
            Returns the corresponding response of the SMTP server to the command that was sent using the <see cref="M:ComponentPro.Net.Mail.Smtp.SendCommand(System.String)"/> method.
            </summary>
            <returns>Response of the SMTP server.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representing this object</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.KeepAlive">
            <summary>
            Sends a NOOP command to the server to keep the connection alive.
            </summary>
            <remarks>
            This method is useful for keeping the connection alive when there is no real activity.
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.EnhancedTurn(System.String)">
            <summary>
            Sends the ETRN command to the server to start processing the message queue for a specified node (domain).
            </summary>
            <param name="nodeName">The node name, which usually corresponds to a domain name.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(ComponentPro.Net.Mail.MailMessage,System.String,System.Int32)">
            <summary>
            Sends the mail message.
            </summary>
            <param name="message">The message to send.</param>
            <param name="serverName">The SMTP server address.</param>
            <param name="serverPort">The SMTP server port.</param>
            <remarks> 
            <p>
            This method blocks while the e-mail is transmitted.
            </p>
            <p>
            If you receive an <see cref="T:ComponentPro.Net.Mail.SmtpException"/> exception, check the <see cref="P:ComponentPro.Net.Mail.SmtpException.Status"/> property to find the reason the operation failed. 
            The <see cref="T:ComponentPro.Net.Mail.SmtpException"/> can also contain an inner exception that indicates the reason the operation failed.
            </p>
            <p>
            The sender address is taken from the "Sender" header field or from the first address in the "From" field if the "Sender" is missing.
            The list of recipients comes from "To", "Cc" and "Bcc" header fields. The "Bcc" field is removed from message headers before sending.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(System.String,System.String,System.Int32)">
            <summary>
            Reads and sends a mail message from the specified local file in MIME format.
            </summary>
            <param name="fileName">The path to the mail message file. The file must be in MIME format, other formats are not supported.</param>
            <param name="serverName">The SMTP server address.</param>
            <param name="serverPort">The SMTP server port.</param>
            <remarks> 
            <p>
            This method blocks while the e-mail is transmitted.
            </p>
            <p>
            If you receive an <see cref="T:ComponentPro.Net.Mail.SmtpException"/> exception, check the <see cref="P:ComponentPro.Net.Mail.SmtpException.Status"/> property to find the reason the operation failed. 
            The <see cref="T:ComponentPro.Net.Mail.SmtpException"/> can also contain an inner exception that indicates the reason the operation failed.
            </p>
            <p>
            The sender address is taken from the "Sender" header field or from the first address in the "From" field if the "Sender" is missing.
            The list of recipients comes from "To", "Cc" and "Bcc" header fields. The "Bcc" field is removed from message headers before sending.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(ComponentPro.Net.Mail.MailMessage,System.String)">
            <summary>
            Sends the message using the specified SMTP server.
            </summary>
            <param name="message">Message to be sent.</param>
            <param name="serverName">SMTP server hostname or IP address.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(System.String,System.String)">
            <summary>
            Reads and sends a mail message from the specified local file in MIME format using the specified SMTP server and default SMTP port - 25.
            </summary>
            <param name="fileName">The path to the mail message file. The file must be in MIME format, other formats are not supported.</param>
            <param name="serverName">The SMTP server address</param>
            <remarks>
            <p>
            This method blocks while the e-mail is transmitted.
            </p>
            <p>
            If you receive an <see cref="T:ComponentPro.Net.Mail.SmtpException"/> exception, check the <see cref="P:ComponentPro.Net.Mail.SmtpException.Status"/> property to find the reason the operation failed. 
            The <see cref="T:ComponentPro.Net.Mail.SmtpException"/> can also contain an inner exception that indicates the reason the operation failed.
            </p>
            <p>
            The sender address is taken from the "Sender" header field or from the first address in the "From" field if the "Sender" is missing.
            The list of recipients comes from "To", "Cc" and "Bcc" header fields. The "Bcc" field is removed from message headers before sending.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Sends a mail message constructed from the specified parameters using the specified SMTP server.
            </summary>
            <param name="from">The email address of the sender.</param>
            <param name="to">The message comma-separated recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">The server port (eg. 25).</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a mail message constructed from the specified parameters using the specified SMTP server an default SMTP port - 25.
            </summary>
            <param name="from">The email address of the sender.</param>
            <param name="to">The message comma-separated recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(ComponentPro.Net.Mail.MailMessage,ComponentPro.Net.Mail.SmtpSendOptions)">
            <summary>
            Sends the message using the specified SMTP server.
            </summary>
            <param name="message">Message to be sent.</param>
            <param name="configuration">The SmtpSendOptions class.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(System.String,ComponentPro.Net.Mail.SmtpSendOptions)">
            <summary>
            Reads a mail message from the specified local file in MIME format
            and sends it using the specified SMTP server.
            </summary>
            <param name="fileName">The path to the mail message file.</param>
            <param name="configuration">The SmtpSendOptions class.</param>
            <remarks>
            <p>
            The file must be in MIME format, other formats are not supported.
            MIME files often have the '.eml' extension and are produced by Outlook Express.
            In contrast, Outlook produces '.msg' files that are not MIME files and therefore
            cannot be sent using this method.
            </p>
            <p>
            Both sender and the list of recipients are extracted from the message.
            The sender address is taken from the "Sender" header field, or from the first address in the "From" field if the "Sender" is missing.
            The list of recipients comes from "To", "Cc" and "Bcc" header fields.
            Also, the "Bcc" field is removed from message headers prior to sending.
            </p>
            </remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.Send(System.String,System.String,System.String,System.String,ComponentPro.Net.Mail.SmtpSendOptions)">
            <summary>
            Sends a mail message constructed from the specified parameters using the specified SMTP server.
            </summary>
            <param name="from">Message sender.</param>
            <param name="to">Comma-separated list of message recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="configuration">The SmtpSendOptions class.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendDirect(ComponentPro.Net.Mail.MailMessage)">
            <summary>
            Directly sends the message to the recipients' SMTP servers.
            </summary>
            <param name="message">The message to send.</param>
            <returns>A list of rejected recipients.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendDirect(System.String,System.String,System.String,System.String)">
            <summary>
            Directly sends a mail message constructed from the specified parameters to the recipients' SMTP servers.
            </summary>
            <param name="from">The e-mail address of the sender.</param>
            <param name="to">The list of the message comma-separated recipients.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <returns>A list of rejected recipients.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ResolveDomainMx(System.String)">
            <summary>
            Returns the list of available MX records in order of preference of the specified domain.
            </summary>
            <param name="domain">The domain to retrieve the MX records.</param>
            <returns>On success, it returns the list of MX records in order of preference.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnAuthenticateCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.AuthenticateCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(ComponentPro.Net.Mail.SmtpAuthenticationMethod,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronous authenticates the user to the SMTP server using the specified authentication method that does not require credentials (NTLM or GSSAPI).
            </summary>
            <param name="authenticationMethod">The SMTP authentication method.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(ComponentPro.Net.Mail.SmtpAuthenticationMethod,System.Object)">
            <summary>
            Asynchronous authenticates the user to the SMTP server using the specified authentication method that does not require credentials (NTLM or GSSAPI).
            </summary>
            <param name="authenticationMethod">The SMTP authentication method.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(ComponentPro.Net.Mail.SmtpAuthenticationMethod)">
            <summary>
            Asynchronous authenticates the user to the SMTP server using the specified authentication method that does not require credentials (NTLM or GSSAPI).
            </summary>
            <param name="authenticationMethod">The SMTP authentication method.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(System.String,ComponentPro.Net.Mail.SmtpAuthenticationMethod,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the user to the SMTP server using an OAuth token.
            </summary>
            <param name="token">Authentication token.</param>
            <param name="authenticationMethod">Authentication method (only OAuth 2.0 is supported at the moment).</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(System.String,ComponentPro.Net.Mail.SmtpAuthenticationMethod,System.Object)">
            <summary>
            Asynchronously authenticates the user to the SMTP server using an OAuth token.
            </summary>
            <param name="token">Authentication token.</param>
            <param name="authenticationMethod">Authentication method (only OAuth 2.0 is supported at the moment).</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(System.String,ComponentPro.Net.Mail.SmtpAuthenticationMethod)">
            <summary>
            Asynchronously authenticates the user to the SMTP server using an OAuth token.
            </summary>
            <param name="token">Authentication token.</param>
            <param name="authenticationMethod">Authentication method (only OAuth 2.0 is supported at the moment).</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(System.String,System.String,ComponentPro.Net.Mail.SmtpAuthenticationMethod,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote SMTP server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The name of the user to be authenticated.</param>
            <param name="password">The password of the user to be authenticated.</param>
            <param name="authenticationMethod">Authentication method.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(System.String,System.String,ComponentPro.Net.Mail.SmtpAuthenticationMethod,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote SMTP server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The name of the user to be authenticated.</param>
            <param name="password">The password of the user to be authenticated.</param>
            <param name="authenticationMethod">Authentication method.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(System.String,System.String,ComponentPro.Net.Mail.SmtpAuthenticationMethod)">
            <summary>
            Asynchronously authenticates the specified user to the remote SMTP server with the specified credentials using the specified authentication method.
            </summary>
            <param name="userName">The name of the user to be authenticated.</param>
            <param name="password">The password of the user to be authenticated.</param>
            <param name="authenticationMethod">Authentication method.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the user to the SMTP server using the specified GSSAPI provider.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Asynchronously authenticates the user to the SMTP server using the specified GSSAPI provider.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(ComponentPro.Net.SspiAuthenticationMethod,System.String,System.String,System.String,System.String)">
            <summary>
            Asynchronously authenticates the user to the SMTP server using the specified GSSAPI provider.
            </summary>
            <param name="method">Requested SSPI mechanism ('NTLM', 'Kerberos' or 'Negotiate').</param>
            <param name="targetName">The target name. If it is set to null ('Nothing' in VB.NET), server hostname will be used instead.</param>
            <param name="userName">The user name. If it is set to null ('Nothing' in VB.NET), integrated authentication (single sign-on) will be used.</param>
            <param name="password">User's password. Can be set to null ('Nothing' in VB.NET) if integrated authentication (single sign-on) is to be used.</param>
            <param name="domain">User's domain. If it is set to null ('Nothing' in VB.NET), it will be determined from the user name. If not available, the default domain will be used.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote SMTP server with the specified credentials.
            </summary>
            <param name="userName">The name of the user to be authenticated.</param>
            <param name="password">The password of the user to be authenticated.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronously authenticates the specified user to the remote SMTP server with the specified credentials.
            </summary>
            <param name="userName">The name of the user to be authenticated.</param>
            <param name="password">The password of the user to be authenticated.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.AuthenticateAsync(System.String,System.String)">
            <summary>
            Asynchronously authenticates the specified user to the remote SMTP server with the specified credentials.
            </summary>
            <param name="userName">The name of the user to be authenticated.</param>
            <param name="password">The password of the user to be authenticated.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnConnectCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.String})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.ConnectCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to the SMTP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,System.Object)">
            <summary>
            Asynchronously connects to the SMTP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String)">
            <summary>
            Asynchronously connects to the SMTP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,System.Int32,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to the SMTP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. (eg. 25).</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,System.Int32,System.Object)">
            <summary>
            Asynchronously connects to the SMTP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. (eg. 25).</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,System.Int32)">
            <summary>
            Asynchronously connects to the SMTP server.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">Remote port, a number between 1 and 65535, inclusive. (eg. 25).</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,System.Int32,ComponentPro.Net.SecurityMode,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to the SMTP server with the specified security.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">The server port (eg. 465).</param>
            <param name="security">SMTP security type.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,System.Int32,ComponentPro.Net.SecurityMode,System.Object)">
            <summary>
            Asynchronously connects to the SMTP server with the specified security.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">The server port (eg. 465).</param>
            <param name="security">SMTP security type.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,System.Int32,ComponentPro.Net.SecurityMode)">
            <summary>
            Asynchronously connects to the SMTP server with the specified security.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string address.</param>
            <param name="serverPort">The server port (eg. 465).</param>
            <param name="security">SMTP security type.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,ComponentPro.Net.SecurityMode,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously connects to the SMTP server with the specified security. Uses port 25 for no SSL, 587 for explicit SSL and 465 for implicit SSL.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string IP address.</param>
            <param name="security">SMTP security type.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,ComponentPro.Net.SecurityMode,System.Object)">
            <summary>
            Asynchronously connects to the SMTP server with the specified security. Uses port 25 for no SSL, 587 for explicit SSL and 465 for implicit SSL.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string IP address.</param>
            <param name="security">SMTP security type.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ConnectAsync(System.String,ComponentPro.Net.SecurityMode)">
            <summary>
            Asynchronously connects to the SMTP server with the specified security. Uses port 25 for no SSL, 587 for explicit SSL and 465 for implicit SSL.
            </summary>
            <param name="serverName">The server address - either a hostname or a dotted string IP address.</param>
            <param name="security">SMTP security type.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnDisconnectCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{System.String})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.DisconnectCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.DisconnectAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{System.String},System.Object)">
            <summary>
            Asynchronously disconnects from the SMTP server and returns exit message from the server.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
            <remarks>This method represents SMTP QUIT command.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.DisconnectAsync(System.Object)">
            <summary>
            Asynchronously disconnects from the SMTP server and returns exit message from the server.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.DisconnectAsync">
            <summary>
            Asynchronously disconnects from the SMTP server and returns exit message from the server.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnReadResponseCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.SmtpResponse})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.ReadResponseCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:ComponentPro.ExtendedAsyncCompletedEventArgs`1"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ReadResponseAsync(ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.SmtpResponse},System.Object)">
            <summary>
            Asynchronously returns the corresponding response of the SMTP server to the command that was sent using the <see cref="M:ComponentPro.Net.Mail.Smtp.SendCommand(System.String)"/> method.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ReadResponseAsync(System.Object)">
            <summary>
            Asynchronously returns the corresponding response of the SMTP server to the command that was sent using the <see cref="M:ComponentPro.Net.Mail.Smtp.SendCommand(System.String)"/> method.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.ReadResponseAsync">
            <summary>
            Asynchronously returns the corresponding response of the SMTP server to the command that was sent using the <see cref="M:ComponentPro.Net.Mail.Smtp.SendCommand(System.String)"/> method.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnSendCommandCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.SendCommandCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendCommandAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sends user-defined command to the server.
            </summary>
            <param name="command">User-defined command text (without line terminator).</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendCommandAsync(System.String,System.Object)">
            <summary>
            Asynchronously sends user-defined command to the server.
            </summary>
            <param name="command">User-defined command text (without line terminator).</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendCommandAsync(System.String)">
            <summary>
            Asynchronously sends user-defined command to the server.
            </summary>
            <param name="command">User-defined command text (without line terminator).</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnUpgradeConnectionCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.UpgradeConnectionCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.UpgradeConnectionAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously secures the connection with TLS/SSL using default parameters.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.UpgradeConnectionAsync(System.Object)">
            <summary>
            Asynchronously secures the connection with TLS/SSL using default parameters.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.UpgradeConnectionAsync">
            <summary>
            Asynchronously secures the connection with TLS/SSL using default parameters.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnKeepAliveCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.KeepAliveCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.KeepAliveAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sends a NOOP command to the server to keep the connection alive.
            </summary>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.KeepAliveAsync(System.Object)">
            <summary>
            Asynchronously sends a NOOP command to the server to keep the connection alive.
            </summary>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.KeepAliveAsync">
            <summary>
            Asynchronously sends a NOOP command to the server to keep the connection alive.
            </summary>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnEnhancedTurnCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.EnhancedTurnCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.EnhancedTurnAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sends the ETRN command to the server to start processing the message queue for a specified node (domain).
            </summary>
            <param name="nodeName">The node name, which usually corresponds to a domain name.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.EnhancedTurnAsync(System.String,System.Object)">
            <summary>
            Asynchronously sends the ETRN command to the server to start processing the message queue for a specified node (domain).
            </summary>
            <param name="nodeName">The node name, which usually corresponds to a domain name.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.EnhancedTurnAsync(System.String)">
            <summary>
            Asynchronously sends the ETRN command to the server to start processing the message queue for a specified node (domain).
            </summary>
            <param name="nodeName">The node name, which usually corresponds to a domain name.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.GetDomainMXAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String[]},System.Object)">
            <summary>
            Asynchronously returns the list of available MX records in order of preference of the specified domain.
            </summary>
            <param name="domain">The domain to retrieve the MX records.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.GetDomainMXAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{System.String[]})">
            <summary>
            Begins an asynchronous operation to execute a command on the FTP server.
            </summary>
            <param name="domain">The domain to retrieve the MX records.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnVerifyCompleted(System.Object,ComponentPro.ExtendedAsyncCompletedEventArgs{ComponentPro.Net.Mail.SmtpResponse})">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.VerifyCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:ComponentPro.ExtendedAsyncCompletedEventArgs`1"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.VerifyAsync(System.String,ComponentPro.ExtendedAsyncCompletedEventHandler{ComponentPro.Net.Mail.SmtpResponse},System.Object)">
            <summary>
            Asynchronously verifies if given email address is accepted by the server without actual submitting of the message data.
            </summary>
            <param name="toEmailAddress">The email address of the recipient.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.VerifyAsync(System.String,System.Object)">
            <summary>
            Asynchronously verifies if given email address is accepted by the server without actual submitting of the message data.
            </summary>
            <param name="toEmailAddress">The email address of the recipient.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.VerifyAsync(System.String)">
            <summary>
            Asynchronously verifies if given email address is accepted by the server without actual submitting of the message data.
            </summary>
            <param name="toEmailAddress">The email address of the recipient.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.OnSendCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:ComponentPro.Net.Mail.Smtp.SendCompleted"/> event.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(ComponentPro.Net.Mail.MailMessage,System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sends the mail message to the specified recipients.
            </summary>
            <param name="mail">The message to send.</param>
            <param name="sender">Message sender address.</param>
            <param name="recipients">The list of recipients.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(ComponentPro.Net.Mail.MailMessage,System.String,System.String,System.Object)">
            <summary>
            Asynchronously sends the mail message to the specified recipients.
            </summary>
            <param name="mail">The message to send.</param>
            <param name="sender">Message sender address.</param>
            <param name="recipients">The list of recipients.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(ComponentPro.Net.Mail.MailMessage,System.String,System.String)">
            <summary>
            Asynchronously sends the mail message to the specified recipients.
            </summary>
            <param name="mail">The message to send.</param>
            <param name="sender">Message sender address.</param>
            <param name="recipients">The list of recipients.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(ComponentPro.Net.Mail.MailMessage,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sends the mail message to the recipients specified in the message.
            </summary>
            <param name="mail">The message to send.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(ComponentPro.Net.Mail.MailMessage,System.Object)">
            <summary>
            Asynchronously sends the mail message to the recipients specified in the message.
            </summary>
            <param name="mail">The message to send.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(ComponentPro.Net.Mail.MailMessage)">
            <summary>
            Asynchronously sends the mail message to the recipients specified in the message.
            </summary>
            <param name="mail">The message to send.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(System.String,System.String,System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sends a mail message constructed from the specified parameters to the specified recipients e-mail addresses "<paramref name="to"/>". 
            </summary>
            <param name="from">The e-mail address of the sender.</param>
            <param name="to">The comma-separted list of the recipients e-mail addresses.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Asynchronously sends a mail message constructed from the specified parameters to the specified recipients e-mail addresses "<paramref name="to"/>". 
            </summary>
            <param name="from">The e-mail address of the sender.</param>
            <param name="to">The comma-separted list of the recipients e-mail addresses.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Asynchronously sends a mail message constructed from the specified parameters to the specified recipients e-mail addresses "<paramref name="to"/>". 
            </summary>
            <param name="from">The e-mail address of the sender.</param>
            <param name="to">The comma-separted list of the recipients e-mail addresses.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The text body of the message.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(System.IO.Stream,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously reads and sends a mail message from the specified stream in MIME format.
            </summary>
            <param name="input">The input stream in MIME format. The stream must contain data in MIME format, other formats are not supported.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(System.IO.Stream,System.Object)">
            <summary>
            Asynchronously reads and sends a mail message from the specified stream in MIME format.
            </summary>
            <param name="input">The input stream in MIME format. The stream must contain data in MIME format, other formats are not supported.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(System.IO.Stream)">
            <summary>
            Asynchronously reads and sends a mail message from the specified stream in MIME format.
            </summary>
            <param name="input">The input stream in MIME format. The stream must contain data in MIME format, other formats are not supported.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously reads and sends a mail message from the specified local file in MIME format.
            </summary>
            <param name="fileName">The path to the mail message file. The file must be in MIME format, other formats are not supported.</param>
            <param name="callback">An optional asynchronous callback to be invoked when this operation completes. This parameter can be null.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(System.String,System.Object)">
            <summary>
            Asynchronously reads and sends a mail message from the specified local file in MIME format.
            </summary>
            <param name="fileName">The path to the mail message file. The file must be in MIME format, other formats are not supported.</param>
            <param name="userState">A user-provided object that identifies this particular asynchronous operation.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="M:ComponentPro.Net.Mail.Smtp.SendAsync(System.String)">
            <summary>
            Asynchronously reads and sends a mail message from the specified local file in MIME format.
            </summary>
            <param name="fileName">The path to the mail message file. The file must be in MIME format, other formats are not supported.</param>
            <returns>An object that references the asynchronous operation.</returns>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.CommandResponse">
            <summary>
            Occurs when a command has been sent to or a response is received from the server.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.StateChanged">
            <summary>
            Occurs when the state of the <see cref="T:ComponentPro.Net.Mail.Smtp"/> object is changed.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.Progress">
            <summary>
            Occurs when data is send or received.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.RejectedRecipient">
            <summary>
            Occurs when a recipient is rejected by the server.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.SendingMessage">
            <summary>
            Occurs when a message is being sent.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.CertificateReceived">
            <summary>
            Occurs when an SMTP server's certificate was received and verified.
            </summary>
            <seealso cref="E:ComponentPro.Net.Mail.Smtp.CertificateRequired"/>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.CertificateRequired">
            <summary>
            Occurs when a client certificate is required by the SMTP server, or the one provided was not accepted.
            </summary>
            <seealso cref="E:ComponentPro.Net.Mail.Smtp.CertificateReceived"/>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.TlsDebug">
            <summary>
            Occurs when a TLS/SSL event is processed.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.UserName">
            <summary>
            Gets the authenticated user name, if available.
            </summary>
            <value>User name, or null (Nothing in VB.NET).</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.ServerName">
            <summary>
            Gets the server name, if available.
            </summary>
            <value>Server name, or null (Nothing in VB.NET).</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.ServerPort">
            <summary>
            Gets the server port, if available.
            </summary>
            <value>server port, or 0.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.Proxy">
            <summary>
            Gets or sets the proxy information to use for connecting and/or logging in through a proxy server.
            </summary>
            <value>The <see cref="T:ComponentPro.Net.WebProxyEx"/> to use to access a remote server.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.Encoding">
            <summary>
            Gets or sets the <see cref="T:System.Text.Encoding">Encoding</see> to use to encode and decode command parameters and server responses.
            </summary>
            <value>The <see cref="T:System.Text.Encoding">Encoding</see> to use to encode and decode command parameters and server responses. Default is <see cref="P:System.Text.Encoding.UTF8"/>.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.Config">
            <summary>
            Gets or sets <see cref="T:ComponentPro.Net.Mail.Smtp"/> object configuration.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.SupportedExtensions">
            <summary>
            Gets the bit field specifying the extensions supported by the server.
            </summary>
            <value>Extensions supported by the server.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.EnabledExtensions">
            <summary>
            Gets or sets the bit field specifying the enabled extensions.
            </summary>
            <value>Enabled extensions.</value>
            <remarks>
            Enabled extensions will be used when appropriate.
            By default, all extensions are enabled.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.SupportedAuthenticationMethods">
            <summary>
            Gets the list of supported authentication methods.
            </summary>
            <returns>The list of supported authentication methods</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.IsConnectionSecured">
            <summary>
            Gets a boolean value indicating whether the current connection (if any) is secured with TLS/SSL layer.
            </summary>
            <value><c>true</c> if the current connection is TLS/SSL; <c>false</c> if the connection is not secure.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.Timeout">
            <summary>
            Gets or sets a value, in milliseconds, indicating after what period of time an SMTP operation 
            (sending commands, waiting for responses or time between data buffer transfers) should timeout. 
            </summary>
            <remarks>
            By default, this property is set to 60000 (60 seconds). Minimal value is 1000. 
            A value of -1 or 0 indicates that the request does not timeout.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.AbortTimeout">
            <summary>
            Gets or sets a value, in milliseconds, indicating after what period of time an SMTP abort operation should timeout. 
            </summary>
            <remarks>
            By default, this property is set to 3000 (3 seconds). Minimal value is 1000.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.State">
            <summary>
            Gets the current state of the <see cref="T:ComponentPro.Net.Mail.Smtp"/> object.
            </summary>
            <value>The current state.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.LocalEndPoint">
            <summary>
            Gets the local client <see cref="T:System.Net.EndPoint"/>.
            </summary>
            <value>The <see cref="T:System.Net.EndPoint"/> that the component is using for communications.</value>
            <remarks>
            The <see cref="P:ComponentPro.Net.Mail.Smtp.LocalEndPoint"/> property gets an <see cref="T:System.Net.EndPoint"/> that contains the local IP address and port number to which your Socket is bound. 
            You must cast this <see cref="T:System.Net.EndPoint"/> to an <see cref="T:System.Net.IPEndPoint"/> before retrieving any information. 
            You can then call the <see cref="P:System.Net.IPEndPoint.Address"/> method to retrieve the local <see cref="T:System.Net.IPAddress"/>, and the <see cref="P:System.Net.IPEndPoint.Port"/> method to retrieve the local port number.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.RemoteEndPoint">
            <summary>
            Gets the remote server <see cref="T:System.Net.EndPoint"/>.
            </summary>
            <value>The <see cref="T:System.Net.EndPoint"/> with which the Socket is communicating.</value>
            <remarks>
            If you are using a connection-oriented protocol, the <see cref="P:ComponentPro.Net.Mail.Smtp.RemoteEndPoint"/> property gets the EndPoint that contains the remote 
            IP address and port number to which the Socket is connected. If you are using a connectionless protocol, 
            <see cref="P:ComponentPro.Net.Mail.Smtp.RemoteEndPoint"/> contains the default remote IP address and port number with which the Socket will communicate. 
            You must cast this <see cref="T:System.Net.EndPoint"/> to an <see cref="T:System.Net.IPEndPoint"/> before retrieving any information. 
            You can then call the <see cref="P:System.Net.IPEndPoint.Address"/> method to retrieve the remote <see cref="T:System.Net.IPAddress"/>, and the <see cref="P:System.Net.IPEndPoint.Port"/> method to retrieve the remote port number.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.IsConnected">
            <summary>
            Gets a boolean value indicating whether the connection has been established.
            </summary>
            <value><c>true</c> if the session is connected; otherwise is <c>false</c>.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:ComponentPro.Net.Mail.Smtp"/> object was disposed.</exception>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.IsAuthenticated">
            <summary>
            Gets a boolean value indicating whether the session is authenticated. 
            This is used to check whether the session has been automatically preauthenticated prior to calling the <see cref="O:Authenticate"/> method.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.DeliveryStatusNotificationType">
            <summary>
            Specifies the conditions under which the SMTP server should generate
            and send a delivery status notification (DSN) messages.
            </summary>
            <value>The DSN conditions.</value>
            <remarks>
            This property is only used if the <see cref="P:ComponentPro.Net.Mail.Smtp.EnabledExtensions">DSN extension</see> is enabled and <see cref="P:ComponentPro.Net.Mail.Smtp.SupportedExtensions">supported</see> by the SMTP server.
            </remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.DeliveryStatusNotificationReturnMessageMethod">
            <summary>
            Specifies how ESMTP Delivery Status Notification messages will be sent to the message sender.
            </summary>
            <value>The <see cref="P:ComponentPro.Net.Mail.Smtp.DeliveryStatusNotificationReturnMessageMethod"/> enum allows you to specify ESMTP Delivery Status Notification (DSN) settings. This option instructs the SMTP server whether it should attach
            the entire original message or headers only in the Delivery Status Notification Message.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.MaxMailSize">
            <summary>
            Gets the maximum mail message size announced by the server.
            </summary>
            <value>Maximum mail message size; or 0 if not announced.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.ServerDomain">
            <summary>
            Gets the domain announced by the server.
            </summary>
            <value>Domain announced by the server.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.FromDomain">
            <summary>
            Gets or sets the domain announced by the client.
            </summary>
            <value>Domain announced by the client.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.Smtp.IsBusy">
            <summary>
            Gets a value indicating whether the component is performing a lengthy operation.
            </summary>
            <value>A bool value indicating whether the component is busy because it's doing some work.</value>
            <returns><c>true</c> if there is any operation in progress; <c>false</c> otherwise.</returns>
            <remarks>
            When an operation is still in progress, it's not possible to start another operation.
            </remarks>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.AuthenticateCompleted">
            <summary>
            Occurs when an <see cref="O:AuthenticateAsync">asynchronous authentication operation</see> completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.ConnectCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Smtp.ConnectAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.DisconnectCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Smtp.DisconnectAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.ReadResponseCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Smtp.ReadResponseAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.SendCommandCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Smtp.SendCommandAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.UpgradeConnectionCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Smtp.UpgradeConnectionAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.KeepAliveCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Smtp.KeepAliveAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.EnhancedTurnCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Smtp.EnhancedTurnAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.VerifyCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Smtp.VerifyAsync"/> operation completes.
            </summary>
        </member>
        <member name="E:ComponentPro.Net.Mail.Smtp.SendCompleted">
            <summary>
            Occurs when an asynchronous <see cref="O:ComponentPro.Net.Mail.Smtp.SendAsync"/> operation completes.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpSendOptions">
            <summary>
            Represents options for some of the <see cref="O:ComponentPro.Net.Mail.Smtp.Send"/> methods.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpSendOptions.#ctor">
            <summary>
            Creates a new instance of <see cref="T:ComponentPro.Net.Mail.SmtpSendOptions"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpSendOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.SmtpSendOptions"/> class and fills it with values read from the specified source.
            </summary>
            <param name="loadFromConfigFile">A boolean value indicating whether to load SMTP configuration from the configuration file.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpSendOptions.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:ComponentPro.Net.Mail.SmtpSendOptions"/> class and fills it with values read from the specified source.
            </summary>
            <param name="loadFromConfigFile">A boolean value indicating whether to load SMTP configuration from the configuration file.</param>
            <param name="useSystemSmtpClient">A boolean value indicating whether to use the system <see cref="T:System.Net.Mail.SmtpClient"/> class for sending emails.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.ServerName">
            <summary>
            Gets or sets the host name or IP address string of the SMTP relay server.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.ServerPort">
            <summary>
            Gets or sets the port number on which to communicate with the SMTP relay server.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.UserName">
            <summary>
            Gets or sets the user name used for SMTP authentication.
            </summary>
            <value>User name.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.Password">
            <summary>
            Gets or sets the user account password on the SMTP relay server.
            </summary>
            <value>Password.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.UseDefaultCredentials">
            <summary>
            Gets or sets the value indicating whether to use the credentials of the current user to log in.
            </summary>
            <value>True to use the credentials of the current user; false to use <see cref="P:ComponentPro.Net.Mail.SmtpSendOptions.UserName"/> and <see cref="P:ComponentPro.Net.Mail.SmtpSendOptions.Password"/> properties.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.Proxy">
            <summary>
            Gets or sets the network proxy to use to access a remote server.
            </summary>
            <value>The <see cref="P:ComponentPro.Net.Mail.SmtpSendOptions.Proxy"/> to use to access a remote server.</value>
            <remark>Only used when <see cref="P:ComponentPro.Net.Mail.SmtpSendOptions.UseSystemSmtpClient"/> is <c>false</c>.</remark>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.AuthenticationMethod">
            <summary>
            Gets or sets the authentication method.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.UseSystemSmtpClient">
            <summary>
            Gets or sets a boolean value indicating whether to use standard <see cref="T:System.Net.Mail.SmtpClient"/> to send email messages. Default value is <c>false</c>.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.UseIisPickupDirectory">
            <summary>
            Gets or sets a boolean value indicating whether to use IIS Pickup Directory for sending messages.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.PickupDirectoryPath">
            <summary>
            Gets or sets the pickup directory path (used when <see cref="P:ComponentPro.Net.Mail.SmtpSendOptions.UseIisPickupDirectory"/> is <c>true</c>).
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.AllowNullSender">
            <summary>
            Allow null sender (&lt;&gt;) to be used.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.SendWithNoBuffer">
            <summary>
            Causes the <see cref="M:ComponentPro.Net.Mail.Smtp.Send(System.String)"/> and <see cref="M:ComponentPro.Net.Mail.Smtp.Send(System.IO.Stream)"/> methods to send message data directly from the input file or stream.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.From">
            <summary>
            Gets or sets the message sender address.
            </summary>
            <value>Message sender address.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.ClientCertificate">
            <summary>
            Gets or sets the client certificate.
            </summary>
            <value>Client certificate.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.Security">
            <summary>
            Gets or sets the SMTP connection security mode.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendOptions.Default">
            <summary>
            Gets the default <see cref="T:ComponentPro.Net.Mail.SmtpSendOptions"/> instance read from application configuration file.
            </summary>
            <remarks>The default instance of <see cref="T:ComponentPro.Net.Mail.SmtpSendOptions"/> is read-only.</remarks>
            <value>The <see cref="T:ComponentPro.Net.Mail.SmtpSendOptions"/> instance read from application configuration file.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpProgressEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.Smtp.Progress"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:ComponentPro.Net.Mail.SmtpProgressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpProgressEventArgs">
            <summary>
            Provides data for the <see cref="E:ComponentPro.Net.Mail.Smtp.Progress"/> event.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpProgressEventArgs.GetData">
            <summary>
            Gets the actual content of the transferred block.
            </summary>
            <returns>Transferred data.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpProgressEventArgs.State">
            <summary>
            Gets the transfer state.
            </summary>
            <value>The transfer state.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpProgressEventArgs.BytesTransferred">
            <summary>
            Gets the total number of bytes transferred during the current transfer.
            </summary>
            <value>The number of bytes transferred.</value>
            <remarks>This value is valid only when <see cref="P:ComponentPro.Net.Mail.SmtpProgressEventArgs.State"/> is not <see cref="P:ComponentPro.Net.Mail.SmtpProgressEventArgs.State">None</see>.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpProgressEventArgs.BytesSinceLastEvent">
            <summary>
            Gets the number of bytes transferred during the current transfer since the last time the event was raised.
            </summary>
            <value>The number of bytes transferred since the last time the event was raised.</value>
            <remarks>This value is valid only when <see cref="P:ComponentPro.Net.Mail.SmtpProgressEventArgs.State"/> is not <see cref="P:ComponentPro.Net.Mail.SmtpProgressEventArgs.State">None</see>.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpProgressEventArgs.DataLength">
            <summary>
            Gets the approximate number of bytes to be transferred during the current transfer (if available).
            </summary>
            <value>Approximate number of bytes to be transferred.</value>
            <remarks>The value is approximate because byte stuffing (inserting additional '.' characters) can occur during transfer.</remarks>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpProgressEventArgs.Percentage">
            <summary>
            Gets the current transfer progress percentage.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpRejectedRecipientEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.Smtp.RejectedRecipient"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:ComponentPro.Net.Mail.SmtpRejectedRecipientEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpRejectedRecipientEventArgs">
            <summary>
            Provides data for the <see cref="E:ComponentPro.Net.Mail.Smtp.RejectedRecipient"/> event.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpRejectedRecipientEventArgs.Recipient">
            <summary>
            Gets the address of rejected recipient.
            </summary>
            <value>Address of rejected recipient.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpRejectedRecipientEventArgs.Response">
            <summary>
            Gets the SMTP server response.
            </summary>
            <value>SMTP response.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpRejectedRecipientEventArgs.Ignore">
            <summary>
            Gets or sets tha value indicating whether to ignore the rejection
            of the recipient and continue the sending operation.
            </summary>
            <value>The value indicating whether to ignore the recipient rejection.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpSendingMessageEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ComponentPro.Net.Mail.Smtp.SendingMessage"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:ComponentPro.Net.Mail.SmtpSendingMessageEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpSendingMessageEventArgs">
            <summary>
            Provides data for the <see cref="E:ComponentPro.Net.Mail.Smtp.SendingMessage"/> event.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpSendingMessageEventArgs.Stream">
            <summary>
            Gets the stream being sent (if seekable).
            </summary>
            <value>The stream being sent.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpException">
            <summary>
            The exception that is thrown when an error occurs while using Smtp component.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpException.GetRejectedRecipients">
            <summary>
            Gets the list of rejected recipients.
            </summary>
            <value>The list of rejected recipients, or null if not applicable.</value>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpException"/> class.
            </summary>
            <remarks>This constructor initializes the <see cref="P:System.Exception.Message">Message</see> property of the new instance to a message that describes the general error.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpException"/> class with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpException.#ctor(System.String,ComponentPro.Net.Mail.MailClientExceptionStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpException"/> class with the specified error message and status.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="status">One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</param>
            <remarks>The status must not be <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus">ProtocolError</see>. Use <see cref="M:ComponentPro.Net.Mail.SmtpException.#ctor(ComponentPro.Net.Mail.SmtpResponse)">SmtpException (SmtpResponse response)</see> constructor for creating protocol error exceptions.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpException.#ctor(System.String,ComponentPro.Net.Mail.MailClientExceptionStatus,ComponentPro.Net.Mail.SmtpRejectedRecipient[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpException"/> class with the specified error message, status, and a list of rejected recipients.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="status">One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</param>
            <param name="rejected">A list of rejected recipients.</param>
            <remarks>The status must not be <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus">ProtocolError</see>. Use <see cref="M:ComponentPro.Net.Mail.SmtpException.#ctor(ComponentPro.Net.Mail.SmtpResponse)">SmtpException (SmtpResponse response)</see> constructor for creating protocol error exceptions.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpException"/> class with the specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpException.#ctor(System.String,System.Exception,ComponentPro.Net.Mail.MailClientExceptionStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpException"/> class with the specified error message, status,
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
            <param name="status">One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</param>
            <remarks>The status must not be <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus">ProtocolError</see>. Use <see cref="M:ComponentPro.Net.Mail.SmtpException.#ctor(ComponentPro.Net.Mail.SmtpResponse)">SmtpException (SmtpResponse response)</see> constructor for creating protocol error exceptions.</remarks>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpException.#ctor(ComponentPro.Net.Mail.SmtpResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpException"/> class with the specified <see cref="T:ComponentPro.Net.Mail.SmtpResponse"/>.
            </summary>
            <param name="response">The <see cref="T:ComponentPro.Net.Mail.SmtpResponse"/>.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpException.Status">
            <summary>
            Gets the status of the response.
            </summary>
            <value>One of the <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus"/> values.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpException.Response">
            <summary>
            Gets the <see cref="T:ComponentPro.Net.Mail.SmtpResponse"/> if the exception.
            </summary>
            <value>The <see cref="T:ComponentPro.Net.Mail.SmtpResponse"/> if <see cref="P:ComponentPro.Net.Mail.SmtpException.Status"/> is <see cref="T:ComponentPro.Net.Mail.MailClientExceptionStatus">ProtocolError</see>; <b>null</b> reference otherwise.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpConfig">
            <summary>
            Specifies various Smtp settings.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpConfig.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpConfig.AllowNullSender">
            <summary>
            Allow null sender (&lt;&gt;) to be used.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpConfig.SendWithNoBuffer">
            <summary>
            Indicates whether to allow the <see cref="O:ComponentPro.Net.Mail.Smtp.Send"/> methods to send message data directly from the input file or stream.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpAuthenticationMethod">
            <summary>
            SMTP client authentication method.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpAuthenticationMethod.Auto">
            <summary>
            Choose automatically.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpAuthenticationMethod.SaslPlain">
            <summary>
            RFC 2595 TLS plaintext authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpAuthenticationMethod.SaslDigestMd5">
            <summary>
            RFC 2831 DIGEST-MD5 authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpAuthenticationMethod.SaslCramMd5">
            <summary>
            RFC 2195 CRAM-MD5 authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpAuthenticationMethod.SaslLogin">
            <summary>
            Login authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpAuthenticationMethod.SaslNtlm">
            <summary>
            NTLM authentication.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpAuthenticationMethod.SaslGssApi">
            <summary>
            GSSAPI/SSPI authentication (only Kerberos, NTLM and Negotiate (SPNEGO) are currently supported).
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpAuthenticationMethod.OAuth20">
            <summary>
            OAuth 2.0 authentication defined by https://developers.google.com/google-apps/gmail/xoauth2_protocol#smtp_protocol_exchange
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpExtensions">
            <summary>
            Defines the SMTP extensions.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.Pipelining">
            <summary>
            Pipelining. Sending SMTP commands in groups.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.Chunking">
            <summary>
            Chunking. Enhanced method of sending message data.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.BinaryMime">
            <summary>
            Binary MIME.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.EightBitMime">
            <summary>
            8bit MIME.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.EnhancedTurn">
            <summary>
            Enhanced turn (ETRN) command support.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.EnhancedStatusCodes">
            <summary>
            Enhanced status codes.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.DeliveryStatusNotifications">
            <summary>
            Delivery status notifications.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.MessageSizeDeclaration">
            <summary>
            Message size declaration.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.ExplicitSecurity">
            <summary>
            Explicit TLS/SSL support (STARTTLS).
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.SmtpExtensions.All">
            <summary>
            All extensions.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.DeliveryStatusNotificationType">
            <summary>
            Specifies the conditions under which the SMTP server should generate and send DSN messages.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.DeliveryStatusNotificationType.None">
            <summary>
            Never generate DSN.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.DeliveryStatusNotificationType.Success">
            <summary>
            Generate DSN on successful delivery.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.DeliveryStatusNotificationType.OnFailure">
            <summary>
            Generate DSN on delivery failure.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.DeliveryStatusNotificationType.Delay">
            <summary>
            Generate DSN if delivery of a message has been delayed for an unusual amount of time.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.DeliveryStatusNotificationType.All">
            <summary>
            All conditions.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.DeliveryStatusNotificationReturnMessageMethod">
            <summary>
            Specifies whether a SMTP server should attach the entire original message or its headers only
            to DSN messages.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.DeliveryStatusNotificationReturnMessageMethod.Default">
            <summary>
            Let the SMTP use its default behavior of including the original message in a DSN message.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.DeliveryStatusNotificationReturnMessageMethod.FullMessage">
            <summary>
            Include the full original message in a DSN message.
            </summary>
        </member>
        <member name="F:ComponentPro.Net.Mail.DeliveryStatusNotificationReturnMessageMethod.HeadersOnly">
            <summary>
            Only include original message headers in a DSN message.
            </summary>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpResponse">
            <summary>
            Contains the response of the SMTP server.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpResponse.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpResponse"/> class with the specified code, description and raw response string.
            </summary>
            <param name="code">The SMTP response code. Must be in range of 100 to 599.</param>
            <param name="description">The description of the response code.</param>
            <param name="raw">Raw SMTP response.</param>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpResponse.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Net.Mail.SmtpResponse"/> class with the specified code, enhanced code, description and raw response string.
            </summary>
            <param name="code">The SMTP response code. Must be in range of 100 to 599.</param>
            <param name="subject">The SMTP enhanced response code subject. Must be in range of 1 to 999.</param>
            <param name="detail">The SMTP enhanced response code detail. Must be in range of 1 to 999.</param>
            <param name="description">The description of the response code.</param>
            <param name="raw">Raw SMTP response.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpResponse.RawResponse">
            <summary>
            Gets the full unparsed response of the SMTP server.
            </summary>
            <value>The full unparsed response of the SMTP server.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpResponse.Description">
            <summary>
            Gets the description of the SMTP response.
            </summary>
            <value>The description of the SMTP response.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpResponse.Code">
            <summary>
            Gets the SMTP response code.
            </summary>
            <value>SMTP response code.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpResponse.Group">
            <summary>
            Gets the group of the SMTP response code.
            </summary>
            <value>The group of the SMTP response code.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpResponse.Success">
            <summary>
            Returns true when last command was completed successfully.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpResponse.Class">
            <summary>
            Gets the class of enhanced SMTP status code, or -1 if not supported.
            </summary>
            <value>The class of enhanced SMTP status code.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpResponse.Subject">
            <summary>
            Gets the subject code of enhanced SMTP status code, or -1 if not supported.
            </summary>
            <value>The subject of enhanced SMTP status code.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpResponse.Detail">
            <summary>
            Gets the detail code of enhanced SMTP status code, or -1 if not supported.
            </summary>
            <value>The detail of enhanced SMTP status code.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpRejectedRecipient">
            <summary>
            Represents a recipient rejected by the SMTP server.
            </summary>
        </member>
        <member name="M:ComponentPro.Net.Mail.SmtpRejectedRecipient.#ctor(System.String,ComponentPro.Net.Mail.SmtpResponse)">
            <summary>
            Creates a new instance of <see cref="T:ComponentPro.Net.Mail.SmtpRejectedRecipient"/> using a specified
            address and response.
            </summary>
            <param name="address">Address of the recipient.</param>
            <param name="response">Response that rejected the recipient.</param>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpRejectedRecipient.Address">
            <summary>
            Gets the address of the rejected recipient.
            </summary>
            <value>Address of the rejected recipient.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpRejectedRecipient.Response">
            <summary>
            Gets the response that rejected the recipient.
            </summary>
            <value>Response that rejected the recipient.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpRejectedRecipient.Error">
            <summary>
            Gets the exception thrown while attempting to deliver the message, if there was any.
            </summary>
            <value>Delivery error.</value>
        </member>
        <member name="T:ComponentPro.Net.Mail.SmtpConnectionState">
            <summary>
            Represents the Smtp object connection state.
            </summary>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpConnectionState.Connection">
            <summary>
            Returns a value indicating whether the object is connected.
            </summary>
            <value>True if connectet; oherwise false.</value>
        </member>
        <member name="P:ComponentPro.Net.Mail.SmtpConnectionState.NativeErrorCode">
            <summary>
            Gets the Win32 socket error code.
            </summary>
            <value>Win32 error code.</value>
            <remarks>Returns 0 if no socket error code is available.</remarks>
        </member>
    </members>
</doc>
